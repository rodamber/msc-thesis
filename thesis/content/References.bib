% Encoding: UTF-8

@InProceedings{Alur:sygus:2013,
  author    = {Rajeev Alur and Rastislav Bodik and Garvit Juniwal and Milo M. K. Martin and Mukund Raghothaman and Sanjit A. Seshia and Rishabh Singh and Armando Solar-Lezama and Emina Torlak and Abhishek Udupa},
  title     = {Syntax-guided synthesis},
  booktitle = {2013 Formal Methods in Computer-Aided Design},
  year      = {2013},
  month     = {oct},
  publisher = {{IEEE}},
  doi       = {10.1109/fmcad.2013.6679385},
  file      = {:Alur_sygus_2013 - Syntax Guided Synthesis.pdf:PDF},
}

@Article{Cheung:2013,
  author     = {Cheung, Alvin and Solar-Lezama, Armando and Madden, Samuel},
  title      = {{Optimizing Database-backed Applications with Query Synthesis}},
  journal    = {SIGPLAN Not.},
  year       = {2013},
  volume     = {48},
  number     = {6},
  pages      = {3--14},
  month      = jun,
  issn       = {0362-1340},
  acmid      = {2462180},
  address    = {New York, NY, USA},
  doi        = {10.1145/2499370.2462180},
  file       = {\:Cheung_2013 - Optimizing Database Backed Applications with Query Synthesis.pdf\:PDF:\:Cheung_2013 - Optimizing Database Backed Applications with Query Synthesis.pdf\:PDF:PDF},
  issue_date = {June 2013},
  keywords   = {performance, program optimization, program synthesis},
  numpages   = {12},
  publisher  = {ACM},
}

@InProceedings{Gulwani:2011,
  author    = {Gulwani, Sumit},
  title     = {{Automating String Processing in Spreadsheets Using Input-output Examples}},
  booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {2011},
  series    = {POPL '11},
  pages     = {317--330},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1926423},
  doi       = {10.1145/1926385.1926423},
  isbn      = {978-1-4503-0490-0},
  keywords  = {program synthesis, programming by example (pbe), spreadsheet programming, string manipulation, user intent, version space algebra},
  location  = {Austin, Texas, USA},
  numpages  = {14},
}

@Article{Gulwani2017,
  author   = {Sumit Gulwani and Oleksandr Polozov and Rishabh Singh},
  title    = {{Program Synthesis}},
  journal  = {Foundations and TrendsÂ® in Programming Languages},
  year     = {2017},
  volume   = {4},
  number   = {1-2},
  pages    = {1-119},
  issn     = {2325-1107},
  doi      = {10.1561/2500000010},
  file     = {:Gulwani2017 - Program Synthesis.pdf:PDF},
  keywords = {rank5},
}

@Article{Itzhaky:SIS:2010,
  author     = {Itzhaky, Shachar and Gulwani, Sumit and Immerman, Neil and Sagiv, Mooly},
  title      = {{A Simple Inductive Synthesis Methodology and Its Applications}},
  journal    = {SIGPLAN Not.},
  year       = {2010},
  volume     = {45},
  number     = {10},
  pages      = {36--46},
  month      = oct,
  issn       = {0362-1340},
  acmid      = {1869463},
  address    = {New York, NY, USA},
  doi        = {10.1145/1932682.1869463},
  issue_date = {October 2010},
  keywords   = {finite differencing, high-level program, inductive synthesis, transformational programming},
  numpages   = {11},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/1932682.1869463},
}

@Article{Jha:oracle:2010,
  author  = {Jha, Susmit and Gulwani, Sumit and Seshia, Sanjit A. and Tiwari, Ashish},
  title   = {{Oracle-guided component-based program synthesis}},
  journal = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - ICSE '10},
  year    = {2010},
  volume  = {1},
  pages   = {215},
  issn    = {0270-5257},
  doi     = {10.1145/1806799.1806833},
  file    = {:Jha_oracle_2010 - Oracle Guided Component Based Program Synthesis.pdf:PDF},
  isbn    = {9781605587196},
  url     = {http://portal.acm.org/citation.cfm?doid =1806799.1806833},
}

@Article{Lau:2000,
  author  = {Lau, Tessa and Domingos, Pedro and Weld, Daniel S},
  title   = {{Version Space Algebra and its Application to Programming by Demonstration}},
  journal = {Icml},
  year    = {2000},
  pages   = {527--534},
  file    = {:Lau_2000 - Version Space Algebra and Its Application to Programming by Demonstration.pdf:PDF},
  isbn    = {1-55860-707-2},
}

@InProceedings{Lau:traces:2003,
  author    = {Lau, Tessa and Domingos, Pedro and Weld, Daniel S.},
  title     = {{Learning Programs from Traces Using Version Space Algebra}},
  booktitle = {Proceedings of the 2Nd International Conference on Knowledge Capture},
  year      = {2003},
  series    = {K-CAP '03},
  pages     = {36--43},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {945654},
  doi       = {10.1145/945645.945654},
  file      = {:Lau_traces_2003 - Learning Programs from Traces Using Version Space Algebra.pdf:PDF},
  isbn      = {1-58113-583-1},
  location  = {Sanibel Island, FL, USA},
  numpages  = {8},
  pdf       = {:Lau_traces_2003 - Learning Programs from Traces Using Version Space Algebra.pdf:PDF},
}

@Article{Lau2003,
  author   = {Lau, Tessa and Wolfman, Steven A. and Domingos, Pedro and Weld, Daniel S.},
  title    = {{Programming by Demonstration Using Version Space Algebra}},
  journal  = {Machine Learning},
  year     = {2003},
  volume   = {53},
  number   = {1},
  pages    = {111--156},
  month    = {Oct},
  issn     = {1573-0565},
  abstract = {Programming by demonstration enables users to easily personalize their applications, automating repetitive tasks simply by executing a few examples. We formalize programming by demonstration as a machine learning problem: given the changes in the application state that result from the user's demonstrated actions, learn the general program that maps from one application state to the next. We present a methodology for learning in this space of complex functions. First we extend version spaces to learn arbitrary functions, not just concepts. Then we introduce the version space algebra, a method for composing simpler version spaces to construct more complex spaces. Finally, we apply our version space algebra to the text-editing domain and describe an implemented system called SMARTedit that learns repetitive text-editing procedures by example. We evaluate our approach by measuring the number of examples required for the system to learn a procedure thatworks on the remainder of examples, and by an informal user study measuring the effort users spend using our system versus performing the task by hand. The results show that SMARTedit is capable of generalizing correctly from as few as one or two examples, and that users generally save a significant amount of effort when completing tasks with SMARTedit's help.},
  day      = {01},
  doi      = {10.1023/A:1025671410623},
  file     = {:Lau2003 - Programming by Demonstration Using Version Space Algebra.pdf:PDF},
  url      = {https://doi.org/10.1023/A:1025671410623},
}

@Article{Le:2014,
  author     = {Le, Vu and Gulwani, Sumit},
  title      = {{FlashExtract: A Framework for Data Extraction by Examples}},
  journal    = {SIGPLAN Not.},
  year       = {2014},
  volume     = {49},
  number     = {6},
  pages      = {542--553},
  month      = jun,
  issn       = {0362-1340},
  acmid      = {2594333},
  address    = {New York, NY, USA},
  doi        = {10.1145/2666356.2594333},
  file       = {:Le_2014 - FlashExtract_ a Framework for Data Extraction by Examples.pdf:PDF},
  issue_date = {June 2014},
  keywords   = {end-user programming, program synthesis, programming by examples},
  numpages   = {12},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2666356.2594333},
}

@InProceedings{Lee:ASP:2018,
  author    = {Lee, Woosuk and Heo, Kihong and Alur, Rajeev and Naik, Mayur},
  title     = {{Accelerating Search-based Program Synthesis Using Learned Probabilistic Models}},
  booktitle = {Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year      = {2018},
  series    = {PLDI 2018},
  pages     = {436--449},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3192410},
  doi       = {10.1145/3192366.3192410},
  isbn      = {978-1-4503-5698-5},
  keywords  = {Domain-specific languages, Statistical methods, Synthesis, Transfer learning},
  location  = {Philadelphia, PA, USA},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/3192366.3192410},
}

@Article{Singh:ranking:2015,
  author    = {Singh, Rishabh and Gulwani, Sumit},
  title     = {{Predicting a Correct Program in Programming by Example}},
  year      = {2015},
  doi       = {10.1007/978-3-319-21690-4},
  editor    = {Daniel Kroening and Corina S. P{\u{a}}s{\u{a}}reanu},
  publisher = {Springer International Publishing},
  url       = {https://www.microsoft.com/en-us/research/wp-content/uploads/2016/06/cav15-1.pdf},
}

@PhdThesis{Solar-Lezama:2008,
  author    = {Solar-Lezama, Armando},
  title     = {{Program Synthesis by Sketching}},
  year      = {2008},
  address   = {Berkeley, CA, USA},
  note      = {AAI3353225},
  advisor   = {Bodik, Rastislav},
  file      = {:/Users/rodamber/Sync/Partilhas/initial-papers/08-Program Synthesis by Sketching.pdf:PDF},
  isbn      = {978-1-109-09745-0},
  publisher = {University of California at Berkeley},
}

@Article{Srivastava:2012,
  author    = {Srivastava, Saurabh and Gulwani, Sumit and Foster, Jerey S.},
  title     = {{Template-Based Program Verification and Program Synthesis}},
  journal   = {International Journal on Software Tools for Technology Transfer},
  year      = {2012},
  volume    = {15},
  number    = {5},
  pages     = {497-518},
  month     = {January},
  edition   = {International Journal on Software Tools for Technology Transfer},
  publisher = {Springer Berlin Heidelberg},
  url       = {https://www.microsoft.com/en-us/research/publication/template-based-program-verification-program-synthesis/},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: fileDirectory:/Users/rodamber/Sync/Biblioteca/Tese;}

@Comment{jabref-meta: fileDirectory-rodamber-Rodrigos-MacBook-Pro.local:/Users/rodamber/Sync/Biblioteca/Tese;}

@Comment{jabref-meta: saveOrderConfig:specified;author;false;year;false;title;false;}
