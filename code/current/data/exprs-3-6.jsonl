{"text":"FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"If (ModuleId <> NullIdentifier(), EncodeHtml(EditRecord1.Record.MODULE.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"FormatText(TR_ActionsList.List.Current.DashboardListOfActions.Proprietario,5,50,False,\"\") + If(Length(TR_ActionsList.List.Current.DashboardListOfActions.Proprietario) > 50,\"...\",\"\")","type":"Text","functions":["FormatText","If","Length"]}
{"text":"If(Length(TR_MyActionsList.List.Current.ACTION.Titulo) > 100,Substr(TR_MyActionsList.List.Current.ACTION.Titulo,0,97) + \"...\",TR_MyActionsList.List.Current.ACTION.Titulo)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(IntranetLinks.List.Current.IntranetLink.Description,0,68) + If(Length(IntranetLinks.List.Current.IntranetLink.Description)>68, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(\n    Length(SettingsTR.List.Current.SETTING.Description) > 50,\n    Substr(SettingsTR.List.Current.SETTING.Description,0,50) + \"...\",\n    SettingsTR.List.Current.SETTING.Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (IntegerToIdentifier( TextToInteger( CompanyId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(QueryCompany.List.Current.COMPANY.Name), \" - <I>New</I>\"), \"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"If (CfgNodeId <> NullIdentifier(), EncodeHtml(CfgNode.Record.CONFIG_NODE.Label), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (IntegerToIdentifier( TextToInteger( GroupId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(QueryGroup.List.Current.GROUP.Name), \" - <I>New</I>\"), \"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"If (UserMasterId <> NullIdentifier(), EncodeHtml( UserName), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (GroupTypeId <> NullIdentifier(), EncodeHtml(GroupTypeEditRecord.Record.GROUP_TYPE.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (LocationTypeId <> NullIdentifier(), EncodeHtml(EditRecord_LocationType.Record.LOCATION_TYPE.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (IntegerToIdentifier( TextToInteger( LocationId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(QueryLocation.List.Current.LOCATION.Name), \" - <I>New</I>\"), \"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"If (PermissionId <> NullIdentifier(), EncodeHtml(EditRecord_Permission.Record.PERMISSION_MASTER.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (DelegationMotiveId <> NullIdentifier(), EncodeHtml(DelegationMotiveER.Record.DELEGATION_MOTIVE.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (IntegerToIdentifier( TextToInteger( CfgNodeId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(CfgNodeR.CONFIG_NODE.Label), \" - <I>New</I>\"), \"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"If (RoleId <> NullIdentifier(), EncodeHtml(RoleER.Record.ROLE.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If (SettingId <> NullIdentifier(), EncodeHtml(SettingER.Record.SETTING.Label), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If(GetAssignedAssetsByUserId.List.Current.User.Is_Active, EmploymentStatus, ToLower(Substr(EmploymentStatus,0,1)) + Substr(EmploymentStatus,1,Length(EmploymentStatus)-1))","type":"Text","functions":["If","ToLower","Substr","Length"]}
{"text":"ToLower(Substr(GetAssetDetails.List.Current.DBBackupFrequency.Label,0,1)) + Substr(GetAssetDetails.List.Current.DBBackupFrequency.Label,1,Length(GetAssetDetails.List.Current.DBBackupFrequency.Label)-1)","type":"Text","functions":["ToLower","Substr","Length"]}
{"text":"ToLower(Substr(VMAssetsTable.List.Current.DBBackupFrequency.Label,0,1)) + Substr(VMAssetsTable.List.Current.DBBackupFrequency.Label,1,Length(VMAssetsTable.List.Current.DBBackupFrequency.Label)-1)","type":"Text","functions":["ToLower","Substr","Length"]}
{"text":"ToLower(Substr(VMAssetsTable.List.Current.VMBackupFrequency.Label,0,1)) + Substr(VMAssetsTable.List.Current.VMBackupFrequency.Label,1,Length(VMAssetsTable.List.Current.VMBackupFrequency.Label)-1)","type":"Text","functions":["ToLower","Substr","Length"]}
{"text":"If(TR_Goals.List.Current.Goals.Value <> \"\", FormatDecimal(TextToDecimal(TR_Goals.List.Current.Goals.Value),2,\".\",\" \"), \"\")","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If (TableRecords1.List.Current.KPI_Structure.Final_Value04 = 0\nor TableRecords1.List.Current.KPI_Structure.Final_Value04=\"\", FormatDecimal(TextToDecimal(TableRecords1.List.Current.KPI_Structure.Final_Value)*3/100,2,\".\",\" \"),\nFormatDecimal(TableRecords1.List.Current.KPI_Structure.Final_Value04,2,\".\",\" \"))\n\n","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(ListRecords1.List.Current.TeamRequest_Capacity.TeamReadyToStartDate = NullDate(),\"-\", Round(ListRecords1.List.Current.TeamRequest_Capacity.TimeToAllocate,2))","type":"Text","functions":["If","NullDate","Round"]}
{"text":"If(AvaliableProjectsConfigTable.List.Current.AvaliableProjectsConfig.UpdatedAt<> NullDate(),AvaliableProjectsConfigTable.List.Current.AvaliableProjectsConfig.UpdatedAt+If(AvaliableProjectsConfigTable.List.Current.USER_MASTER_3.Name = \"\",\"\",NewLine()+AvaliableProjectsConfigTable.List.Current.USER_MASTER_3.Name),\"\")","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"\"<TR class=\"\"TableRecords_\"+If(Mod(Trunc(ListRecords1.List.CurrentRowNumber/7) ,2) = 1,\"EvenLine\",\"OddLine\")+\"\"\">\"","type":"Text","functions":["If","Mod","Trunc"]}
{"text":"If(Length(TableRecords1.List.Current.CRITERIA_GROUP.Description)>90,\n   Substr(TableRecords1.List.Current.CRITERIA_GROUP.Description,0,90)+\"...\",\n   TableRecords1.List.Current.CRITERIA_GROUP.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.CRITERIA.Description)>70,\n   Substr(TableRecords1.List.Current.CRITERIA.Description,0,70)+\"...\",\n   TableRecords1.List.Current.CRITERIA.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UserappTable.List.Current.USERAPPS.Link)>80,\nSubstr(UserappTable.List.Current.USERAPPS.Link,0,80)+\"...\",\nUserappTable.List.Current.USERAPPS.Link)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Comments) > 100, Substr(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Comments, 0, 100) + \"...\", TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Comments)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Next_Milestones) > 100, Substr(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Next_Milestones, 0, 100) + \"...\", TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Next_Milestones)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Previous_Milestones) > 100, Substr(TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Previous_Milestones, 0, 100) + \"...\", TableRecordListMap.List.Current.PROJECT_CONSOLIDATION.Previous_Milestones)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(List.Current.Project_Data.ProjectName)>20,\nSubstr(List.Current.Project_Data.ProjectName,0,20)+\"...\",\nList.Current.Project_Data.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(List.Current.Project_Data.Costumer)>30,\nSubstr(List.Current.Project_Data.Costumer,0,30)+\"...\",\nList.Current.Project_Data.Costumer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\n\n\nIf(Length(TableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.Description)>50,\nSubstr(TableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.Description,0,50)+\"...\",\nTableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.CreatedOn)>16,\nSubstr(TableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.CreatedOn,0,16),\nTableRecordListHistory.List.Current.PROJECT_CONSOLIDATION_PLAN.CreatedOn)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShowRecord1.Record.PROJECT.Description)>50,\nSubstr(ShowRecord1.Record.PROJECT.Description,0,50)+\"...\",\nShowRecord1.Record.PROJECT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Financial_Milestones.ProjectDescription)>50,\nSubstr(TableRecordListProjects.List.Current.Financial_Milestones.ProjectDescription,0,50)+\"...\",\nTableRecordListProjects.List.Current.Financial_Milestones.ProjectDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Financial_Milestones.ProjectName)>50,\nSubstr(TableRecordListProjects.List.Current.Financial_Milestones.ProjectName,0,50)+\"...\",\nTableRecordListProjects.List.Current.Financial_Milestones.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Financial_Milestones.PurchaseOrderName)>50,\nSubstr(TableRecordListProjects.List.Current.Financial_Milestones.PurchaseOrderName,0,50)+\"...\",\nTableRecordListProjects.List.Current.Financial_Milestones.PurchaseOrderName)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"on \" + If(Length(HistoricList.Current.FINANCIAL_MILESTONE_HISTORY.ChangedOn)>16,\nSubstr(HistoricList.Current.FINANCIAL_MILESTONE_HISTORY.ChangedOn,0,16),\nHistoricList.Current.FINANCIAL_MILESTONE_HISTORY.ChangedOn)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTimeMaterials.List.Current.FINANCIAL_MILESTONE.Description)>100,\nSubstr(TableRecordsTimeMaterials.List.Current.FINANCIAL_MILESTONE.Description,0,100)+\"...\",\nTableRecordsTimeMaterials.List.Current.FINANCIAL_MILESTONE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsMilestone.List.Current.FINANCIAL_MILESTONE.Description)>100,\nSubstr(TableRecordsMilestone.List.Current.FINANCIAL_MILESTONE.Description,0,100)+\"...\",\nTableRecordsMilestone.List.Current.FINANCIAL_MILESTONE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecordsRevenueReport.List.Current.REPORT_REVENUE.EmailSentOn=NullDate(),\"\",\"Email sent on: \"+ Substr(TableRecordsRevenueReport.List.Current.REPORT_REVENUE.EmailSentOn,0,16))\n\n","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Length(TableRecordsRevenueReport.List.Current.REPORT_REVENUE.Description)>100,Substr(TableRecordsRevenueReport.List.Current.REPORT_REVENUE.Description,0,100)+\"...\",TableRecordsRevenueReport.List.Current.REPORT_REVENUE.Description)\n\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTraining.List.Current.REPORT_REVENUE_ITEM.ProjectName)>20,Substr(TableRecordsTraining.List.Current.REPORT_REVENUE_ITEM.ProjectName,0,20)+\"...\",TableRecordsTraining.List.Current.REPORT_REVENUE_ITEM.ProjectName)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsPacketDays.List.Current.REPORT_REVENUE_ITEM.ProjectName)>20,Substr(TableRecordsPacketDays.List.Current.REPORT_REVENUE_ITEM.ProjectName,0,20)+\"...\",TableRecordsPacketDays.List.Current.REPORT_REVENUE_ITEM.ProjectName)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsApplicationMaintenance.List.Current.ApplicationMaintenanceList.ProjectName )>20,Substr(TableRecordsApplicationMaintenance.List.Current.ApplicationMaintenanceList.ProjectName,0,20)+\"...\",TableRecordsApplicationMaintenance.List.Current.ApplicationMaintenanceList.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM.ProjectName) > 20, Substr(TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM.ProjectName,0,20) + \"...\", TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM.ProjectName)>20,Substr(TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM.ProjectName,0,20)+\"...\",TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM.ProjectName)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM.ProjectName)>20,Substr(TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM.ProjectName,0,20)+\"...\",TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM.ProjectName)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecordsRevenueReport.List.Current.REPORT_REVENUE_V2.EmailSentOn=NullDate(),\"\",\"Email sent on: \"+ Substr(TableRecordsRevenueReport.List.Current.REPORT_REVENUE_V2.EmailSentOn,0,16))\n\n","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Length(TableRecordsRevenueReport.List.Current.REPORT_REVENUE_V2.Description)>100,Substr(TableRecordsRevenueReport.List.Current.REPORT_REVENUE_V2.Description,0,100)+\"...\",TableRecordsRevenueReport.List.Current.REPORT_REVENUE_V2.Description)\n\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName) > 20, Substr(TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName,0,20) + \"...\", TableRecordsTM_Milestones.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName)>20,Substr(TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName,0,20)+\"...\",TableRecordsTM_TM.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName)>20,Substr(TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName,0,20)+\"...\",TableRecordsFixedPriceTimeBox.List.Current.REPORT_REVENUE_ITEM_V2.ProjectName)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"on \" + If(Length(TableRecordResources.List.Current.PROFILE_RATE_HIST.Time_Stamp)>16,\nSubstr(TableRecordResources.List.Current.PROFILE_RATE_HIST.Time_Stamp,0,16),\nTableRecordResources.List.Current.PROFILE_RATE_HIST.Time_Stamp)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsActualCosts.List.Current.Control_Map.Resource)>30,\nSubstr(TableRecordsActualCosts.List.Current.Control_Map.Resource,0,30)+\"...\",\nTableRecordsActualCosts.List.Current.Control_Map.Resource)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsPlannedCosts.List.Current.Control_Map.Resource)>30,\nSubstr(TableRecordsPlannedCosts.List.Current.Control_Map.Resource,0,30)+\"...\",\nTableRecordsPlannedCosts.List.Current.Control_Map.Resource)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsReports.List.Current.Cross_Charging_Report_List.WorkItemDescription)>30,\nSubstr(TableRecordsReports.List.Current.Cross_Charging_Report_List.WorkItemDescription,0,30)+\"...\",\nTableRecordsReports.List.Current.Cross_Charging_Report_List.WorkItemDescription)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Index(TimesheetItemTable.List.Current.Invoicing_ClientReport.Name, \")\") = -1, \nTimesheetItemTable.List.Current.Invoicing_ClientReport.Name,\nSubstr(TimesheetItemTable.List.Current.Invoicing_ClientReport.Name, \nIndex(TimesheetItemTable.List.Current.Invoicing_ClientReport.Name,\")\")+2, \nLength(TimesheetItemTable.List.Current.Invoicing_ClientReport.Name) - Index(TimesheetItemTable.List.Current.Invoicing_ClientReport.Name,\")\")+2 -1 )\n )\n\n","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"\"on \" + If(Length(TableRecordResources.List.Current.RESOURCE_RATE_HIST.Time_Stamp)>16,\nSubstr(TableRecordResources.List.Current.RESOURCE_RATE_HIST.Time_Stamp,0,16),\nTableRecordResources.List.Current.RESOURCE_RATE_HIST.Time_Stamp)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n\n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ Trim(headerLeft) +\"',\n                center: '\"+ Trim(headerCenter) +\"',\n                right: '\"+ Trim(headerRight) +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\",\n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n\n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\",\n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\",\n\n            editable: true,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n\n                $(\"+e_cal.Id+\").val(xDate(dFormat(start),dFormat(end),allDay));\n                $(\"+ln_notify.Id+\").click();\n                \"+Callback_Select+\"\n            },\n\n            eventClick: function(calEvent, jsEvent, view) {\n                calEvent.ignoreTimezone=false;\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+Callback_Click+\"\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Resize+\"\n            },\n\n            eventRender: function(event, element)\n            {\n                element.find('.fc-event-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool)\n                $('\"+loadingID+\"').show();\n              else\n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n            //DateEvent\n            function xDate(sdate,edate,allDay){\n                var s='DATE|';\n                s=s+0;\n                s=s+'|';\n                //s=s+calEvent.title;\n                s=s+'|';\n                if (allDay)\n                  s=s+allDay;\n                else\n                    s=s+'false';\n                s=s+'|';\n                s=s+sdate;\n                s=s+'|';\n                s=s+edate;\n                s=s+'|';\n                //s=s+calEvent.url;\n                s=s+'|';\n                s=s+'true';\n                s=s+'|';\n                //s=s+calEvent.color;\n                s=s+'|'\n                //s=s+calEvent.description;\n                return s;\n            }\n            //calEvent\n            function sCal(calEvent){\n                var s='CAL|';\n                if (calEvent.id)\n                    s=s+calEvent.id;\n                else\n                     s=s+'0';\n                s=s+'|';\n                s=s+calEvent.title;\n                s=s+'|';\n                s=s+calEvent.allDay;\n                s=s+'|';\n                s=s+dFormat(calEvent.start);\n                s=s+'|';\n                s=s+dFormat(calEvent.end);\n                s=s+'|';\n                if (calEvent.url)\n                    s=s+calEvent.url;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.editable!=null)\n                    s=s+calEvent.editable;\n                else\n                    s=s+'true';\n                s=s+'|';\n                if (calEvent.color)\n                    s=s+calEvent.color;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.description)\n                    s=s+calEvent.description;\n                else\n                    s=s+'';\n                return s;\n            }\n            // date format\n            function dFormat (xDate) {\n                now = xDate;\n                if (!now){\n                    s = '1900-01-01 00:00:00';\n                    return s;\n                }\n\n                year = '' + now.getFullYear();\n                month = '' + (now.getMonth() + 1); if (month.length == 1) { month = '0' + month; }\n                day = '' + now.getDate(); if (day.length == 1) { day = '0' + day; }\n                hour = '' + now.getHours(); if (hour.length == 1) { hour = '0' + hour; }\n                minute = '' + now.getMinutes(); if (minute.length == 1) { minute = '0' + minute; }\n                second = '' + now.getSeconds(); if (second.length == 1) { second = '0' + second; }\n                return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n            }\n\n            // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n                if(typeof curCalView.getMinMinute !== 'undefined')\n                {\n                    var startSeconds = curCalView.getMinMinute()*60;\n                    var endSeconds = curCalView.getMaxMinute()*60;\n                    var curSeconds = (curTime.getHours() * 60 * 60) + (curTime.getMinutes() * 60) + curTime.getSeconds();\n                    var percentOfDay = (curSeconds-startSeconds) / (endSeconds-startSeconds);\n                    var topLoc = Math.floor(parentDiv.height() * percentOfDay);\n                    timeline.css('top', topLoc + 'px');\n                    timelineNowptr.css('top', (topLoc-4) + 'px');\n                }\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n\n    });\n\n</script>\n\"","type":"Text","functions":["Trim","If","Day","Month","Year"]}
{"text":"If(True or PrintLayout, \n    TR_TimerSchedules.List.Current.TimerInfo.Name, \n    If(Length(TR_TimerSchedules.List.Current.TimerInfo.Name) > TimerNameMaxLength, \n        Substr(TR_TimerSchedules.List.Current.TimerInfo.Name,0, TimerNameMaxLength - 3) + \"...\", \n        TR_TimerSchedules.List.Current.TimerInfo.Name))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectName)>50,\nSubstr(TableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectName,0,50)+\"...\",\nTableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectDescription)>50,\nSubstr(TableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectDescription,0,50)+\"...\",\nTableRecordListProjects.List.Current.ProjectExchangeRateList.ProjectDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.ProjectExchangeRateList.PurchaseOrderName)>50,\nSubstr(TableRecordListProjects.List.Current.ProjectExchangeRateList.PurchaseOrderName,0,50)+\"...\",\nTableRecordListProjects.List.Current.ProjectExchangeRateList.PurchaseOrderName)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.TimesheetLine.TaskName)>40,Substr(TableRecordsWorkitems.List.Current.TimesheetLine.TaskName,0,40)+ \"...\",TableRecordsWorkitems.List.Current.TimesheetLine.TaskName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Story: \"+If(Length(TableRecordsWorkitems.List.Current.TimesheetLine.UserStoryName)>40,Substr(TableRecordsWorkitems.List.Current.TimesheetLine.UserStoryName,0,40)+ \"...\",TableRecordsWorkitems.List.Current.TimesheetLine.UserStoryName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectName)>20,\nSubstr(TableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectName,0,20)+\"...\",\nTableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectCode)>20,\nSubstr(TableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectCode,0,20)+\"...\",\nTableRecordsWorkitems.List.Current.TimesheetLine.ExternalProjectCode)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Hour(GetContentById.List.Current.Event.ScheduleTo) + \":\" + If(Minute(GetContentById.List.Current.Event.ScheduleTo) < 10,\"0\" + Minute(GetContentById.List.Current.Event.ScheduleTo),Minute(GetContentById.List.Current.Event.ScheduleTo))","type":"Text","functions":["Hour","If","Minute"]}
{"text":"If(Length(GetContentById.List.Current.Content.Description) > 100, Substr(GetContentById.List.Current.Content.Description,0,100) + \" ...\",GetContentById.List.Current.Content.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetContentById.List.Current.Content.Title)> 40,Substr(GetContentById.List.Current.Content.Title,0,37)+\"...\",GetContentById.List.Current.Content.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetContentById.List.Current.Content.Title)> 40,Substr(GetContentById.List.Current.Content.Title ,0,37)+\"...\",GetContentById.List.Current.Content.Title )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetContentById.List.Current.Content.Title)> 74,Substr(GetContentById.List.Current.Content.Title,0,71)+\"...\",GetContentById.List.Current.Content.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ContentFilesListRecords.List.Current.ContentFileStructure.Title = \"\",\n    If(\n        Length(GetContentById.List.Current.Content.Title) > 23,\n        Substr(GetContentById.List.Current.Content.Title,0,20) + \"...\",\n        GetContentById.List.Current.Content.Title) , \n    If(\n        Length(ContentFilesListRecords.List.Current.ContentFileStructure.Title) > 23,\n        Substr(ContentFilesListRecords.List.Current.ContentFileStructure.Title,0,20) + \"...\",\n        ContentFilesListRecords.List.Current.ContentFileStructure.Title)\n)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.ContentList.Description) > 50,Substr(TableRecords1.List.Current.ContentList.Description,0,50) + \"...\",TableRecords1.List.Current.ContentList.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Hour(GetNextEvents.List.Current.Event.ScheduleTo) + \":\" + If(Minute(GetNextEvents.List.Current.Event.ScheduleTo) < 10,\"0\" + Minute(GetNextEvents.List.Current.Event.ScheduleTo),Minute(GetNextEvents.List.Current.Event.ScheduleTo))","type":"Text","functions":["Hour","If","Minute"]}
{"text":"\"<SCRIPT language=javascript>\nvar currDates = '\"+SelectedDates +\"';\nvar customLink = '\"+CustomLink +\"';\nvar weekend = [\"+WeekendStartDay+\",\"+WeekendEndDay+\"];\nvar numberOfColumns = '\"+ NumberOfColumns +\"';\nvar selectedDayColor = '\"+ SelectedDayColor +\"';\nvar forceSpecialDaysLinks = \" + If(ForceSpecialDaysLinks, \"true\",\"false\") + \";\nvar selectSelected = \" + If(SelectSelected, \"true\",\"false\") + \";\nshow_yearly_calendar(\n'WebForm1.\" + InputWidgetId + \"', \n'\" + Day(StartDate)+ \"', \n'\" + Month(StartDate)+ \"', \n'\" + Year(StartDate)+ \"',\n'\" + Site.DateFormat + \"',\n'\" + Month(MaxDate) + \"-\" + Day(MaxDate) + \"-\" + Year(MaxDate) + \"',\n'\" + Month(MinDate) + \"-\" + Day(MinDate) + \"-\" + Year(MinDate) + \"', \nspecial_days,\nfalse,\n'CalendarDiv\" + YearlyCalendarSelectMultipleDates.RuntimeId + \"'\"+ \",\n'',\n'',\n'',\n'\" + If(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\n\" + If(ShowNavigationButtons, \"true\",\"false\") \n+ \");\n</SCRIPT>\"","type":"Text","functions":["If","Day","Month","Year","NullDate"]}
{"text":"If(Length(TableRecords1.List.Current.PROJECT.Description)>30,\nSubstr(TableRecords1.List.Current.PROJECT.Description,0,30)+\"...\",\nTableRecords1.List.Current.PROJECT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.WI_Description)>40,Substr(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.WI_Description,0,40)+ \"...\",TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.WI_Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Sprint: \"+TrimStart(Substr(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint,Index(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint,\"-\")+1,Length(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint)))\n\n\n\n","type":"Text","functions":["TrimStart","Substr","Index","Length"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Name)>20,\nSubstr(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Name,0,20)+\"...\",\nTableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Code)>20,\nSubstr(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Code,0,20)+\"...\",\nTableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Project_Code)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AuditEvents_List.Duration)/1000-60*Trunc(AuditList.List.Current.AuditEvents_List.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AuditEvents_List.Duration)/1000-60*Trunc(AuditList.List.Current.AuditEvents_List.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"If(Length(TableRecordsComments.List.Current.PROJECT_COMMENTS.Comment)>150,\nSubstr(TableRecordsComments.List.Current.PROJECT_COMMENTS.Comment,0,150)+\"...\",\nTableRecordsComments.List.Current.PROJECT_COMMENTS.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"updated on \" + If(Length(TableRecordsHistoric.List.Current.PROJECT_HISTORY.ChangedOn)>16,\nSubstr(TableRecordsHistoric.List.Current.PROJECT_HISTORY.ChangedOn,0,16),\nTableRecordsHistoric.List.Current.PROJECT_HISTORY.ChangedOn)\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsAllocationPlan.List.Current.PROJECT_PROFILE_PLAN.Description)>30,\nSubstr(TableRecordsAllocationPlan.List.Current.PROJECT_PROFILE_PLAN.Description,0,30)+\"...\",\nTableRecordsAllocationPlan.List.Current.PROJECT_PROFILE_PLAN.Description)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsMilestones.List.Current.PROJECT_MILESTONE.Description)>100,\nSubstr(TableRecordsMilestones.List.Current.PROJECT_MILESTONE.Description,0,100)+\"...\",\nTableRecordsMilestones.List.Current.PROJECT_MILESTONE.Description) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Projects_List.Description)>30,\nSubstr(TableRecordListProjects.List.Current.Projects_List.Description,0,30)+\"...\",\nTableRecordListProjects.List.Current.Projects_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Projects_List.Name)>50,\n   Substr(TableRecordListProjects.List.Current.Projects_List.Name,0,50)+\"...\",\n   TableRecordListProjects.List.Current.Projects_List.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListProjects.List.Current.Projects_List.PurchaseOrderName)>30,\nSubstr(TableRecordListProjects.List.Current.Projects_List.PurchaseOrderName,0,30)+\"...\",\nTableRecordListProjects.List.Current.Projects_List.PurchaseOrderName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordOpportunities.List.Current.Opportunity_List.POName)>30,\n   Substr(TableRecordOpportunities.List.Current.Opportunity_List.POName,0,30)+\"...\",\n   TableRecordOpportunities.List.Current.Opportunity_List.POName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordOpportunities.List.Current.Opportunity_List.Opportunity)>50,\n   Substr(TableRecordOpportunities.List.Current.Opportunity_List.Opportunity,0,50)+\"...\",\n   TableRecordOpportunities.List.Current.Opportunity_List.Opportunity)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectName)>40,\n   Substr(ProjectName,0,40)+\"...\",\n   ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListGroups.List.Current.Group_List.Description)>30,\nSubstr(TableRecordListGroups.List.Current.Group_List.Description,0,30)+\"...\",\nTableRecordListGroups.List.Current.Group_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordListGroups.List.Current.Group_List.Name)>50,\n   Substr(TableRecordListGroups.List.Current.Group_List.Name,0,50)+\"...\",\n   TableRecordListGroups.List.Current.Group_List.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsProjects.List.Current.Projects_List.Description)>30,\nSubstr(TableRecordsProjects.List.Current.Projects_List.Description,0,30)+\"...\",\nTableRecordsProjects.List.Current.Projects_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsProjects.List.Current.Projects_List.Name)>30,\nSubstr(TableRecordsProjects.List.Current.Projects_List.Name,0,30)+\"...\",\nTableRecordsProjects.List.Current.Projects_List.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsProjects.List.Current.Projects_List.Code)>30,\nSubstr(TableRecordsProjects.List.Current.Projects_List.Code,0,30)+\"...\",\nTableRecordsProjects.List.Current.Projects_List.Code)\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShowRecord2.Record.PROJECT.Description)>30,\nSubstr(ShowRecord2.Record.PROJECT.Description,0,30)+\"...\",\nShowRecord2.Record.PROJECT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShowRecord1.Record.PROJECT_GROUP.Description)>30,\nSubstr(ShowRecord1.Record.PROJECT_GROUP.Description,0,30)+\"...\",\nShowRecord1.Record.PROJECT_GROUP.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script language='javascript' type='text/javascript'>\n$(document).ready(function() {\n\t$(\"\"#\" + InputId + \"\"\").jstree({\n\t\t\"\"core\"\" : {\n\t\t\t\"\"strings\"\" : { loading : \"\"Carregando...\"\" }\n\t\t\t\" + If (InitiallyOpen <> \"\", \", \"\"initially_open\"\" : [\" + InitiallyOpen + \"]\", \"\") + \"\n\t\t},\n\t\t\"\"xml_data\"\" : {\n\t\t\t\"\"data\"\" : \"\"<root>\" + Replace(TreeItems_GetXML.XML_DATA,NewLine(),\"\\\" + NewLine()) + \"</root>\"\"\n\t\t\t\" + If (Ajax <> \"\", \", \"\"ajax\"\" : {\" + Ajax + \"}\", \"\") + \"\n\t\t},\n\t\t\" + If (ContextMenu <> \"\",\"\"\"contextmenu\"\" : {\n\t\t\"\"items\"\" : \" + ContextMenu + \"},\", \"\") + \"\n\t\t\"\"themes\"\" : {\n\t\t\t\"\"theme\"\" : \"\"\" + Theme + \"\"\"\n\t\t},\n\t\t\"\"types\"\" : { \n\t\t\t\"\"types\"\" : {\n\t\t\t\" + Types + \"\n\t\t\t}\n\t\t},\n\t\t\"\"plugins\"\" : [\"\"themes\"\",\"\"cookies\"\",\"\"xml_data\"\"\" + If (ContextMenu <> \"\",\",\"\"contextmenu\"\"\",\"\") + If (Types <> \"\",\",\"\"types\"\"\",\"\") + \"]\n\t});\n});\n</script>\"","type":"Text","functions":["If","Replace","NewLine"]}
{"text":"If(Length(RecentItemsList.List.Current.RecentItem.Tag) > 20,\n    Substr(RecentItemsList.List.Current.RecentItem.Tag,0,17) + \"...\",\n    RecentItemsList.List.Current.RecentItem.Tag\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(RecentItemsList.List.Current.RecentItem.Label) \n        > If(RecentItemsList.List.Current.RecentItem.Tag = \"\",MaxLabelLength,MaxLabelLength-MaxTagLength),\n    Substr(RecentItemsList.List.Current.RecentItem.Label,0,\n        If(RecentItemsList.List.Current.RecentItem.Tag = \"\",MaxLabelLength-3,MaxLabelLength-MaxTagLength-3)) + \"...\",\n    RecentItemsList.List.Current.RecentItem.Label\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.WI_Description)>40,Substr(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.WI_Description,0,40)+ \"...\",TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.WI_Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Sprint: \"+TrimStart(Substr(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint,Index(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint,\"-\")+1,Length(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint)))\n\n\n\n","type":"Text","functions":["TrimStart","Substr","Index","Length"]}
{"text":"If(Length(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Project_Name)>20,\nSubstr(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Project_Name,0,20)+\"...\",\nTableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Project_Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsMainTimesheet.List.Current.TIMESHEET_ITEM.WorkItem_Description)>60,\n   Substr(TableRecordsMainTimesheet.List.Current.TIMESHEET_ITEM.WorkItem_Description,0,60)+\"...\",\n   TableRecordsMainTimesheet.List.Current.TIMESHEET_ITEM.WorkItem_Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsMainTimesheet.List.Current.OPPORTUNITY.Name)>20,\n   Substr(TableRecordsMainTimesheet.List.Current.OPPORTUNITY.Name,0,20)+\"...\",\n   TableRecordsMainTimesheet.List.Current.OPPORTUNITY.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsMainTimesheet.List.Current.ACCOUNT.Name)>20,\n   Substr(TableRecordsMainTimesheet.List.Current.ACCOUNT.Name,0,20)+\"...\",\n   TableRecordsMainTimesheet.List.Current.ACCOUNT.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsWorkitems.List.Current.TIMESHEET_ITEM.WorkItem_Description)>60,\n   Substr(TableRecordsWorkitems.List.Current.TIMESHEET_ITEM.WorkItem_Description,0,60)+\"...\",\n   TableRecordsWorkitems.List.Current.TIMESHEET_ITEM.WorkItem_Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Changes)>90,\nSubstr(TableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Changes,0,90)+\"...\",\nTableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Changes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"on \" + If(Length(TableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Time_Stamp)>16,\nSubstr(TableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Time_Stamp,0,16),\nTableRecordsHistory.List.Current.TIMESHEET_HISTORIC.Time_Stamp)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsTimesheetItems.List.Current.TIMESHEET_ITEM.WorkItem_Description)>60,\n   Substr(TableRecordsTimesheetItems.List.Current.TIMESHEET_ITEM.WorkItem_Description,0,60)+\"...\",\n   TableRecordsTimesheetItems.List.Current.TIMESHEET_ITEM.WorkItem_Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TrimStart(Substr(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,Index(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,\"\\\")+1,Length(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description))))>50,Substr(TrimStart(Substr(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,Index(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,\"\\\")+1,Length(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description))),0,50)+ \"...\",TrimStart(Substr(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,Index(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,\"\\\")+1,Length(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description))))","type":"Text","functions":["If","Length","TrimStart","Substr","Index"]}
{"text":"TrimEnd(Substr(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,0,Index(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,\"\\\")))","type":"Text","functions":["TrimEnd","Substr","Index"]}
{"text":"If(Length(CompetencesEmployeeTR.List.Current.AppraisalCompetenceByEmployee.CompetenceDescription) >= 236, Substr(CompetencesEmployeeTR.List.Current.AppraisalCompetenceByEmployee.CompetenceDescription, 0, 230), CompetencesEmployeeTR.List.Current.AppraisalCompetenceByEmployee.CompetenceDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name) >= 206, Substr(ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name, 0, 199), ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"DecimalToInteger(Abs(DiffDays(CurrDateTime(),GetPlayerById.List.Current.Player.DateOfBirth)/365)) + \" Anos\"","type":"Text","functions":["DecimalToInteger","Abs","DiffDays","CurrDateTime"]}
{"text":"If(Length(Subject)>50,Substr(Subject,0,47) +\"...\",Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"TrimStart(TrimEnd(If(Index(TRAsset2.List.Current.BAPIF4C.HELPVALUES,\" \") <> -1 ,Substr(TRAsset2.List.Current.BAPIF4C.HELPVALUES,0,Index(TRAsset2.List.Current.BAPIF4C.HELPVALUES,\" \")),TRAsset2.List.Current.BAPIF4C.HELPVALUES)))","type":"Text","functions":["TrimStart","TrimEnd","If","Index","Substr"]}
{"text":"TrimStart(TrimEnd(If(Index(TRAsset2.List.Current.BAPIF4C.HELPVALUES,\" \") <> -1 ,Substr(TRAsset2.List.Current.BAPIF4C.HELPVALUES,Index(TRAsset2.List.Current.BAPIF4C.HELPVALUES,\" \"),Length(TRAsset2.List.Current.BAPIF4C.HELPVALUES)),\"\")))","type":"Text","functions":["TrimStart","TrimEnd","If","Index","Substr","Length"]}
{"text":"If(ProgrammingAuthorizationsTableRecords.List.Current.Message.Filename = \"\", \"(no name)\", If(Length(ProgrammingAuthorizationsTableRecords.List.Current.Message.Filename) > 30, Substr(ProgrammingAuthorizationsTableRecords.List.Current.Message.Filename, 0, 30) + \"...\", ProgrammingAuthorizationsTableRecords.List.Current.Message.Filename))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(AllocationsTableRecords.List.Current.Message.Filename = \"\", \"(no name)\", If(Length(AllocationsTableRecords.List.Current.Message.Filename) > 30, Substr(AllocationsTableRecords.List.Current.Message.Filename, 0, 30) + \"...\", AllocationsTableRecords.List.Current.Message.Filename))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Bids_TR2.List.Current.BidDocumentMessage.MessageFilename = \"\", \"(no name)\", If(Length(Bids_TR2.List.Current.BidDocumentMessage.MessageFilename) > 30, Substr(Bids_TR2.List.Current.BidDocumentMessage.MessageFilename, 0, 30) + \"...\", Bids_TR2.List.Current.BidDocumentMessage.MessageFilename))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetAuction.List.Current.TcBidDocument.Id <> NullIdentifier(), \"Document v\" + FormatText(GetAuction.List.Current.TcBidDocument.Version, 3, 3, True, \"0\"), \"\")","type":"Text","functions":["If","NullIdentifier","FormatText"]}
{"text":"If(Length(ExitRiskList.Current.List_EXIT_RISK.Detail) > 70,Substr(ExitRiskList.Current.List_EXIT_RISK.Detail,0,70) + \"...\",ExitRiskList.Current.List_EXIT_RISK.Detail)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_ExitRisk.List.Current.List_EXIT_RISK.Detail) > 70,Substr(LR_ExitRisk.List.Current.List_EXIT_RISK.Detail,0,70) + \"...\",LR_ExitRisk.List.Current.List_EXIT_RISK.Detail)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(TrimStart(TableForms.List.Current.GetForm.FORM_Description), 0, 150) + If(Length(TrimStart(TableForms.List.Current.GetForm.FORM_Description)) > 151, \"...\", \"\")","type":"Text","functions":["Substr","TrimStart","If","Length"]}
{"text":"Substr(TableForms.List.Current.GetForm.FORM_Name,0,Min(Length(TableForms.List.Current.GetForm.FORM_Name),50)) + If (Length(TableForms.List.Current.GetForm.FORM_Name) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"If(Length(CounterpartyMappingTable.List.Current.MarketParty.Name) > 30, Substr(CounterpartyMappingTable.List.Current.MarketParty.Name, 0, 30) + \"...\", CounterpartyMappingTable.List.Current.MarketParty.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(CounterpartyMappingTable.List.Current.Counterparty_Mapping.Description) > 30, Substr(CounterpartyMappingTable.List.Current.Counterparty_Mapping.Description, 0, 30) + \"...\", CounterpartyMappingTable.List.Current.Counterparty_Mapping.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Replace(SearchResultsTable.List.Current.SearchResults.DocumentDescription, NewLine(), \" \")) > Site.MaxHomepageDescriptionLength, Substr(Replace(SearchResultsTable.List.Current.SearchResults.DocumentDescription, NewLine(), \" \"),0, Site.MaxHomepageDescriptionLength) + \"...\",\nReplace(SearchResultsTable.List.Current.SearchResults.DocumentDescription, NewLine(), \" \"))","type":"Text","functions":["If","Length","Replace","NewLine","Substr"]}
{"text":"If(Length(ListRecordsProducts.List.Current.Product.Name)<Site.ProductTitle_MaxLength,ListRecordsProducts.List.Current.Product.Name,Substr(ListRecordsProducts.List.Current.Product.Name,0,Site.ProductTitle_MaxLength-2)+\"...\")\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GoalsEmployeeTR.List.Current.GoalsByEmployee_data.GoalDescription)>70, \nSubstr(GoalsEmployeeTR.List.Current.GoalsByEmployee_data.GoalDescription,0,70) + \"...\", GoalsEmployeeTR.List.Current.GoalsByEmployee_data.GoalDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GoalLevelList.List.Current.GoalGradeAppraisal.IntervalValue) >= 180, Substr(GoalLevelList.List.Current.GoalGradeAppraisal.IntervalValue, 0, 173), GoalLevelList.List.Current.GoalGradeAppraisal.IntervalValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GradeDesc) >= 90, Substr(GradeDesc, 0, 83), GradeDesc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription) >= 106, Substr(GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription, 0, 100), GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription) >= 236, Substr(GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription, 0, 230), GoalsEmployeeTR.List.Current.AppraisalGoalByEmployee.GoalDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SolutionVersionTable.List.Current.Solution_Version.Description)>50,Substr(SolutionVersionTable.List.Current.Solution_Version.Description,0,50)+\"...\",SolutionVersionTable.List.Current.Solution_Version.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDateTime(DateTimeToTime(ValueComparisonTableRecords.List.Current.ProfileValueComparison.EndDate), \"HH:mm:ss\"), 0, 5)","type":"Text","functions":["Substr","FormatDateTime","DateTimeToTime"]}
{"text":"Substr(FormatDateTime(DateTimeToTime(ValueComparisonTableRecords.List.Current.ProfileValueComparison.StartDate), \"HH:mm:ss\"), 0, 5)","type":"Text","functions":["Substr","FormatDateTime","DateTimeToTime"]}
{"text":"\"<spam style='cursor:help;text-decoration:underline;'>\"+\nIf(Length(ListModules.List.Current.ModuleDef.Name)>24,Substr(ListModules.List.Current.ModuleDef.Name,0,22)+\"...\",ListModules.List.Current.ModuleDef.Name)+\"</spam>\"\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListModules.List.Current.ModuleDef.Name)>24,Substr(ListModules.List.Current.ModuleDef.Name,0,22)+\"...\",ListModules.List.Current.ModuleDef.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListModules.List.Current.ApplicationDef.Name)>35,Substr(ListModules.List.Current.ApplicationDef.Name,0,33)+\"...\",ListModules.List.Current.ApplicationDef.Name)+\"/\"","type":"Text","functions":["If","Length","Substr"]}
{"text":"\" - \" + Substr(TableRecords3.List.Current.Espace_Version.Description,0,70) + If(Length(TableRecords3.List.Current.Espace_Version.Description)>70,\" ...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecords2.List.Current.Group.Description) > 0,\" - \", \"\") + Substr(TableRecords2.List.Current.Group.Description,0,70) + If(Length(TableRecords2.List.Current.Group.Description)>70,\" ...\", \"\")  ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(tbleSpaces.List.Current.Espace_Version.Description) > 0,\" - \", \"\") + Substr(tbleSpaces.List.Current.Espace_Version.Description,0,70) + If(Length(tbleSpaces.List.Current.Espace_Version.Description)>70,\" ...\", \"\")  ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.Espace_Version.Description) > 0,\" - \", \"\") + Substr(TableRecords1.List.Current.Espace_Version.Description,0,70) + If(Length(TableRecords1.List.Current.Espace_Version.Description)>70,\" ...\", \"\")  ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableFeedback.List.Current.Feedback.Message) = 0, \"- no message submitted -\",\nReplace(Replace(Replace(Replace(Substr(TableFeedback.List.Current.Feedback.Message,0,30) + If(Length(TableFeedback.List.Current.Feedback.Message)>30,\" ...\", \"\"), \"<br/>\", \" \"), Chr(13), \" \"), Chr(10), \" \"), Chr(9), \" \"))","type":"Text","functions":["If","Length","Replace","Substr","Chr"]}
{"text":"Replace(Replace(Replace(Replace(Substr(TableFeedback.List.Current.Feedback.Message,0,30) + If(Length(TableFeedback.List.Current.Feedback.Message)>30,\" ...\", \"\"), \"<br/>\", \" \"), Chr(13), \" \"), Chr(10), \" \"), Chr(9), \" \")","type":"Text","functions":["Replace","Substr","If","Length","Chr"]}
{"text":"\" '\" + Substr(GetMessage.List.Current.Feedback.Message,0,20) + If(Length(GetMessage.List.Current.Feedback.Message)>20,\" ...\", \"\") + \"'\"","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(RoleTable.List.Current.RoleInfo.RoleDescription) <= 300, RoleTable.List.Current.RoleInfo.RoleDescription, Substr(RoleTable.List.Current.RoleInfo.RoleDescription, 0, 297) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version, \n       Index(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version)\n)","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version, \n       Index(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version)\n)","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version, \n       Index(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version)\n)","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Replace(Replace(Replace(Replace(Replace(Replace(SyncErrors.List.Current.Eindhoven_SyncErrorDetail.Detail,Chr(13),\"\"), Chr(10),\"\"),\"\\r\\n\",\"\"),\"\\n\",\"\"),NewLine(),\"\"),\"<br>\",\"\")","type":"Text","functions":["Replace","Chr","NewLine"]}
{"text":"If(GetCount.List.Current.Int.Int > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCount.List.Current.Int.Int)) + \" of \" + GetCount.List.Current.Int.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridUnusedCount.List.Current.Int.Int  > 0, IntegerToText(TableGridUnused.StartIndex  + 1) + \" to \" + IntegerToText(Min(TableGridUnused.StartIndex  + TableGridUnused.LineCount,GetGridUnusedCount.List.Current.Int.Int)) + \" of \" + GetGridUnusedCount.List.Current.Int.Int  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridAreaConnectionsCount.List.Current.Int.Int  > 0, IntegerToText(TableGridAreas.StartIndex  + 1) + \" to \" + IntegerToText(Min(TableGridAreas.StartIndex  + TableGridAreas.LineCount, GetGridAreaConnectionsCount.List.Current.Int.Int)) + \" of \" + GetGridAreaConnectionsCount.List.Current.Int.Int  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetResponsibles.Count > 0, IntegerToText(Responsibles_TR.StartIndex + 1) + \" to \" + IntegerToText(Min(Responsibles_TR.StartIndex + Responsibles_TR.LineCount, GetResponsibles.Count)) + \" of \" + GetResponsibles.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridUnusedCount.List.Current.Int.Int   > 0, IntegerToText(TableGridUnused.StartIndex  + 1) + \" to \" + IntegerToText(Min(TableGridUnused.StartIndex  + TableGridUnused.LineCount,GetGridUnusedCount.List.Current.Int.Int)) + \" of \" + GetGridUnusedCount.List.Current.Int.Int  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetClusterGridsCount.List.Current.Int.Int   > 0, IntegerToText(TableClusterGrids.StartIndex   + 1) + \" to \" + IntegerToText(Min(TableClusterGrids.StartIndex   + TableClusterGrids.LineCount, GetClusterGridsCount.List.Current.Int.Int)) + \" of \" + GetClusterGridsCount.List.Current.Int.Int   + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridAreasByMarketId.Count > 0, IntegerToText(BalanceAreaTableRecords.StartIndex + 1) + \" to \" + IntegerToText(Min(BalanceAreaTableRecords.StartIndex + BalanceAreaTableRecords.LineCount, GetGridAreasByMarketId.Count)) + \" of \" + GetGridAreasByMarketId.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(GetMessage.List.Current.Message.Filename)>35,Substr(GetMessage.List.Current.Message.Filename,0,32)+\"...\",GetMessage.List.Current.Message.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Messages.List.Current.Message.Log)>30,Substr(Messages.List.Current.Message.Log,0,27)+\"...\",Messages.List.Current.Message.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDateTime(Messages.List.Current.Message_Processing_Log.time_stamp, \"HH:mm:ss\"),0,5) +\nIf(DiffDays(Messages.List.Current.Message_Processing_Log.time_stamp,CurrDateTime())=0,\"\",\nIf(DiffDays(Messages.List.Current.Message_Processing_Log.time_stamp,CurrDateTime())>0,\"-\",\"+\")+DiffDays(Messages.List.Current.Message_Processing_Log.time_stamp,CurrDateTime()))","type":"Text","functions":["Substr","FormatDateTime","If","DiffDays","CurrDateTime"]}
{"text":"If(Length(MessagesTableRecords.List.Current.MessageListEntry.Log) > 100, Substr(MessagesTableRecords.List.Current.MessageListEntry.Log, 0, 97) + \"...\", MessagesTableRecords.List.Current.MessageListEntry.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName)>15,Substr(MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName,0,15),MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessagesTableRecords.List.Current.MessageListEntry.Subject) > 40, Substr(MessagesTableRecords.List.Current.MessageListEntry.Subject, 0, 37) + \"...\", MessagesTableRecords.List.Current.MessageListEntry.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(\n    Index(HistoryTable.List.Current.MergedCompanyHistory.Description, \"added note â€œ\") = -1,\n    HistoryTable.List.Current.MergedCompanyHistory.Description,\n        Replace(\n            EncodeHtml(HistoryTable.List.Current.MergedCompanyHistory.Description),\n             \"added note â€œ\",\n             \"added note <strong>â€œ\"\n        ) + \"<strong>\"\n)","type":"Text","functions":["If","Index","Replace","EncodeHtml"]}
{"text":"If(TextToDecimalValidate(ApplicationList.List.Current.Data.Trend),Replace(ApplicationList.List.Current.Data.Trend,\"-\",\"\")+\"%\",ApplicationList.List.Current.Data.Trend)","type":"Text","functions":["If","TextToDecimalValidate","Replace"]}
{"text":"If(TextToDecimalValidate(Report_GetData.EnvironmentData.Data.Trend),Replace(Report_GetData.EnvironmentData.Data.Trend,\"-\",\"\")+\"%\",Report_GetData.EnvironmentData.Data.Trend)","type":"Text","functions":["If","TextToDecimalValidate","Replace"]}
{"text":"If(TextToDecimalValidate(Trend),Replace(Trend,\"-\",\"\")+\"%\",Trend)","type":"Text","functions":["If","TextToDecimalValidate","Replace"]}
{"text":"If(Length(NotificationTable.List.Current.Notification.Message)>30,Substr(NotificationTable.List.Current.Notification.Message,0,28)+\"...\",NotificationTable.List.Current.Notification.Message)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(Length(ListTasks.List.Current.Task.Name)<=8, ListTasks.List.Current.Task.Name, Substr(ListTasks.List.Current.Task.Name,0,7)+\"...\")\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<SCRIPT language=javascript>\nvar currDates = '\"+SelectedDates +\"';\nvar customLink = '\"+CustomLink +\"';\nvar numberOfColumns = '\"+ NumberOfColumns +\"';\nvar selectedDayColor = '\"+ SelectedDayColor +\"';\nvar forceSpecialDaysLinks = \" + If(ForceSpecialDaysLinks, \"true\",\"false\") + \";\nvar selectSelected = \" + If(SelectSelected, \"true\",\"false\") + \";\nshow_yearly_calendar(\n'WebForm1.\" + InputWidgetId + \"', \n'\" + Day(StartDate)+ \"', \n'\" + Month(StartDate)+ \"', \n'\" + Year(StartDate)+ \"',\n'\" + Site.DateFormat + \"',\n'\" + Month(MaxDate) + \"-\" + Day(MaxDate) + \"-\" + Year(MaxDate) + \"',\n'\" + Month(MinDate) + \"-\" + Day(MinDate) + \"-\" + Year(MinDate) + \"', \nspecial_days,\nfalse,\n'CalendarDiv\" + YearlyCalendarSelectMultipleDates.RuntimeId + \"'\"+ \",\n'',\n'',\n'',\n'\" + If(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\n\" + If(ShowNavigationButtons, \"true\",\"false\") \n+ \");\n</SCRIPT>\"","type":"Text","functions":["If","Day","Month","Year","NullDate"]}
{"text":"FormatText(Hour(AddHours(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate,1)), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","AddHours","Minute"]}
{"text":"FormatText(Hour(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\")\n","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(GetIEContracts.Count > 0, IntegerToText(ContractsImportExportTableRecord.StartIndex + 1) + \" to \" + IntegerToText(Min(ContractsImportExportTableRecord.StartIndex + ContractsImportExportTableRecord.LineCount, GetIEContracts.Count)) + \" of \" + GetIEContracts.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"FormatText(Hour(StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"\"Details on \" + FormatText(Hour(StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"FormatText(Hour(TableRecords1.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"FormatText(Hour(TableRecords.List.Current.Position.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.Position.StartInterval), 2, 2, True, \"0\")\n","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If (Length(ListRecordsTCDeals.List.Current.Contract.ContractNumber)>20, Substr(ListRecordsTCDeals.List.Current.Contract.ContractNumber,0,19)+\"...\",ListRecordsTCDeals.List.Current.Contract.ContractNumber) \n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetIEContracts.Count > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetIEContracts.Count)) + \" of \" + GetIEContracts.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(EProgramTableRecords.List.Current.Message_Property_3.Attribute) > 40, Substr(EProgramTableRecords.List.Current.Message_Property_3.Attribute, 0, 40) + \"...\",EProgramTableRecords.List.Current.Message_Property_3.Attribute)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetEProgramsByResponsible.Count > 0, IntegerToText(EProgramTableRecords.StartIndex + 1) + \" to \" + IntegerToText(Min(EProgramTableRecords.StartIndex + EProgramTableRecords.LineCount, GetEProgramsByResponsible.Count)) + \" of \" +GetEProgramsByResponsible.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(ContractTable.List.Current.ContractedVolumesInfo.Number)>50,\nConcat(Substr(ContractTable.List.Current.ContractedVolumesInfo.Number,0,50),\"...\"),ContractTable.List.Current.ContractedVolumesInfo.Number)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(GetTCContracts.Count > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetTCContracts.Count)) + \" of \" + GetTCContracts.Count+ \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(TProgramTableRecords.List.Current.sTProgramList.TProgramMessage) > 40, Substr(TProgramTableRecords.List.Current.sTProgramList.TProgramMessage, 0, 40) + \"...\",TProgramTableRecords.List.Current.sTProgramList.TProgramMessage)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords2.List.Current.DealPosition.DealNumber)>20,Substr(TableRecords2.List.Current.DealPosition.DealNumber,0,17)+\"...\",TableRecords2.List.Current.DealPosition.DealNumber)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.DealPosition.DealNumber)>20,Substr(TableRecords1.List.Current.DealPosition.DealNumber,0,17)+\"...\",TableRecords1.List.Current.DealPosition.DealNumber)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (DiffDays(CurrDate(),TargetDate)=0,\"Intraday\",\nIf (DiffDays(CurrDate(),TargetDate)=1,\"Day Ahead\",\"D\"+If (DiffDays(CurrDate(),TargetDate)<0 , \"+\"+(-1*DiffDays(CurrDate(),TargetDate)),\"-\"+DiffDays(CurrDate(),TargetDate))))","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If(Length(PositionCacheTable.List.Current.PositionCache.ErrorMsg)>50,Substr(PositionCacheTable.List.Current.PositionCache.ErrorMsg,0,50)+\"...\",PositionCacheTable.List.Current.PositionCache.ErrorMsg)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (GetEProgramsByEProgramTypeId.List.Current.Message_Property_3.Attribute<>\"\",NewLine(),\"\")+\nIf(Length(GetEProgramsByEProgramTypeId.List.Current.Message_Property_3.Attribute) > 40,Substr(GetEProgramsByEProgramTypeId.List.Current.Message_Property_3.Attribute,0,40) + \"...\",GetEProgramsByEProgramTypeId.List.Current.Message_Property_3.Attribute)","type":"Text","functions":["If","NewLine","Length","Substr"]}
{"text":"If(GetMessageSet.Count > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetMessageSet.Count)) + \" of \" + GetMessageSet.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"FormatText(Hour(ProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")\n","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(Length(TimeSeriesTableRecords.List.Current.MarketParty.Name) <= 20,\n TimeSeriesTableRecords.List.Current.MarketParty.Name,\n Substr(TimeSeriesTableRecords.List.Current.MarketParty.Name, 0, 20) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(Hour(TableRecordsProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecordsProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"Substr(TR_Components.List.Current.Struct_COMPONENT.Component.COMPONENT.Description,0,120)\n+\nIf(Length(TR_Components.List.Current.Struct_COMPONENT.Component.COMPONENT.Description)>150,\"...\",\"\")\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"<SCRIPT language=javascript>\nshow_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',holidays,false,'CalendarDiv'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))+\"',vacations);</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"\"<SCRIPT language=javascript>\nshow_yearly_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',holidays,false,'CalendarDiv'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))\n+\"',vacations);</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"If(Length(TableFeedback.List.Current.FEEDBACK2.User_Email)<15,\nTableFeedback.List.Current.FEEDBACK2.User_Email,\nSubstr(TableFeedback.List.Current.FEEDBACK2.User_Email,0,13)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableFeedback.List.Current.FEEDBACK2.User_Username)<15,\nTableFeedback.List.Current.FEEDBACK2.User_Username,\nSubstr(TableFeedback.List.Current.FEEDBACK2.User_Username,0,13)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(Replace(Replace(Replace(Substr(TableFeedback.List.Current.FEEDBACK2.Message,0,30) + If(Length(TableFeedback.List.Current.FEEDBACK2.Message)>30,\" ...\", \"\"), \"<br/>\", \" \"), Chr(13), \" \"), Chr(10), \" \"), Chr(9), \" \")","type":"Text","functions":["Replace","Substr","If","Length","Chr"]}
{"text":"If(Length(ListApplications.List.Current.ApplicationDef.Name)>32,Substr(ListApplications.List.Current.ApplicationDef.Name,0,30)+\"...\",ListApplications.List.Current.ApplicationDef.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<!-- 2. Add the JavaScript to initialize the chart on document ready -->\n<script type=\"\"text/javascript\"\">\n            var chart;\n            $(document).ready(function() {\n                chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: '\" + container.Id + \"', \n                        alignTicks: \"+ ToLower(BooleanToText(ChartOptions.ChartChartOptions.alignTicks)) +\",\n                        animation : \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.animation)) + \" , \n                        backgroundColor: '\"+ ChartOptions.ChartChartOptions.backgroundColor +\"' ,\n                        borderColor: '\"+ ChartOptions.ChartChartOptions.borderColor +\"',\n                        borderRadius: \"+ ChartOptions.ChartChartOptions.borderRadius  +\" ,\n                        borderWidth: \"+ ChartOptions.ChartChartOptions.borderWidth +\" ,\n                        className: '\"+ ChartOptions.ChartChartOptions.className +\"',\n                        defaultSeriesType: '\" + ChartOptions.ChartChartOptions.type + \"',\n                        events: { \" + ChartOptions.ChartChartOptions.Events + \" },\n                        height: \" + ChartOptions.ChartChartOptions.height + \",\n                        ignoreHiddenSeries: \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.ignoreHiddenSeries)) + \" ,\n                        inverted: \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.inverted)) + \" ,\n                        margin: [0, 0, 0, 0] ,\n//                        marginTop: ,\n                        marginRight: 50,\n                        marginBottom: 70,\n                        marginLeft: 80,\n//                        plotBackgroundColor: ,\n//                        plotBackgroundImage:,\n                        plotBorderColor: '#C0C0C0',\n                        plotBorderWidth: 0,\n                        plotShadow: false,\n                        reflow: true,\n                        shadow: false,\n                        showAxes: false,\n                        spacingTop: 10,\n                        spacingRight: 10,\n                        spacingBottom: 15,\n                        spacingLeft: 10,\" + \n                        If( ChartOptions.ChartChartOptions.style <> \"\", \"style: {\" + ChartOptions.ChartChartOptions.style + \"},\", \"\" ) + \" \n                        type: '\"+ ChartOptions.ChartChartOptions.type +\"',\n                        width: \" + ChartOptions.ChartChartOptions.width + \",\" + \n                        If( ChartOptions.ChartChartOptions.zoomType <> TextToIdentifier(\"\"), \"zoomType: '\" + ChartOptions.ChartChartOptions.zoomType + \"',\", \"\") + \"\n                    },\n\n                    xAxis: {\" +\n                        If( ChartOptions.ChartChartOptions.xAxisType <> \"\", \"type:'\" + ChartOptions.ChartChartOptions.xAxisType + \"',\", \"\" ) + \" \n                        title: {\n                            text: '\" + ChartOptions.ChartChartOptions.xAxisTitle + \"'\n                        },\" + \n                        If(ChartOptions.ChartChartOptions.xAxisCategories <> \"\", \" categories: [\" +ChartOptions.ChartChartOptions.xAxisCategories + \"],\", \"\") + \"\n                        labels: { \" + \n                            If(ChartOptions.ChartChartOptions.xAxisLabelRotation <> \"\", \" rotation:\" + ChartOptions.ChartChartOptions.xAxisLabelRotation + \", \", \"\") + \" \n                            formatter: function() {\n                                return \"+ ChartOptions.ChartChartOptions.xAxisLabel +\";\n                            }\n                        }                            \n                    },\n\n                    yAxis: {\n                        title: {\n                            text: '\" + ChartOptions.ChartChartOptions.yAxisTitle + \"'\n                        },\n                        labels: {\n                            formatter: function() {\n                                return \"+ ChartOptions.ChartChartOptions.yAxisLabel +\";\n                            }\n                        }\n                    },\n\n                    tooltip: {\n                        backgroundColor: \" + ChartTooltipOptions.ChartTooltipOptions.backgroundColor + \",\"+ \n                        If( ChartTooltipOptions.ChartTooltipOptions.borderColor<> \"\", \"borderColor: '\"+ ChartTooltipOptions.ChartTooltipOptions.borderColor +\"',\", \"\" ) + \"\n                        borderRadius: \"+ ChartTooltipOptions.ChartTooltipOptions.borderRadius +\",\n                        borderWidth: \"+ ChartTooltipOptions.ChartTooltipOptions.borderWidth +\",\"+ \n                        If( ChartTooltipOptions.ChartTooltipOptions.crosshairs<> \"\", \"crosshairs:\" + ChartTooltipOptions.ChartTooltipOptions.crosshairs + \",\", \"\") + \"\n                        enabled: \" + ToLower(BooleanToText( ChartTooltipOptions.ChartTooltipOptions.enabled)) + \",\n                        shadow: \" + ToLower(BooleanToText( ChartTooltipOptions.ChartTooltipOptions.shadow)) + \",\n                        shared: \" + ToLower(BooleanToText(ChartTooltipOptions.ChartTooltipOptions.shared)) + \",\n                        snap: \"+ ChartTooltipOptions.ChartTooltipOptions.snap +\",\" +\n                        If( ChartTooltipOptions.ChartTooltipOptions.formatter <> \"\", \"formatter: \" + ChartTooltipOptions.ChartTooltipOptions.formatter, \"\" ) + \"\n                    },\n                    \n                    legend: {\n                        align: '\" + ChartLegendOptions.ChartLegendOptions.align + \"',\n                        backgroundColor: '\" + ChartLegendOptions.ChartLegendOptions.backgroundColor + \"',\n                        borderColor: '\" + ChartLegendOptions.ChartLegendOptions.borderColor + \"',\n                        borderRadius: \" + ChartLegendOptions.ChartLegendOptions.borderRadius + \",\n                        borderWidth: \" + ChartLegendOptions.ChartLegendOptions.borderWidth + \",\n                        enabled: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.enabled)) + \",\n                        floating: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.floating)) + \",\n                        itemHiddenStyle: {\" + ChartLegendOptions.ChartLegendOptions.itemHiddenStyle + \"},\n                        itemHoverStyle: {\" + ChartLegendOptions.ChartLegendOptions.itemHoverStyle + \"},\n                        itemStyle: {\" +ChartLegendOptions.ChartLegendOptions.itemStyle + \"},\n                        itemWidth: \" +ChartLegendOptions.ChartLegendOptions.itemWidth + \",\n                        layout: '\" +ChartLegendOptions.ChartLegendOptions.layout + \"' ,\n                        labelFormatter: function() {\n                            return \" + ChartLegendOptions.ChartLegendOptions.labelFormatter +  \"\n                        },\n                        lineHeight: \" +ChartLegendOptions.ChartLegendOptions.lineHeight + \",\n                        margin: \" +ChartLegendOptions.ChartLegendOptions.margin + \",\n                        reversed: \" +ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.reversed)) + \",\n                        shadow: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.shadow)) + \",\" +\n                        If(ChartLegendOptions.ChartLegendOptions.style<> \"\", \"style: {\" +ChartLegendOptions.ChartLegendOptions.style + \"},\" , \"\") + \"\n                        symbolPadding: \" +ChartLegendOptions.ChartLegendOptions.symbolPadding + \",\n                        symbolWidth: \" +ChartLegendOptions.ChartLegendOptions.symbolWidth + \",\n                        verticalAlign: '\" +ChartLegendOptions.ChartLegendOptions.verticalAlign + \"' ,\n                        x: \" +ChartLegendOptions.ChartLegendOptions.x + \",\n                        y: \" +ChartLegendOptions.ChartLegendOptions.y + \"\n                    },\n\n                    loading: {\n                        hideDuration: \" + ChartLoadingOptions.ChartLoadingOptions.hideDuration + \",\n                        labelStyle: { \" + ChartLoadingOptions.ChartLoadingOptions.labelStyle + \" },\n                        showDuration: \"+ ChartLoadingOptions.ChartLoadingOptions.showDuration + \",\" +\n                        If(ChartLoadingOptions.ChartLoadingOptions.style<> \"\", \"style: {\" +ChartLoadingOptions.ChartLoadingOptions.style + \"},\" , \"\") + \"\n                    },\n\n                    title: {\n                        align: '\" + ChartTitleOptions.ChartTitleOptions.align + \"',\n                        floating: \"+ ToLower(BooleanToText(ChartTitleOptions.ChartTitleOptions.floating)) +\",\n                        margin: \"+ ChartTitleOptions.ChartTitleOptions.margin +\",\n                        text: '\" + ChartTitleOptions.ChartTitleOptions.text + \"',\" + \n                        If(ChartTitleOptions.ChartTitleOptions.style<> \"\", \"style: {\" +ChartTitleOptions.ChartTitleOptions.style + \"},\" , \"\") + \"\n                        verticalAlign: '\"+ ChartTitleOptions.ChartTitleOptions.verticalAlign +\"',\n                        x: \"+ ChartTitleOptions.ChartTitleOptions.x +\",\n                        y: \"+ ChartTitleOptions.ChartTitleOptions.y +\"\n                    },\n\n                    subtitle: {\n                        align: '\" + ChartSubTitleOptions.ChartSubTitleOptions.align + \"',\n                        floating: \"+ ToLower(BooleanToText(ChartSubTitleOptions.ChartSubTitleOptions.floating)) +\",\n                        margin: \"+ ChartSubTitleOptions.ChartSubTitleOptions.margin +\",\n                        text: '\" + ChartSubTitleOptions.ChartSubTitleOptions.text + \"',\" + \n                        If(ChartSubTitleOptions.ChartSubTitleOptions.style<> \"\", \"style: {\" +ChartSubTitleOptions.ChartSubTitleOptions.style + \"},\" , \"\") + \"\n                        verticalAlign: '\"+ ChartSubTitleOptions.ChartSubTitleOptions.verticalAlign +\"',\n                        x: \"+ ChartSubTitleOptions.ChartSubTitleOptions.x +\",\n                        y: \"+ ChartSubTitleOptions.ChartSubTitleOptions.y +\"\n                    },\n\n                    credits: { enabled: false },\n\n                    plotOptions: {\n                        area: {\n                            pointStart: \" + ChartOptions.ChartChartOptions.AreaStartPoint + \",\n                            marker: {\n                                enabled: false,\n                                symbol: 'circle',\n                                radius: 2,\n                                states: {\n                                    hover: {\n                                        enabled: true\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    series: \" + Series + \"\n\n                });\n                \n                \n            });\n                \n        </script>\"","type":"Text","functions":["ToLower","BooleanToText","If","TextToIdentifier"]}
{"text":"Substr(trInquiries.List.Current.INQUIRY.Description,0,Min(Length(trInquiries.List.Current.INQUIRY.Description),50)) + If (Length(trInquiries.List.Current.INQUIRY.Description) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"If ( Length(TableRecords2.List.Current.ISSUE.Description) <100, TableRecords2.List.Current.ISSUE.Description, Substr(TableRecords2.List.Current.ISSUE.Description,0,100) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ( Length(NewsTableRecords.List.Current.ISSUE.Description) <100, NewsTableRecords.List.Current.ISSUE.Description, Substr(NewsTableRecords.List.Current.ISSUE.Description,0,100) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ( Length(NewsTableRecords.List.Current.ISSUE.Name) >100, \n Substr(NewsTableRecords.List.Current.ISSUE.Name,0,100) + \"...\",\n NewsTableRecords.List.Current.ISSUE.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace( GetBookmarkableURL(), \"?days=0\", \"?days=\" + If (days>0, days,Site.MaxDaysEmail))","type":"Text","functions":["Replace","GetBookmarkableURL","If"]}
{"text":"If(TableRecords1.List.Current.Role.Description = \"\",\"\",\nIf(Length(TableRecords1.List.Current.Role.Description) > 100,Substr(TableRecords1.List.Current.Role.Description,0,99) + \"...\",TableRecords1.List.Current.Role.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"User experience for \" + If(VersionId <> NullIdentifier(),\"selected version\",\"selected project\") \n+ If(ToDate<>NullDate(), NewLine() + \"From \" + FromDate + \" to \" + ToDate,\"\")","type":"Text","functions":["If","NullIdentifier","NullDate","NewLine"]}
{"text":"\"Issues per Version\" + If(ToDate<>NullDate(), NewLine() + \"From \" + FromDate + \" to \" + ToDate,\"\")","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"If(TableRecords2.List.Current.VersionDetailed.Description = \"\",\"\",\nIf(Length(TableRecords2.List.Current.VersionDetailed.Description) > 20,Substr(TableRecords2.List.Current.VersionDetailed.Description,0,20) + \"...\",TableRecords2.List.Current.VersionDetailed.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<SCRIPT LANGUAGE='JavaScript' TYPE='TEXT/JAVASCRIPT'>\"+\nIf(TreeList.List.CurrentRowNumber <> 0,\n If(iterationId <> IntegerToIdentifier(0),\n  If(TreeList.List.Current.IssueInformantion.IterationId = iterationId, \n   \"var bla = \"+TreeList.List.Current.IssueInformantion.IterationId+\"; $($('#wtTreeList').get(0).rows[\"+(TreeList.List.CurrentRowNumber+1)+\"]).addClass('highlightIssue'); \"     ,\"if($($('#wtTreeList').get(0).rows[\"+(TreeList.List.CurrentRowNumber+1)+\"]).hasClass('highlightIssue')){\n    $($('#wtTreeList').get(0).rows[\"+(TreeList.List.CurrentRowNumber+1)+\"]).removeClass('highlightIssue');\n   }\")   ,\"\")\n +\n If(specialfilter_Iteration <> 0,\n  If(specialfilter_Iteration = 4,\n   If(TreeList.List.Current.IssueInformantion.Status = \"Assigned\" or TreeList.List.Current.IssueInformantion.Status = \"New\",\n    \"$($('#wtTreeList').get(0).rows[\"+(TreeList.List.CurrentRowNumber+1)+\"]).addClass('highlightIssue'); \",\"\"),\n   If(TextToInteger(TreeList.List.Current.IssueInformantion.Iteration) <= specialfilter_Iteration, \n    \"$($('#wtTreeList').get(0).rows[\"+(TreeList.List.CurrentRowNumber+1)+\"]).addClass('highlightIssue'); \",\"\")\n   ),\n \"\") ,\"\")\n+\" </script>\"","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger"]}
{"text":"Substr(ReportsTR.List.Current.Report_PivotData.Name, Index(ReportsTR.List.Current.Report_PivotData.Name, \"/\") + 1, Length(ReportsTR.List.Current.Report_PivotData.Name)-5 - Index(ReportsTR.List.Current.Report_PivotData.Name, \"/\"))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(ReportsTR.List.Current.Report_PivotData.Name, Index(ReportsTR.List.Current.Report_PivotData.Name, \"_\") + 1, Length(ReportsTR.List.Current.Report_PivotData.Name)-6)","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(Mod(LRReportTypes.List.CurrentRowNumber + 1, 2) = 0, NewLine(), \"\")","type":"Text","functions":["If","Mod","NewLine"]}
{"text":"Substr( Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)), 0, 200) +\n\nSubstr( Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)), \n        200,\n        Index(\n               Substr(\n                       Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)),\n                       200,\n                       Length(Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32))) - 200\n), \n               \" \"\n)\n) +\n\n\"...\"\n\n ","type":"Text","functions":["Substr","Replace","Chr","Index","Length"]}
{"text":"Substr( Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)), 0, 200) +\n\nSubstr( Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)), \n        200,\n        Index(\n               Substr(\n                       Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)),\n                       200,\n                       Length(Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32))) - 200\n), \n               \" \"\n)\n) +\n\n\"...\"\n\n ","type":"Text","functions":["Substr","Replace","Chr","Index","Length"]}
{"text":"If (GetUserId() <> NullIdentifier(), \"Welcome \" + Session.Username + \" | \", \"\")","type":"Text","functions":["If","GetUserId","NullIdentifier"]}
{"text":"If(Length(ListIterations.List.Current.ITERATION.Description) > 20, Substr(ListIterations.List.Current.ITERATION.Description,0,19) + \"...\", ListIterations.List.Current.ITERATION.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectTable.List.Current.Project.Code)> 0,Trim(ProjectTable.List.Current.Project.Code),\"<sem cÃ³digo>\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(UseModalDialog)) + \", \" + ToLower(BooleanToText(ShowCloseButton)) + \", \" + ToLower(BooleanToText(CloseOnEscape)) + \");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.IsMaintenanceFormula,\n   \"Formula: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.MaintenanceValue, \n   If(TextToDecimalValidate(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.MaintenanceValue),\n      FormatDecimal(TextToDecimal( TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.MaintenanceValue), 2, \",\",\".\"),\n      \"\")\n)\n+ \nIf(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.IsMaintenanceFormula,\nNewLine() + \"# of Parameters: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.MaintenanceNoParam  + NewLine() +\n\"Parameters: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.MaintenanceParam, \"\")","type":"Text","functions":["If","TextToDecimalValidate","FormatDecimal","TextToDecimal","NewLine"]}
{"text":"If(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.IsFormula,\n   \"Formula: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.Value, \n   If(TextToDecimalValidate(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.Value),\n      FormatDecimal(TextToDecimal( TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.Value), 2, \",\",\".\"),\n      \"\")\n)\n+ \nIf(TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.IsFormula,\nNewLine() + \"# of Parameters: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.NoParameters + NewLine() +\n\"Parameters: \" + TableRecords_PL_Licenses.List.Current.PRICE_LIST_LICENSE.Parameters, \"\")","type":"Text","functions":["If","TextToDecimalValidate","FormatDecimal","TextToDecimal","NewLine"]}
{"text":"\"(\" + Substr(FormatDateTime(FromDate, \"dd MMMM yyyy\"),0,Length(FormatDateTime(FromDate, \"dd MMMM yyyy\")) - 5) + \" to \" + Substr(FormatDateTime(CurrDate(), \"dd MMMM yyyy\"),0,Length(FormatDateTime(CurrDate(), \"dd MMMM yyyy\")) - 5) + \")\"","type":"Text","functions":["Substr","FormatDateTime","Length","CurrDate"]}
{"text":"If(Length(GetReportTableColumnsByReportTableId.List.Current.ReportTableColumn.Label) > 30,\n    Substr(GetReportTableColumnsByReportTableId.List.Current.ReportTableColumn.Label, 0, 27) + \"...\",\n    GetReportTableColumnsByReportTableId.List.Current.ReportTableColumn.Label)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetQueryBuilderTableById.List.Current.ReportTable.Label) > 18,\n    Substr(GetQueryBuilderTableById.List.Current.ReportTable.Label, 0, 15) + \"...\",\n    GetQueryBuilderTableById.List.Current.ReportTable.Label)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"</div><script type=\"\"text/JavaScript\"\">\n    osjs('#\" + RatingValue + \"_\" + divId + \"').jRating({\n        isDisabled:\"+ToLower(BooleanToText(isLocked))+\",\n        step:\"+ ToLower(BooleanToText(Step)) +\",\n        showRateInfo:\"+ ToLower(BooleanToText(showInfo))+\",\n        type:'\"+If(smallStars,\"small\",\"big\")+\"',\n        length:\" + Length + \",\n        rateMax:\"+MaxRating+\"\n    });\n</script>\"","type":"Text","functions":["ToLower","BooleanToText","If"]}
{"text":"If(IntegerToBoolean(TextToInteger(If(Step < 4, 1, 0))), \"next\", \"restart\")","type":"Text","functions":["If","IntegerToBoolean","TextToInteger"]}
{"text":"If(Length(TestSuiteTable.List.Current.TestSuite.Description) > 60,\n Concat(Substr(TestSuiteTable.List.Current.TestSuite.Description,0,60), \"...\"),\n TestSuiteTable.List.Current.TestSuite.Description)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(VariablesTableRecords.List.Current.TestVariable.IsEncrypted,\"***\",If(Length(VariablesTableRecords.List.Current.TestCaseConfiguration.Value)>20,Concat(Substr(VariablesTableRecords.List.Current.TestCaseConfiguration.Value,0,20),\"...\"),VariablesTableRecords.List.Current.TestCaseConfiguration.Value))","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(VariablesTableRecords.List.Current.TestVariable.IsEncrypted,\"***\",\"Default ( \"+If(Length(VariablesTableRecords.List.Current.TestVariable.DefaultValue)>20,Concat(Substr(VariablesTableRecords.List.Current.TestVariable.DefaultValue,0,20),\"...\"),VariablesTableRecords.List.Current.TestVariable.DefaultValue)+\" )\")\n\n\n","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(Length(TestSuiteTable.List.Current.TestSuiteExecutionReport.TestSuiteDescription) > 60,\n Concat(Substr(TestSuiteTable.List.Current.TestSuiteExecutionReport.TestSuiteDescription,0,60), \"...\"),\n TestSuiteTable.List.Current.TestSuiteExecutionReport.TestSuiteDescription)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(VariablesTableRecords.List.Current.TestVariable.IsEncrypted,\"***\",\"Default ( \"+If(Length(VariablesTableRecords.List.Current.TestVariable.DefaultValue)>20,Concat(Substr(VariablesTableRecords.List.Current.TestVariable.DefaultValue,0,20),\"...\"),VariablesTableRecords.List.Current.TestVariable.DefaultValue)+\" )\")\n","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(TestScheduleTable.List.Current.TestSchedule.EndedOn = NullDate(), IntegerToText(DiffMinutes(TestScheduleTable.List.Current.TestSchedule.StartedOn,CurrDateTime())) + \" (so far)\", IntegerToText(DiffMinutes(TestScheduleTable.List.Current.TestSchedule.StartedOn,TestScheduleTable.List.Current.TestSchedule.EndedOn)))","type":"Text","functions":["If","NullDate","IntegerToText","DiffMinutes","CurrDateTime"]}
{"text":"If(not QuestionTable.List.Current.QuestionControls.Expand and Length(QuestionTable.List.Current.Question_Locale.Content)>200,\nSubstr(QuestionTable.List.Current.Question_Locale.Content,0,200)+\"...\",QuestionTable.List.Current.Question_Locale.Content)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords2.List.Current.VERSION.Description = \"\",\"\",\nIf(Length(TableRecords2.List.Current.VERSION.Description) > 100,Substr(TableRecords2.List.Current.VERSION.Description,0,99) + \"...\",TableRecords2.List.Current.VERSION.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SoftwareTable.List.Current.Software.Description) > 47, Substr(SoftwareTable.List.Current.Software.Description, 0, 47) + \"...\", SoftwareTable.List.Current.Software.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(PeriodLabel = \"\", \"Year: \" + Year(CurrDate()), PeriodLabel)","type":"Text","functions":["If","Year","CurrDate"]}
{"text":"If(Abs(DiffMinutes(ListCurrentUsers.List.Current.Query_RecentUsers.MostRecentView,CurrDateTime()))=0,\"just now\",Abs(DiffMinutes(ListCurrentUsers.List.Current.Query_RecentUsers.MostRecentView,CurrDateTime()))+\" minutes ago\")","type":"Text","functions":["If","Abs","DiffMinutes","CurrDateTime"]}
{"text":"\"By <span title='\"+ListRecentUpdates.List.Current.Query_RecentUpdates.UpdateByName+\"'>\"+ListRecentUpdates.List.Current.Query_RecentUpdates.UpdateByUsername+\"</span> on \"+FormatDateTime(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt, \"yyyy-MM-dd\")+\" \"+Hour(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt)+\":\"+Minute(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt)","type":"Text","functions":["FormatDateTime","Hour","Minute"]}
{"text":"\"<SCRIPT language=javascript>\nshow_yearly_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',special_days,false,'CalendarDiv\" + YearlyCalendar.RuntimeId + \"'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\" + If(ShowNavigationButtons, \"true\",\"false\") + \");</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"\"<SCRIPT language=javascript>\nshow_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',special_days,false,'CalendarDiv\" + YearlyCalendar.RuntimeId + \"'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))\n+\"');</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"\"<script type=\"\"text/JavaScript\"\">\n    $(document).ready(function () {\n    $('#\" + InputWidgetId + \"').before($('#\" + InputWidgetId + \"').clone(true).attr('id','\" + InputWidgetId + \"' + '_mask')); \n    $('#\" + InputWidgetId + \"' + '_mask').attr('name', $('#\" + InputWidgetId + \"' + '_mask').attr('name') + '_mask').addClass('datepicker-here');\" + \n    If(Site.Debug, \"\", NewLine() + \"$('#\" + InputWidgetId + \"').css('display','none');\") + \n    \"$('#\" + InputWidgetId + \"_mask').datepicker({\" + \n        \"view: 'months',\" + \n        \"minView: 'months',\" + \n        \"classes:'\" + classes + \"' ,\" + \n        \"language: '\" + language + \"',\" + \n        \"inline: \" + If(inline, \"true\", \"false\") + \",\" + \n        \"startDate:new Date(\" + If(startDate = NullDate(), \"\", Year(startDate) + \",\" + Month(startDate) + \",\" + Day(startDate)) + \", 0, 0, 0),\" + \n        \"dateFormat: '\" + If(dateFormat = \"\", \"yyyy-mm\", dateFormat) + \"',\" + \n        \"toggleSelected: \" + If(toggleSelected, \"true\", \"false\") + \",\" + \n        \"position: '\" + If(position = \"\", \"top left\", position) + \"',\" + \n        If(minDate = NullDate(), \"\", \"minDate: new Date(\" + Year(minDate) + \",\" + Month(minDate) + \",\" + Day(minDate) + \", 0, 0, 0),\") + \n        If(maxDate = NullDate(), \"\", \"maxDate: new Date(\" + Year(maxDate) + \",\" + Month(maxDate) + \",\" + Day(maxDate) + \", 0, 0, 0),\") + \n        \"clearButton: \" + If(clearButton, \"true\", \"false\") + \",\" + \n        \"autoClose: \" + If(autoClose, \"true\", \"false\") + \", \" + \n        \"todayButton: \" + If(todayButton, \"new Date()\", \"''\") + \",\" + \n        \"showEvent: '\" + If(showEvent = \"\", \"=focus\", showEvent) + \"',\" + \n        \"onSelect: function(formattedDate, date, inst) {\" + \n            \" var mydate = date.yyyymmdd();\" + \n            \"$('#\" + InputWidgetId + \"').val(mydate);\" + \n        \"}\n    });\" + \n\"});</script>\"","type":"Text","functions":["If","NewLine","NullDate","Year","Month","Day"]}
{"text":"If(Length(ScreenTotalsTable.List.Current.ScreenSummary.Screen) > 25, Substr(ScreenTotalsTable.List.Current.ScreenSummary.Screen, 0, 23) + \"...\", ScreenTotalsTable.List.Current.ScreenSummary.Screen)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UserTotalsTable.List.Current.UserDetails.ApplicationName) > 20, Substr(UserTotalsTable.List.Current.UserDetails.ApplicationName, 0, 18) + \"...\", UserTotalsTable.List.Current.UserDetails.ApplicationName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(EspaceTotalsTable.List.Current.ScreenSummary.Screen) > 20, Substr(EspaceTotalsTable.List.Current.ScreenSummary.Screen, 0, 18) + \"...\", EspaceTotalsTable.List.Current.ScreenSummary.Screen)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UserTotalsAllAppsTable.List.Current.UserSummary.UserName) > 15, Substr(UserTotalsAllAppsTable.List.Current.UserSummary.UserName, 0, 13) + \"...\", UserTotalsAllAppsTable.List.Current.UserSummary.UserName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(HighchartTable.List.Current.Highchart.HelpLink,Index(HighchartTable.List.Current.Highchart.HelpLink,\"#\",startIndex:,searchFromEnd:,ignoreCase:),Length(HighchartTable.List.Current.Highchart.HelpLink))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"HDWindows.js?\"+Site.ChatVersion+\"'></script>\"+\n\"<link type='text/css' rel='stylesheet' href='\" + GetOwnerURLPath() + \"HDWindows.css?\"+Site.ChatVersion+\"'/>\"+\n\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"SocketIO.js?\"+Site.ChatVersion+\"'></script>\"+\n\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"Client.js?\"+Site.ChatVersion+\"'></script>\"+\n\"<link type='text/css' rel='stylesheet' href='\" + GetOwnerURLPath() + \"Client.css?\"+Site.ChatVersion+\"'/>\"+\n\n\"<script>\nvar client;\n$(document).ready(function() {\n    try {\n        client = new Chat.ChatClient(\"\"\"+Site.NodeServer+\"\"\", \"+Site.NodePort+\", \"+ToLower(Site.NodeHTTPS)+\", \"\"\"+If(GetApplicationServerType()=\".Net\",\"aspx\",\"jsf\")+\"\"\");\n    } catch(err) {\n        console.warn('Chat failed: '+ err)\n    }\n});\n</script>\"","type":"Text","functions":["GetOwnerURLPath","ToLower","If","GetApplicationServerType"]}
{"text":"\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"HDWindows.js?\"+Site.ChatVersion+\"'></script>\"+\n\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"SocketIO.js?\"+Site.ChatVersion+\"'></script>\"+\n\"<script type='text/javascript' src='\" + GetOwnerURLPath() + \"Client.js?\"+Site.ChatVersion+\"'></script>\"+\n\n\"<script>\nvar client;\n\n$(document).ready(function() {\n    try {\n        client = new Chat.ChatClient(\"\"\"+Site.NodeServer+\"\"\", \"+Site.NodePort+\", \"+ToLower(Site.NodeHTTPS)+\", \"\"\"+If(GetApplicationServerType()=\".Net\",\"aspx\",\"jsf\")+\"\"\");\n    } catch(err) {\n        console.warn('Chat failed: '+ err)\n    }\n});\n\n</script>\"","type":"Text","functions":["GetOwnerURLPath","ToLower","If","GetApplicationServerType"]}
{"text":"\"<script type='text/javascript'>\n\n    var Config = {\n                    allow_single_deselect: \"+EncodeJavaScript(ToLower(allow_single_deselect))+\",\n                    disable_search: \"+EncodeJavaScript(ToLower(disable_search))+\",\n                    disable_search_threshold: \"+EncodeJavaScript(disable_search_threshold)+\",\n                    enable_split_word_search: \"+EncodeJavaScript(ToLower(enable_split_word_search))+\",\n                    inherit_select_classes: \"+EncodeJavaScript(ToLower(inherit_select_classes))+\",\n                    max_selected_options: '\"+EncodeJavaScript(max_selected_options)+\"',\n                    no_results_text: '\"+EncodeJavaScript(NoResultsText)+\"',\n                    placeholder_text_multiple: '\"+EncodeJavaScript(placeholder_text_multiple)+\"',\n                    placeholder_text_single: '\"+EncodeJavaScript(placeholder_text_single)+\"',\n                    search_contains: \"+EncodeJavaScript(ToLower(search_contains))+\",\n                    single_backstroke_delete: \"+EncodeJavaScript(ToLower(single_backstroke_delete))+\",\"+\n                    If(width<>\"\",\"width: '\"+EncodeJavaScript(width)+\"',\",\"\")+\n                    \"display_disabled_options: \"+EncodeJavaScript(ToLower(display_disabled_options))+\",\n                    display_selected_options: \"+EncodeJavaScript(ToLower(display_selected_options))+\",\n                    include_group_label_in_selected: \"+EncodeJavaScript(ToLower(include_group_label_in_selected))+\",\n                    max_shown_results: '\"+EncodeJavaScript(max_shown_results)+\"',\n                    case_sensitive_search: \"+EncodeJavaScript(ToLower(case_sensitive_search))+\",\n                    hide_results_on_select: \"+EncodeJavaScript(ToLower(hide_results_on_select))+\",\n                    rtl: \"+EncodeJavaScript(ToLower(rtl))+\"\n                 }\n\n\"+\n    If(ElementId<>\"\",\n        \"$('#\"+EncodeJavaScript(ElementId)+\"').chosen(Config);\n         $('#\"+EncodeJavaScript(ElementId)+\"').bind('chosen:maxselected', function () {\"+chosen_maxselected+\"});\",\n    \"\")+\n\n    If(Class<>\"\",\n        \"$('.\"+EncodeJavaScript(Class)+\"').chosen(Config);\n         $('.\"+EncodeJavaScript(Class)+\"').bind('chosen:maxselected', function () {\"+chosen_maxselected+\"});\",\n    \"\")+\n\n\"</script>\"","type":"Text","functions":["EncodeJavaScript","ToLower","If"]}
{"text":"\"<script>$('#\" + InputId + \"').clockpicker({\n    placement: '\" + placement + \"',\n    align: '\" + align + \"',\n    autoclose: \" + If(autoclose, \"true\", \"false\") + \",\n    default: '\" + Hour(defaultTime) + \":\" + Minute(defaultTime) + \"',\n    donetext: '\" + donetext + \"',\n    vibrate: \" + If(vibrate, \"true\", \"false\") + \",\n    twelvehour: \"+ If(twelvehour, \"true\", \"false\") +\"\n});</script>\"","type":"Text","functions":["If","Hour","Minute"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonWidgetId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(BOQMRSTransDetailTable.List.Current.BOQ_MRSTransHdr.ApprovedBy<> NullIdentifier(),FormatDecimal(BOQMRSTransDetailTable.List.Current.BOQ_MRSTransDetails.ApprovedQty, 2, Site.DecimalSeparator, Site.GroupSeparator)\n,\"0.00\")","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(BOQMRSTransDetailTable.List.Current.BOQ_MRSTransHdr.MCEApprovedBy<> NullIdentifier(),FormatDecimal(BOQMRSTransDetailTable.List.Current.BOQ_MRSTransDetails.MCEApprovedQty, 2, Site.DecimalSeparator, Site.GroupSeparator)\n,\"0.00\")","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"DateTimeToDate(GetApplicationOutcomeById.List.Current.ApplicationOutcome.DecisionTimestamp)+\" \"+\nHour(GetApplicationOutcomeById.List.Current.ApplicationOutcome.DecisionTimestamp)+\":\"+\nIf(Minute(GetApplicationOutcomeById.List.Current.ApplicationOutcome.DecisionTimestamp) < 10, \n    \"0\"+Minute(GetApplicationOutcomeById.List.Current.ApplicationOutcome.DecisionTimestamp),\n    Minute(GetApplicationOutcomeById.List.Current.ApplicationOutcome.DecisionTimestamp)\n)","type":"Text","functions":["DateTimeToDate","Hour","If","Minute"]}
{"text":"If (GetRequest.Record.Request.ServiceTypeId = Entities.ServiceType.Express,\n    \"tomorrow\", \nIf(GetRequest.Record.Request.ServiceTypeId = Entities.ServiceType.FirstClass,\n    DateTimeToDate(AddDays(GetRequest.Record.Request.SubmitDate, 7)),\n    DateTimeToDate(AddDays(GetRequest.Record.Request.SubmitDate, 15))\n))\n","type":"Text","functions":["If","DateTimeToDate","AddDays"]}
{"text":"\"<script type='text/javascript'>\n\n        var containerid = '#\" + EncodeJavaScript(InputId) + \"';\n\n        $(containerid).attr('data-default-date','\"+EncodeJavaScript(FormatDateTime(defaultdate,\"MM-dd-yyyy\"))+\"');\n        $(containerid).attr('data-disabled-days','\"+EncodeJavaScript(disableddays)+\"');\n        $(containerid).attr('data-format','\"+EncodeJavaScript(format)+\"');\n        $(containerid).attr('data-fx','\"+EncodeJavaScript(ToLower(BooleanToText(fx)))+\"');\n        $(containerid).attr('data-fx-mobile','\"+EncodeJavaScript(ToLower(BooleanToText(fxmobile)))+\"');\n        $(containerid).attr('data-init-set','\"+EncodeJavaScript(ToLower(BooleanToText(initset)))+\"');\n        $(containerid).attr('data-lang','\"+EncodeJavaScript(lang)+\"');\n        $(containerid).attr('data-large-mode', '\"+EncodeJavaScript(ToLower(BooleanToText(largemode)))+\"');\n        $(containerid).attr('data-large-default','\"+EncodeJavaScript(ToLower(BooleanToText(largedefault)))+\"');\n        $(containerid).attr('data-lock','\"+EncodeJavaScript(lock)+\"');\n        $(containerid).attr('data-jump','\"+EncodeJavaScript(jump)+\"');\n        $(containerid).attr('data-max-year','\"+EncodeJavaScript(Year(maxYear))+\"');\n        $(containerid).attr('data-min-year','\"+EncodeJavaScript(Year(minYear))+\"');\n        $(containerid).attr('data-modal','\"+EncodeJavaScript(ToLower(BooleanToText(modal)))+\"');\n        $(containerid).attr('data-theme','\"+EncodeJavaScript(theme)+\"');\n        $(containerid).attr('data-translate-mode','\"+EncodeJavaScript(ToLower(BooleanToText(translatemode)))+\"');\n\n        $(containerid).dateDropper();\n\n</script>\"","type":"Text","functions":["EncodeJavaScript","FormatDateTime","ToLower","BooleanToText","Year"]}
{"text":"\"<script type=\"\"text/javascript\"\">\n$(function() {\n    var theInputWidgetId = $('#'+'\"+InputWidgetId+\"');\n    var promptDateFormat = '\"+Replace(ToUpper(DateFormat),\"YY\",\"YYYY\")+\"'\n    if(theInputWidgetId.attr('readonly')) {\n        return;\n    }\n    else {\n        setPrompt('\"+InputWidgetId+\"', promptDateFormat);\n          $.datepicker.setDefaults({ dateFormat: '\"+ DateFormat +\"' });\n          theInputWidgetId.datepicker({ \n            showButtonPanel: true,    \n            closeText: 'Clear',\n            beforeShow: function(input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\n            onChangeMonthYear: function(year, month, input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); }, \n            onSelect: function(date) { $(theInputWidgetId).change(); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\"+           \n            If(MinDateConfig<>\"\",\" minDate: '\"+MinDateConfig+\"', \",\"\")+\n            If(MaxDateConfig<>\"\",\" maxDate: '\"+MaxDateConfig+\"', \",\"\")+\n            If(NumberOfMonths<>0,\" numberOfMonths: \"+NumberOfMonths+\", \",\"\")+\n            If(ShowIcon,\" showOn: \"+If(OnlyIcon,\"'button',\",\"'both',\")+\"\n                                 buttonImage: '/Datepicker/img/Datepicker_IconCalendar.png',\n                                 buttonText: 'Select a Date'\",\"\")+\"\n            });\n    }\n    \"+ If(EnableInput,\"\",\"\n    theInputWidgetId.attr('readonly','true')\")+\"\n});\n\n</script>\"","type":"Text","functions":["Replace","ToUpper","If"]}
{"text":"If(Length(ModuleDefStruct.Name)>24,Substr(ModuleDefStruct.Name,0,22)+\"...\",ModuleDefStruct.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ModuleDefStruct.ApplicationName)>35,Substr(ModuleDefStruct.ApplicationName,0,33)+\"...\",ModuleDefStruct.ApplicationName)+\"/\"","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Trim(ThumbnailsListRecords.List.Current.Employee.Extension) <> \"\", \"Ext. \" + ThumbnailsListRecords.List.Current.Employee.Extension + \", \",\"\") + If(ThumbnailsListRecords.List.Current.CountryState.Name <> \"\", NewLine() + ThumbnailsListRecords.List.Current.CountryState.Name + \", \",\"\") + ThumbnailsListRecords.List.Current.OfficeLocation.Name","type":"Text","functions":["If","Trim","NewLine"]}
{"text":"If(Length(ListNextBirthdays.List.Current.User.Name)>21, Substr(ListNextBirthdays.List.Current.User.Name,0,19)+\"...\", ListNextBirthdays.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListNextBirthdays.List.Current.OrganizationUnit.Name)>40, Substr(ListNextBirthdays.List.Current.OrganizationUnit.Name,0,40)+\"...\", ListNextBirthdays.List.Current.OrganizationUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(LogErrorsTable.List.Current.LogError.ErrorMessage) <= 40,\n    LogErrorsTable.List.Current.LogError.ErrorMessage,\n    Substr(LogErrorsTable.List.Current.LogError.ErrorMessage, 0, 40) + \"...\"\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(\nTrim(GetEmployeeById.List.Current.SupervisorEmployee.Name) <> NullTextIdentifier(), GetEmployeeById.List.Current.SupervisorEmployee.Name, \n\"N/A\"\n)","type":"Text","functions":["If","Trim","NullTextIdentifier"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(true, '\" + InputId + \"', '\" + If(UseDropZone, If(DropZoneId<>\"\", DropZoneId,DropZone.Id), \"\") + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '\" + PopupUploadLink.Id + \"', '\" + HandlerURL + \"', '\" + DragEnterFakeNotifyWidget.Id + \"', '\" + DragLeaveFakeNotifyWidget.Id + \"', '\" + If(CancelLinkOrButtonId <> \"\", CancelLinkOrButtonId, CancelUpload_Button.Id) +  \"', '\" +FileUploadOverlayId + \"' );\n </script>\"","type":"Text","functions":["If","ToLower","BooleanToText"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(false, '\" + InputId + \"', '\" + If(UseDropZone, If(DropZoneId<>\"\", DropZoneId,DropZone.Id), \"\") + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '\" + PopupUploadLink.Id + \"', '\" + HandlerURL + \"', '\" + DragEnterFakeNotifyWidget.Id + \"', '\" + DragLeaveFakeNotifyWidget.Id + \"', '\" + If(CancelLinkOrButtonId <> \"\", CancelLinkOrButtonId, CancelUpload_Button.Id) +  \"', '\" +FileUploadOverlayId + \"' );\n </script>\"","type":"Text","functions":["If","ToLower","BooleanToText"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n    \n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ headerLeft +\"',\n                center: '\"+ headerCenter +\"',\n                right: '\"+ headerRight +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\", \n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n            \n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\", \n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\", \n\n            editable: true,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n                alert( start + ' ' + end)\n            },    \n\n            eventClick: function(calEvent, jsEvent, view) {\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n                if (!confirm('Are you sure about this change?')) {\n                    revertFunc();\n                }\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n                if (!confirm('is this okay?')) {\n                    revertFunc();\n                }\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n/* **************************************************************************************\nhttp://stackoverflow.com/questions/8813454/fullcalendar-current-time-line-on-week-view-and-day-view\n*************************************************************************************** */\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool) \n                $('\"+loadingID+\"').show();\n              else \n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n        \n            // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n                var startSeconds = curCalView.getMinMinute()*60;\n                var endSeconds = curCalView.getMaxMinute()*60;\n                var curSeconds = (curTime.getHours() * 60 * 60) + (curTime.getMinutes() * 60) + curTime.getSeconds();\n                var percentOfDay = (curSeconds-startSeconds) / (endSeconds-startSeconds);\n                var topLoc = Math.floor(parentDiv.height() * percentOfDay);\n                timeline.css('top', topLoc + 'px');\n                timelineNowptr.css('top', (topLoc-4) + 'px');\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n\n    });\n\n</script>\n\"","type":"Text","functions":["If","Day","Month","Year"]}
{"text":"\"<span><span/>\n<script type=\"\"text/JavaScript\"\">\n    $(document).ready(function () {\n        var spanExtenso = $('.ExtensoPlaceholder span:first');\n        spanExtenso.text('\"+Replace(DecimalToText(Value),\".\",\",\")+\"');\n        spanExtenso.text(spanExtenso.text().extenso(\"+If(IsCurrency,\"1\",\"0\")+\"));\n    });\n</script>\"","type":"Text","functions":["Replace","DecimalToText","If"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            dayClick: function(date, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"dayClick\"\",\n                    range:{\n                        start:date,\n                        end:date\n                    },\n                    delta:undefined,\n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DayClick+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    delta:undefined,                \n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Select+\"\n            },\n\n            \" + If(Trim(googleCalendarApiKey) <> \"\", \"googleCalendarApiKey: '\" + googleCalendarApiKey+ \"',\", \"\") + \"\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'POST'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n            eventRender: function(event, element)\n            {\n                element.find('.fc-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            }\n\n        });\n\n    });\n\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"If(Round(TextToDecimal(ValuesRecord.Distance),0)>999,\nRound(TextToDecimal(ValuesRecord.Distance),0)/1000 +\" km\",\nRound(TextToDecimal(ValuesRecord.Distance),0) +\" m\")","type":"Text","functions":["If","Round","TextToDecimal"]}
{"text":"If(Length(UserName)>15,Substr(UserName,0,15)+\"...\",UserName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Session.GitHubUsername)>15,Substr(Session.GitHubUsername,0,15)+\"...\",Session.GitHubUsername)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<!-- 2. Add the JavaScript to initialize the chart on document ready -->\n<script type=\"\"text/javascript\"\">\n            var chart;\n            $(document).ready(function() {\n                chart = new Highcharts.Chart({\n                    chart: {\n                        renderTo: '\" + container.Id + \"', \n                        alignTicks: \"+ ToLower(BooleanToText(ChartOptions.ChartChartOptions.alignTicks)) +\",\n                        animation : \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.animation)) + \" , \n                        backgroundColor: '\"+ ChartOptions.ChartChartOptions.backgroundColor +\"' ,\n                        borderColor: '\"+ ChartOptions.ChartChartOptions.borderColor +\"',\n                        borderRadius: \"+ ChartOptions.ChartChartOptions.borderRadius  +\" ,\n                        borderWidth: \"+ ChartOptions.ChartChartOptions.borderWidth +\" ,\n                        className: '\"+ ChartOptions.ChartChartOptions.className +\"',\n                        defaultSeriesType: '\" + ChartOptions.ChartChartOptions.type + \"',\n                        events: { \" + ChartOptions.ChartChartOptions.Events + \" },\n                        height: \" + ChartOptions.ChartChartOptions.height + \",\n                        ignoreHiddenSeries: \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.ignoreHiddenSeries)) + \" ,\n                        inverted: \" + ToLower(BooleanToText(ChartOptions.ChartChartOptions.inverted)) + \" ,\n                        margin: [0, 0, 0, 0] ,\n//                        marginTop: ,\n                        marginRight: 50,\n                        marginBottom: 70,\n                        marginLeft: 80,\n//                        plotBackgroundColor: ,\n//                        plotBackgroundImage:,\n                        plotBorderColor: '#C0C0C0',\n                        plotBorderWidth: 0,\n                        plotShadow: false,\n                        reflow: true,\n                        shadow: false,\n                        showAxes: false,\n                        spacingTop: 10,\n                        spacingRight: 10,\n                        spacingBottom: 15,\n                        spacingLeft: 10, \n                        type: '\"+ ChartOptions.ChartChartOptions.type +\"', \n                        width: \" + ChartOptions.ChartChartOptions.width + \n                        If( ChartOptions.ChartChartOptions.style <> \"\", \", style: {\" + ChartOptions.ChartChartOptions.style + \"}\", \"\" ) +  \n                        If( ChartOptions.ChartChartOptions.zoomType <> TextToIdentifier(\"\"), \",zoomType: '\" + ChartOptions.ChartChartOptions.zoomType + \"',\", \"\") + \"\n                    },\n\n                    xAxis: {\" +\n                        If( ChartOptions.ChartChartOptions.xAxisType <> \"\", \"type:'\" + ChartOptions.ChartChartOptions.xAxisType + \"',\", \"\" ) + \" \n                        title: {\n                            text: '\" + ChartOptions.ChartChartOptions.xAxisTitle + \"'\n                        },\n                        labels: {\n                            formatter: function() {\n                                return \"+ ChartOptions.ChartChartOptions.xAxisLabel +\";\n                            }\n                        }                            \n                    },\n\n                    yAxis: {\n                        title: {\n                            text: '\" + ChartOptions.ChartChartOptions.yAxisTitle + \"'\n                        },\n                        labels: {\n                            formatter: function() {\n                                return \"+ ChartOptions.ChartChartOptions.yAxisLabel +\";\n                            }\n                        }\n                    },\n\n                    tooltip: {\n                        backgroundColor: \" + ChartTooltipOptions.ChartTooltipOptions.backgroundColor + \",\"+ \n                        If( ChartTooltipOptions.ChartTooltipOptions.borderColor<> \"\", \"borderColor: '\"+ ChartTooltipOptions.ChartTooltipOptions.borderColor +\"',\", \"\" ) + \"\n                        borderRadius: \"+ ChartTooltipOptions.ChartTooltipOptions.borderRadius +\",\n                        borderWidth: \"+ ChartTooltipOptions.ChartTooltipOptions.borderWidth +\",\"+ \n                        If( ChartTooltipOptions.ChartTooltipOptions.crosshairs<> \"\", \"crosshairs:\" + ChartTooltipOptions.ChartTooltipOptions.crosshairs + \",\", \"\") + \"\n                        enabled: \" + ToLower(BooleanToText( ChartTooltipOptions.ChartTooltipOptions.enabled)) + \",\n                        shadow: \" + ToLower(BooleanToText( ChartTooltipOptions.ChartTooltipOptions.shadow)) + \",\n                        shared: \" + ToLower(BooleanToText(ChartTooltipOptions.ChartTooltipOptions.shared)) + \",\n                        snap: \"+ ChartTooltipOptions.ChartTooltipOptions.snap +\",\" +\n                        If( ChartTooltipOptions.ChartTooltipOptions.formatter <> \"\", \"formatter: \" + ChartTooltipOptions.ChartTooltipOptions.formatter, \"\" ) + \"\n                    },\n                    \n                    legend: {\n                        align: '\" + ChartLegendOptions.ChartLegendOptions.align + \"',\n                        backgroundColor: '\" + ChartLegendOptions.ChartLegendOptions.backgroundColor + \"',\n                        borderColor: '\" + ChartLegendOptions.ChartLegendOptions.borderColor + \"',\n                        borderRadius: \" + ChartLegendOptions.ChartLegendOptions.borderRadius + \",\n                        borderWidth: \" + ChartLegendOptions.ChartLegendOptions.borderWidth + \",\n                        enabled: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.enabled)) + \",\n                        floating: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.floating)) + \",\n                        itemHiddenStyle: {\" + ChartLegendOptions.ChartLegendOptions.itemHiddenStyle + \"},\n                        itemHoverStyle: {\" + ChartLegendOptions.ChartLegendOptions.itemHoverStyle + \"},\n                        itemStyle: {\" +ChartLegendOptions.ChartLegendOptions.itemStyle + \"},\n                        itemWidth: \" +ChartLegendOptions.ChartLegendOptions.itemWidth + \",\n                        layout: '\" +ChartLegendOptions.ChartLegendOptions.layout + \"' ,\n                        labelFormatter: function() {\n                            return \" + ChartLegendOptions.ChartLegendOptions.labelFormatter +  \"\n                        },\n                        lineHeight: \" +ChartLegendOptions.ChartLegendOptions.lineHeight + \",\n                        margin: \" +ChartLegendOptions.ChartLegendOptions.margin + \",\n                        reversed: \" +ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.reversed)) + \",\n                        shadow: \" + ToLower(BooleanToText(ChartLegendOptions.ChartLegendOptions.shadow)) + \",\" +\n                        If(ChartLegendOptions.ChartLegendOptions.style<> \"\", \"style: {\" +ChartLegendOptions.ChartLegendOptions.style + \"},\" , \"\") + \"\n                        symbolPadding: \" +ChartLegendOptions.ChartLegendOptions.symbolPadding + \",\n                        symbolWidth: \" +ChartLegendOptions.ChartLegendOptions.symbolWidth + \",\n                        verticalAlign: '\" +ChartLegendOptions.ChartLegendOptions.verticalAlign + \"' ,\n                        x: \" +ChartLegendOptions.ChartLegendOptions.x + \",\n                        y: \" +ChartLegendOptions.ChartLegendOptions.y + \"\n                    },\n\n                    loading: {\n                        hideDuration: \" + ChartLoadingOptions.ChartLoadingOptions.hideDuration + \",\n                        labelStyle: { \" + ChartLoadingOptions.ChartLoadingOptions.labelStyle + \" },\n                        showDuration: \"+ ChartLoadingOptions.ChartLoadingOptions.showDuration + \n                        If(ChartLoadingOptions.ChartLoadingOptions.style<> \"\", \", style: {\" +ChartLoadingOptions.ChartLoadingOptions.style + \"}\" , \"\") + \"\n                    },\n\n                    title: {\n                        align: '\" + ChartTitleOptions.ChartTitleOptions.align + \"',\n                        floating: \"+ ToLower(BooleanToText(ChartTitleOptions.ChartTitleOptions.floating)) +\",\n                        margin: \"+ ChartTitleOptions.ChartTitleOptions.margin +\",\n                        text: '\" + ChartTitleOptions.ChartTitleOptions.text + \"',\" + \n                        If(ChartTitleOptions.ChartTitleOptions.style<> \"\", \"style: {\" +ChartTitleOptions.ChartTitleOptions.style + \"},\" , \"\") + \"\n                        verticalAlign: '\"+ ChartTitleOptions.ChartTitleOptions.verticalAlign +\"',\n                        x: \"+ ChartTitleOptions.ChartTitleOptions.x +\",\n                        y: \"+ ChartTitleOptions.ChartTitleOptions.y +\"\n                    },\n\n                    subtitle: {\n                        align: '\" + ChartSubTitleOptions.ChartSubTitleOptions.align + \"',\n                        floating: \"+ ToLower(BooleanToText(ChartSubTitleOptions.ChartSubTitleOptions.floating)) +\",\n                        margin: \"+ ChartSubTitleOptions.ChartSubTitleOptions.margin +\",\n                        text: '\" + ChartSubTitleOptions.ChartSubTitleOptions.text + \"',\" + \n                        If(ChartSubTitleOptions.ChartSubTitleOptions.style<> \"\", \"style: {\" +ChartSubTitleOptions.ChartSubTitleOptions.style + \"},\" , \"\") + \"\n                        verticalAlign: '\"+ ChartSubTitleOptions.ChartSubTitleOptions.verticalAlign +\"',\n                        x: \"+ ChartSubTitleOptions.ChartSubTitleOptions.x +\",\n                        y: \"+ ChartSubTitleOptions.ChartSubTitleOptions.y +\"\n                    },\n\n                    credits: { enabled: false },\n\n                    plotOptions: {\n                        area: {\n                            pointStart: \" + ChartOptions.ChartChartOptions.AreaStartPoint + \",\n                            marker: {\n                                enabled: false,\n                                symbol: 'circle',\n                                radius: 2,\n                                states: {\n                                    hover: {\n                                        enabled: true\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    series: \" + Series + \"\n\n                });\n                \n                \n            });\n                \n        </script>\"","type":"Text","functions":["ToLower","BooleanToText","If","TextToIdentifier"]}
{"text":"If(DiffDays(PostList.List.Current.Post.PostedOn, CurrDate()) = 0, \"Today\", If(DiffDays(PostList.List.Current.Post.PostedOn, CurrDate()) = 1, \"Yesterday\", DiffDays(PostList.List.Current.Post.PostedOn, CurrDate()) + \" days ago\"))","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"EventTable.List.Current.Metric.Name + \n    If(Length(EventTable.List.Current.Event.Identification) > 0,\n        \" (\" + If(\n                    Length(EventTable.List.Current.Event.Identification) <= 24,\n                    EventTable.List.Current.Event.Identification,\n                    Substr(EventTable.List.Current.Event.Identification + \"...\",1,24)\n                ) + \")\",\n        \"\") ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SearchResultsTableRecords.List.Current.Description) > 250,Substr(SearchResultsTableRecords.List.Current.Description,0,250) + \"...\",SearchResultsTableRecords.List.Current.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Company_ById.Company.Description) > 200 and not ShowFullDescription, Substr(Company_ById.Company.Description,0,200) + \"...\", Company_ById.Company.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<iframe src=\"\"\"+Substr(GetBookmarkableURL(),0,Index(GetBookmarkableURL(),\"/\",8)) + GetOwnerURLPath() + \"EntryViewerHTML.aspx?file=\" + EncodeUrl(URL) +\"\"\" style=\"\"width: \"+FrameWidth+\";height: \"+FrameHeight+\";\"\" ></iframe>\"\n","type":"Text","functions":["Substr","GetBookmarkableURL","Index","GetOwnerURLPath","EncodeUrl"]}
{"text":"\"<Script>\n$(document).ready(function() {\n    Magnific_Popup_Iframe_init('\"+ EncodeJavaScript(LinkOrButtonWidgetId) +\"','\"+\n                                   Magnific_Popup.RuntimeId + \"',\"+\n                                   ToLower(BooleanToText(IsModal)) + \",\" +\n                                   ToLower(BooleanToText(ShowCloseBtn)) + \",'\" +\n                                   EncodeJavaScript(MaxWidth) + \"');\n\n});\n</Script>\"","type":"Text","functions":["EncodeJavaScript","ToLower","BooleanToText"]}
{"text":"If(Length(OEProcedureLogTable.List.Current.OEProcedureLog.InputText) > 50,\nSubstr(OEProcedureLogTable.List.Current.OEProcedureLog.InputText,0,50) + \" (...)\", OEProcedureLogTable.List.Current.OEProcedureLog.InputText)\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script src=\"\"//www.youtube.com/iframe_api\"\" ></script><script>\naddPlayer({id:'\" + YoutubeContainer.Id + \"', \n            videoId:'\" + EncodeJavaScript(VideoID) + \"', \n            width:\" + Width + \", \n            height:\" + Height + \",\n            quality:'\" + EncodeJavaScript(VideoQuality) + \"',\n            runtimeId:'\" + ApplicationItemVideo.RuntimeId + \"',\n            autoplay:\" + If(Autoplay, \"1\", \"0\") + \",\n            adjustSize:\" + If(AdjustToContainer,\"true\",\"false\") + \",\n            resizeContainer:'\" + ContainerId + \"',\n            \" + If(Length(EventsRegisterScript) > 0, \"eventsRegisterScript:\" + EventsRegisterScript + \",\",\"\") + \"\n            autohide:\" + Autohide + \"});</script>\"","type":"Text","functions":["EncodeJavaScript","If","Length"]}
{"text":"\"\n<script>\n$.getScript('https://www.youtube.com/iframe_api',function(){});    \naddPlayer({id:'\" + YoutubeContainer.Id + \"', \n            videoId:'\" + EncodeJavaScript(VideoID) + \"', \n            width:\" + Width + \", \n            height:\" + Height + \",\n            quality:'\" + EncodeJavaScript(VideoQuality) + \"',\n            runtimeId:'\" + ApplicationItemVideo.RuntimeId + \"',\n            autoplay:\" + If(Autoplay, \"1\", \"0\") + \",\n            adjustSize:\" + If(AdjustToContainer,\"true\",\"false\") + \",\n            resizeContainer:'\" + ContainerId + \"',\n            \" + If(Length(EventsRegisterScript) > 0, \"eventsRegisterScript:\" + EventsRegisterScript + \",\",\"\") + \"\n            autohide:\" + Autohide + \"});\n</script>\"\n\n","type":"Text","functions":["EncodeJavaScript","If","Length"]}
{"text":"\"<script>(function(){\n\nvar options = {\n    fallbackLink: '\" + EncodeJavaScript(Replace(FallbackHTML, \"'\", \"&apos;\")) + \"',\" +\n    EncodeJavaScript(If(Height <> \"\", \"height: '\" + If(TextToIntegerValidate(Height) = True, Height + \"px\", Height) + \"',\", \"\")) +\n    EncodeJavaScript(AdditionalOptions) +\n\"};\n\nvar containerId = '#\" + EncodeJavaScript(If(ContainerId = \"\", PDFContainer.Id, ContainerId)) + \"';\n\nPDFObject.embed( '\" + EncodeJavaScript(URL) + \"', containerId, options );\n\n})();</script>\"","type":"Text","functions":["EncodeJavaScript","Replace","If","TextToIntegerValidate"]}
{"text":"Substr(ArticleTable.List.Current.ARTICLE.Description,0,33) + \n    If(Length(ArticleTable.List.Current.ARTICLE.Description) > 33,\n        \"...\",\n        \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"\n\n<script>\n    $(document).ready(function(){\n        \n        $('#\"+ContainerId+\"').circleProgress({\n            value: \"+Round(Value/If(Range<>0,Range,100),2)+\",\n            \"+If(Size=0,\"\",\"size: \"+Size+\"\")+\"\n            \"+If(StartAngle=\"\",\"\",\",startAngle: \"+StartAngle+\"\")+\"\n            \n            ,reverse: \"+ToLower(Reverse)+\"\n            \"+If(Thickness=0,\"\",\",thickness: \"+Thickness+\"\")+\"\n            \"+If(LineCap=0,\"\",\",lineCap: '\"+LineCap+\"'\")+\"\n            \"+If(EndColor=\"\",\",color: '\"+FirstColor+\"'\",\",fill: {\n                gradient: ['\"+FirstColor+\"', '\"+EndColor+\"']\n            }\")+\"\n\n            \"+If(EmptyFill=\"\",\"\",\",emptyFill: '\"+EmptyFill+\"'\")+\"\n            \"+If(Animation=\"\",\"\",\",animation: \"+ToLower(Animation))+\"\n        }).addClass(\"\"circle\"\").append(\"\"<strong></strong>\"\")\"+If(showValue,\".on('circle-animation-progress', function(event, progress) {\n                $(this).find('strong').addClass(\"+If(Class=\"\",\"'CircleLabel'\",\"'\"+Class+\"'\")+\").html(parseInt(\"+Value+\" * progress)\"+If(AddSymbol<>\"\",\" \n                    + '<i>\"+AddSymbol+\"</i>'\",\"\")+If(Label<>\"\",\" + ' <p> \"+Label+\"</p>'\",\"\")+\");\n        });\",\";\")+\"\n\n    });\n</script>\n\n\"","type":"Text","functions":["Round","If","ToLower"]}
{"text":"\"<script type='text/javascript'>\n    var onTableResize = function(e){\n        if (!window.sessionStorage) return;\n        var columnString = window.sessionStorage.getItem('\" + TableRuntimeId + \"'); \n        OsNotify('\" + FakeNotify.Id + \"', columnString);  \n    };\n\n    \n    function initColumnSize() {\n        if (!window.sessionStorage) return; \n        var ss = window.sessionStorage; \n        ss.setItem('\" + TableRuntimeId + \"', '\" + ColumnSizeString + \"'); \n    }\n\n    initColumnSize();\n    \n    $(function(){\n        $('#\" + TableRuntimeId + \"').colResizable({\n            resizeMode: '\" + ToLower(ResizeMode) + \"',\n            disable: \" + ToLower(BooleanToText(Disable)) + \",\n            disabledColumns: [\" + DisabledColumns + \"],\n            liveDrag: \" + ToLower(BooleanToText(LiveDrag)) + \",\n            postbackSafe: true,\n            partialRefresh: true,\n            innerGripHtml: '\" + InnerGripHTML + \"',\n            \" + If(Trim(DraggingClass) = \"\", \"\", \"draggingClass: '\" + DraggingClass + \"',\") + \"\n            minWidth: \" + MinWidth + \",\n            headerOnly: \" + ToLower(BooleanToText(HeaderOnly)) + \",\n            hoverCursor: '\" + HoverCursor + \"',\n            dragCursor: '\" + DragCursor + \"',\n            flush: \" + ToLower(BooleanToText(Flush)) + \",\" + \n            If(Trim(MarginLeft) = \"\", \"\", \"marginLeft: '\" + MarginLeft + \"',\") +\n            If(Trim(MarginRight) = \"\", \"\", \"marginRight: '\" + MarginRight + \"',\") + \"\n            onResize: onTableResize      \n        });\n    });\n</script>\"","type":"Text","functions":["ToLower","BooleanToText","If","Trim"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(GetCOHeaderById.List.Current.InvoiceDate = NullDate(), \"OPEN\", FormatDateTime(GetCOHeaderById.List.Current.InvoiceDate, \"yyyy / MM / dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"Substr(SMSTrackingTable.List.Current.SMSTracking.Message, 0, 15) + If(Length(SMSTrackingTable.List.Current.SMSTracking.Message)>15, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(\nNotificationsList.List.Current.User_2.Id = GetUserId(), \n\"your\",\nIf(NotificationsList.List.Current.User.Id = NotificationsList.List.Current.User_2.Id,\n\"his/hers\",\nNotificationsList.List.Current.User_2.Name + If(ToLower(Substr(NotificationsList.List.Current.User_2.Name,Length(NotificationsList.List.Current.User_2.Name)-1,1)) = \"s\",\"'\",\"'s\")\n)\n)","type":"Text","functions":["If","GetUserId","ToLower","Substr","Length"]}
{"text":"If(\nNotificationsList.List.Current.User_2.Id = GetUserId(), \n\"your\",\nIf(NotificationsList.List.Current.User.Id = NotificationsList.List.Current.User_2.Id,\n\"his/hers\",\nNotificationsList.List.Current.User_2.Name + \nIf(\nToLower(Substr(NotificationsList.List.Current.User_2.Name, Length(NotificationsList.List.Current.User_2.Name)-1,1)) = \"s\",\n\"'\",\n\"'s\"\n)\n)\n)","type":"Text","functions":["If","GetUserId","ToLower","Substr","Length"]}
{"text":"FormatDateTime(DateTimeToDate(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate), \"yyyy/MM/dd\") + \" \" + \nIf(Hour(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate)<10,\"0\"+Hour(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate),Hour(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate)) + \":\" +\nIf(Minute(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate)<10,\"0\"+Minute(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate),Minute(TableRecordsFilledSurveys.List.Current.UserFormAccess.SubmittedDate))\n","type":"Text","functions":["FormatDateTime","DateTimeToDate","If","Hour","Minute"]}
{"text":"FormatDateTime(DateTimeToDate(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate), \"yyyy/MM/dd\") + \" \" + \nIf(Hour(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate)<10,\"0\"+Hour(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate),Hour(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate)) + \":\" +\nIf(Minute(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate)<10,\"0\"+Minute(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate),Minute(TableRecordsLastAnswers.List.Current.UserFormAccess.SubmittedDate))\n","type":"Text","functions":["FormatDateTime","DateTimeToDate","If","Hour","Minute"]}
{"text":"If(Length(FormAccessTableRecord.List.Current.UserInvited.Email)>35,Substr(FormAccessTableRecord.List.Current.UserInvited.Email,0,35)+\"...\",FormAccessTableRecord.List.Current.UserInvited.Email)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script>\n    $(document).ready(function() {\n        $('#\"+StickyPlace.Id+\"').sticky({\n            topSpacing: \" + EncodeJavaScript(TopSpacing) + \",\n            bottomSpacing: \" + EncodeJavaScript(BottomSpacing) + \",\n            className: '\" + EncodeJavaScript(className) + \"',\n            wrapperClassName: '\" + EncodeJavaScript(wrapperClassName) + \"',\n            center: \" + EncodeJavaScript(ToLower(BooleanToText(center))) + \",\n            getWidthFrom: '\" + EncodeJavaScript(getWidthFrom) + \"',\n            widthFromWrapper: \" + EncodeJavaScript(ToLower(BooleanToText(widthFromWrapper))) + \",\n            responsiveWidth: \" + EncodeJavaScript(ToLower(BooleanToText(responsiveWidth))) + \",\n            zIndex: '\" + EncodeJavaScript(zIndex) + \"'\n        });\n    });\n</script>\"","type":"Text","functions":["EncodeJavaScript","ToLower","BooleanToText"]}
{"text":"\"<script>\n    $('#\" + EncodeJavaScript(InputId) + \"').timeDropper({\n        autoswitch: \" + EncodeJavaScript(ToLower(BooleanToText(autoswitch))) + \",\n        meridians: \" + EncodeJavaScript(ToLower(BooleanToText(meridians))) + \",\n        format: '\" + EncodeJavaScript(format) + \"',\n        mousewheel: \" + EncodeJavaScript(ToLower(BooleanToText(mousewheel))) + \",\n        init_animation: '\" + EncodeJavaScript(init_animation) + \"',\n        setCurrentTime: \" + EncodeJavaScript(ToLower(BooleanToText(setCurrentTime))) + \",\n        primaryColor: '\" + EncodeJavaScript(primaryColor) + \"',\n        textColor: '\" + EncodeJavaScript(textColor) + \"',\n        backgroundColor: '\" + EncodeJavaScript(backgroundColor) + \"',\n        borderColor: '\" + EncodeJavaScript(borderColor) + \"'\n    });\n</script>\"","type":"Text","functions":["EncodeJavaScript","ToLower","BooleanToText"]}
{"text":"If(Length(TimeTrackTable.List.Current.TimeTrack.Comments) > 50,\n    Substr(TimeTrackTable.List.Current.TimeTrack.Comments,0,50) + \" (...)\",\n    TimeTrackTable.List.Current.TimeTrack.Comments)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n\n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ Trim(headerLeft) +\"',\n                center: '\"+ Trim(headerCenter) +\"',\n                right: '\"+ Trim(headerRight) +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\",\n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n\n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\",\n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\",\n\n            editable: true,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n\n                $('#\"+e_cal.Id+\"').val(xDate(dFormat(start),dFormat(end),allDay));\n                $('#\"+ln_notify.Id+\"').click();\n                \"+Callback_Select+\"\n            },\n\n            eventClick: function(calEvent, jsEvent, view) {\n                calEvent.ignoreTimezone=false;\n\n                $('#\"+e_cal.Id+\"').val(sCal(calEvent));\n                $('#\"+ln_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n\n                $('#\"+e_cal.Id+\"').val(sCal(calEvent));\n                $('#\"+ln_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n\n                $('#\"+e_cal.Id+\"').val(sCal(calEvent));\n                $('#\"+ln_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            },\n\n            eventRender: function(event, element)\n            {\n                element.find('.fc-event-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool)\n                $('#\"+loadingID+\"').show();\n              else\n                $('#\"+loadingID+\"').hide();\n            }\n\n        });\n            //DateEvent\n            function xDate(sdate,edate,allDay){\n                var s='DATE|';\n                s=s+0;\n                s=s+'|';\n                //s=s+calEvent.title;\n                s=s+'|';\n                if (allDay)\n                  s=s+allDay;\n                else\n                    s=s+'false';\n                s=s+'|';\n                s=s+sdate;\n                s=s+'|';\n                s=s+edate;\n                s=s+'|';\n                //s=s+calEvent.url;\n                s=s+'|';\n                s=s+'true';\n                s=s+'|';\n                //s=s+calEvent.color;\n                s=s+'|'\n                //s=s+calEvent.description;\n                return s;\n            }\n            //calEvent\n            function sCal(calEvent){\n                var s='CAL|';\n                if (calEvent.id)\n                    s=s+calEvent.id;\n                else\n                     s=s+'0';\n                s=s+'|';\n                s=s+calEvent.title;\n                s=s+'|';\n                s=s+calEvent.allDay;\n                s=s+'|';\n                s=s+dFormat(calEvent.start);\n                s=s+'|';\n                s=s+dFormat(calEvent.end);\n                s=s+'|';\n                if (calEvent.url)\n                    s=s+calEvent.url;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.editable!=null)\n                    s=s+calEvent.editable;\n                else\n                    s=s+'true';\n                s=s+'|';\n                if (calEvent.color)\n                    s=s+calEvent.color;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.description)\n                    s=s+calEvent.description;\n                else\n                    s=s+'';\n                return s;\n            }\n            // date format\n            function dFormat (xDate) {\n                now = xDate;\n                if (!now){\n                    s = '1900-01-01 00:00:00';\n                    return s;\n                }\n\n                year = '' + now.getFullYear();\n                month = '' + (now.getMonth() + 1); if (month.length == 1) { month = '0' + month; }\n                day = '' + now.getDate(); if (day.length == 1) { day = '0' + day; }\n                hour = '' + now.getHours(); if (hour.length == 1) { hour = '0' + hour; }\n                minute = '' + now.getMinutes(); if (minute.length == 1) { minute = '0' + minute; }\n                second = '' + now.getSeconds(); if (second.length == 1) { second = '0' + second; }\n                return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n            }\n\n            // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n                if(typeof curCalView.getMinMinute !== 'undefined')\n                {\n                    var startSeconds = curCalView.getMinMinute()*60;\n                    var endSeconds = curCalView.getMaxMinute()*60;\n                    var curSeconds = (curTime.getHours() * 60 * 60) + (curTime.getMinutes() * 60) + curTime.getSeconds();\n                    var percentOfDay = (curSeconds-startSeconds) / (endSeconds-startSeconds);\n                    var topLoc = Math.floor(parentDiv.height() * percentOfDay);\n                    timeline.css('top', topLoc + 'px');\n                    timelineNowptr.css('top', (topLoc-4) + 'px');\n                }\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n\n    });\n\n</script>\n\"","type":"Text","functions":["Trim","If","Day","Month","Year"]}
{"text":"FormatDateTime(TestSuiteTable.List.Current.TestSchedule.ScheduleDate, If(DateTimeToDate(TestSuiteTable.List.Current.TestSchedule.ScheduleDate)<>CurrDate(),\"MMM d, \",\"\")+\"HH:mm:ss\")","type":"Text","functions":["FormatDateTime","If","DateTimeToDate","CurrDate"]}
{"text":"FormatDateTime(TestSuiteTable.List.Current.TestSuiteRun.StartedOn, If(DateTimeToDate(TestSuiteTable.List.Current.TestSuiteRun.StartedOn)<>CurrDate(),\"MMM d, \",\"\")+\"HH:mm:ss\")","type":"Text","functions":["FormatDateTime","If","DateTimeToDate","CurrDate"]}
{"text":"If(TestSuiteTable.List.Current.TestSuiteRun.EndedOn = NullDate(), \"N/A\", FormatDateTime(TestSuiteTable.List.Current.TestSuiteRun.EndedOn, \"HH:mm:ss\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(Length(TestSuiteTable.List.Current.TestSuite.Description) > 100,\n Concat(Substr(TestSuiteTable.List.Current.TestSuite.Description,0,100), \"...\"),\n TestSuiteTable.List.Current.TestSuite.Description)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(VariablesTableRecords.List.Current.TestVariable.IsEncrypted,\"***\",If(Length(VariablesTableRecords.List.Current.TestCaseConfiguration.Value)>MaxTextFieldSize,Concat(Substr(VariablesTableRecords.List.Current.TestCaseConfiguration.Value,0,MaxTextFieldSize),\"...\"),VariablesTableRecords.List.Current.TestCaseConfiguration.Value))","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"Hour(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)+\":\"+Minute(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)+\":\"+Second(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)","type":"Text","functions":["Hour","Minute","Second"]}
{"text":"Hour(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)+\":\"+Minute(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)+\":\"+Second(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)","type":"Text","functions":["Hour","Minute","Second"]}
{"text":"If(TestScheduleTable.List.Current.TestSuiteRuntime.Status=Entities.TestResultStatus.Running, \nIntegerToText(DiffMinutes(TestScheduleTable.List.Current.TestSchedule.StartedOn,CurrDateTime())) + \" (so far)\",\nIf(TestScheduleTable.List.Current.TestSchedule.EndedOn <> NullDate(), IntegerToText(DiffMinutes(TestScheduleTable.List.Current.TestSchedule.StartedOn,TestScheduleTable.List.Current.TestSchedule.EndedOn)) ,\"NA\")\n)","type":"Text","functions":["If","IntegerToText","DiffMinutes","CurrDateTime","NullDate"]}
{"text":"If(Length(TestingModuleTable.List.Current.TestingModuleInfo.URL)>40,Substr(TestingModuleTable.List.Current.TestingModuleInfo.URL,0,15)+\" (...) \"+Substr(TestingModuleTable.List.Current.TestingModuleInfo.URL,Length(TestingModuleTable.List.Current.TestingModuleInfo.URL)-15,Length(TestingModuleTable.List.Current.TestingModuleInfo.URL)),TestingModuleTable.List.Current.TestingModuleInfo.URL)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script>\n    $(document).ready(function() {\n        $('#\" + EncodeJavaScript(ElementId) + \"').tubular({\n            videoId: '\" + EncodeJavaScript(VideoId) + \"',\n            mute: \" + EncodeJavaScript(ToLower(BooleanToText(Mute))) + \",\n            repeat: \" + EncodeJavaScript(ToLower(BooleanToText(Repeat))) + \",\n            wrapperZIndex: \" + EncodeJavaScript(WrapperZIndex) + \",\n            start: \" + EncodeJavaScript(Start) + \"\n        });\n    })\n</script>\"","type":"Text","functions":["EncodeJavaScript","ToLower","BooleanToText"]}
{"text":"If(Length(EMPSTAT.Current.EmployeeStatus.Location) > 25, (Substr(EMPSTAT.Current.EmployeeStatus.Location,0,24) + \"..\"), EMPSTAT.Current.EmployeeStatus.Location)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDateTime(Date, \"dd:MMMM\"),Index(FormatDateTime(Date, \"dd:MMMM\"),\":\") + 1,(Length(FormatDateTime(Date, \"dd:MMMM\")) - Index(FormatDateTime(Date, \"dd:MMMM\"),\":\"))) + \" of \" + Year(Date)","type":"Text","functions":["Substr","FormatDateTime","Index","Length","Year"]}
{"text":"If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 0, \"Sunday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"), \n    If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 1, \"Monday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"),\n        If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 2, \"Tuesday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"),\n            If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 3, \"Wednesday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"),\n                If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 4, \"Thursday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"),\n                    If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 5, \"Friday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"),\n                           If(DayOfWeek(TimesheetDetails.Current.TimesheetDates.Dates) = 6, \"Saturday \" + FormatDateTime(TimesheetDetails.Current.TimesheetDates.Dates, \"dd-MMMM-yyyy\"), \"\")))))))","type":"Text","functions":["If","DayOfWeek","FormatDateTime"]}
{"text":"Substr(\n    LogTable.List.Current.Log.Message,\n    0,\n    Min(\n        Index(LogTable.List.Current.Log.Message, Chr(10)),\n        150\n    )\n)","type":"Text","functions":["Substr","Min","Index","Chr"]}
{"text":"Substr(\n    GetLogById.List.Current.Log.Message,\n    0,\n    Min(\n        Index(GetLogById.List.Current.Log.Message, Chr(10)),\n        150\n    )\n)","type":"Text","functions":["Substr","Min","Index","Chr"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n    if(!$('.Page').hasClass('desktop')) {\n        $('#\" + EncodeJavaScript(InputWidgetId) + \"').click(function(){\n            $(this).blur();\n        });\n    }\n\n    dateServer = '\" + EncodeJavaScript(GetServerDateFormat.ServerDateFormat) + \"';\n\n     \" + If(EncodeJavaScript(DisabledDates) <> \"\", \"\n        var DisabledDays = \"\"\" + EncodeJavaScript(DisabledDates) + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") + \n\n    If(InitialDate <> DateToDateTime(NullDate()), \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n        var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\n    \" ,\"\n        var DefaultDate = $('#\" + EncodeJavaScript(InputWidgetId) + \"').val();\n        if (DefaultDate == \"\"\"\" || DefaultDate == null) {\n            DefaultDate = CalendarSilk.getTodayDate('\" + EncodeJavaScript(DateFormat) + \"');\n        }\") + \"\n    var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\" +\n\n    If(EncodeJavaScript(DateFormat) = \"\", \"\"\"%Y-%m-%d\"\"\", \"\") + \"\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(EncodeJavaScript(DateFormat) <> \"\", \"\n        dateFormat      :   \"\"\" + EncodeJavaScript(DateFormat) + \"\"\",\", \"\") +\n    If(EncodeJavaScript(DisabledDates) <> \"\" or EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + EncodeJavaScript(DisabledWeekDays) + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(EncodeJavaScript(DisabledDates) <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> DateToDateTime(NullDate()), \"\n        min             :   CalendarSilk.convertDateToInt(\"\"\" + MinDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") +\n    If(MaxDate <> DateToDateTime(NullDate()), \"\n        max             :   CalendarSilk.convertDateToInt(\"\"\" + MaxDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + EncodeJavaScript(InputWidgetId) + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                               $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\n                            },\n        onSelect        :   function() {\n                               $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\n                            },\n        cont            :   \"\"\" + CalendarWrapper.Id + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["EncodeJavaScript","If","DateToDateTime","NullDate","IntegerToText"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n    if ($('#\" + EncodeJavaScript(InputWidgetId) + \"').attr('readonly'))\n    return;\n\n    if($('.Page').hasClass('desktop')) {\n        $('#\" + EncodeJavaScript(InputWidgetId) + \"').bind('keypress', function(e) {\n            var code = e.keyCode || e.which;\n            if(code == 13) {\n                $('#\" + EncodeJavaScript(InputWidgetId) + \"').blur();\n                $('.calTriggerOut').click();\n            }\n        });\n    } else {\n        $('#\" + EncodeJavaScript(InputWidgetId) + \"').click(function(){\n            $(this).blur();\n        });\n    }\n\n    dateServer = '\" + EncodeJavaScript(GetServerDateFormat.ServerDateFormat) + \"';\n\n    \" + If(EncodeJavaScript(DisabledDates) <> \"\", \"\n        var DisabledDays = \"\"\" + EncodeJavaScript(DisabledDates) + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") +\n    If(InitialDate <> DateToDateTime(NullDate()), \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n        var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\n    \" ,\"\n        var DefaultDate = $('#\" + EncodeJavaScript(InputWidgetId) + \"').val();\n        if (DefaultDate == \"\"\"\" || DefaultDate == null) {\n            DefaultDate = CalendarSilk.getTodayDate('\" + EncodeJavaScript(DateFormat) + \"');\n        }\") + \"\n    var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(EncodeJavaScript(DateFormat) <> \"\", \"\n        dateFormat      :   \"\"\" + EncodeJavaScript(DateFormat) + \"\"\",\", \"\") +\n    If(EncodeJavaScript(DisabledDates) <> \"\" or EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + EncodeJavaScript(DisabledWeekDays) + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(EncodeJavaScript(DisabledDates) <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> DateToDateTime(NullDate()), \"\n        min             :   CalendarSilk.convertDateToInt(\"\"\" + MinDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") +\n    If(MaxDate <> DateToDateTime(NullDate()), \"\n        max             :   CalendarSilk.convertDateToInt(\"\"\" + MaxDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + EncodeJavaScript(InputWidgetId) + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                                $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\n                            },\n        onSelect        :   function() {\n                                $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\" +\n                                If(ShowTime  <> True, \"this.hide();$('.calTriggerOut').remove()\", \"\") + \"\n                            },\n        onFocus         :   function() {\" +\n                                If(ShowTime = True, \"\n                                    if ($('#\" + EncodeJavaScript(InputWidgetId) + \"').val() !=  '\" + DateToDateTime(NullDate()) + \"') {\n                                        /*var CalInputVal = $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val();\n                                        if (CalInputVal == \"\"\"\") {CalInputVal = '\" + CurrDateTime() + \"'};\n                                        this.selection.set(CalendarSilk.convertDateToInt(CalInputVal.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"'));*/\n                                    }\", \"\") + \"\n                                $('.Page').append('<div class=\"\"calTriggerOut\"\"></div>');\n                                $('.Calendar-topBar td, .Calendar-day-disabled').on('click', function(){ return false; });\n                                $(document).on('click','.Calendar-topCont *',function(){\n                                    $('body').click();\n                                });\n                                $(document).on('click','.calTriggerOut',function(){\n                                    $(this).remove();\n                                    $('body > .Calendar-topCont').hide();\n                                });\n                            },\n        trigger         :   \" + If(EncodeJavaScript(ButtonWidgetId) <> \"\", \"\"\"\" + EncodeJavaScript(ButtonWidgetId) + \"\"\"\",\"\"\"\" + EncodeJavaScript(InputWidgetId) + \"\"\"\") + \",\n        align           :   \"\"\"  + EncodeJavaScript(Align) + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["EncodeJavaScript","If","DateToDateTime","NullDate","IntegerToText","CurrDateTime"]}
{"text":"If(Length(PositionCacheTable.List.Current.PositionCache.ErrorMsg)>50, Substr(PositionCacheTable.List.Current.PositionCache.ErrorMsg,0,50) + \"...\", PositionCacheTable.List.Current.PositionCache.ErrorMsg)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InstanceTable.List.Current.Instance.Description)>30,\n    \"(\"+Substr(InstanceTable.List.Current.Instance.Description,0,26)+\"...)\",\n    \"(\"+InstanceTable.List.Current.Instance.Description+\")\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_StepsByChecklist.List.Current.StepTemplate.Description)>20,\n    \"(\"+Substr(LR_StepsByChecklist.List.Current.StepTemplate.Description,0,16)+\"...)\",\n    \"(\"+LR_StepsByChecklist.List.Current.StepTemplate.Description+\")\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ChecklistTable.List.Current.ChecklistTemplate.Description)>30,\n    \"(\"+Substr(ChecklistTable.List.Current.ChecklistTemplate.Description,0,26)+\"...)\",\n    \"(\"+ChecklistTable.List.Current.ChecklistTemplate.Description+\")\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_StepsByChecklist.List.Current.Step.Description)>20,\n    \"(\"+Substr(LR_StepsByChecklist.List.Current.Step.Description,0,16)+\"...)\",\n    \"(\"+LR_StepsByChecklist.List.Current.Step.Description+\")\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_SubStepsByStep.List.Current.SubStep.Description)>20,\n    \"(\"+Substr(LR_SubStepsByStep.List.Current.SubStep.Description,0,16)+\"...)\",\n    \"(\"+LR_SubStepsByStep.List.Current.SubStep.Description+\")\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(Day(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")\n\n","type":"Text","functions":["FormatText","Day","Month","Year","Hour","Minute"]}
{"text":"\"Email Message To \" + GetEmailMessageDetailsById.List.Current.EmailMessage.To + \" On \" + FormatText(Day(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")\n\n","type":"Text","functions":["FormatText","Day","Month","Year","Hour","Minute"]}
{"text":"FormatText(Day(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")","type":"Text","functions":["FormatText","Day","Month","Year","Hour","Minute"]}
{"text":"FormatText(Day(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(EmailMessageTable.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")","type":"Text","functions":["FormatText","Day","Month","Year","Hour","Minute"]}
{"text":"If(Length(SolutionVersionTable.List.Current.Release.ReleaseNotes)>50,Substr(SolutionVersionTable.List.Current.Release.ReleaseNotes,0,50)+\"...\",SolutionVersionTable.List.Current.Release.ReleaseNotes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(BudgetCommentTable.List.Current.BudgetLineComment.Description,0,80)+If(Length(BudgetCommentTable.List.Current.BudgetLineComment.Description)>80,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(BudgetCommentTable.List.Current.BudgetComment.Description,0,80)+If(Length(BudgetCommentTable.List.Current.BudgetComment.Description)>80,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"DateTimeToDate(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn) +\" \"+ Hour(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn) + \":\" + FormatText(Minute(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","Hour","FormatText","Minute"]}
{"text":"If(DAPricesTableRecords.List.Current.GasPrice.GasMarketPriceId = NullIdentifier() \nor DAPricesTableRecords.List.Current.GasPrice.Traded = -1 ,\" \",\nFormatDecimal(DAPricesTableRecords.List.Current.GasPrice.Traded,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(DAPricesTableRecords.List.Current.GasPrice.GasMarketPriceId = NullIdentifier() \nor DAPricesTableRecords.List.Current.GasPrice.Ask = -1 ,\" \",\nFormatDecimal(DAPricesTableRecords.List.Current.GasPrice.Ask,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(DAPricesTableRecords.List.Current.GasPrice.GasMarketPriceId = NullIdentifier() or DAPricesTableRecords.List.Current.GasPrice.Bid = -1,\" \",\nFormatDecimal(DAPricesTableRecords.List.Current.GasPrice.Bid,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(ContractPricesTableRecords.List.Current.ContractPrice.GasContractId = NullIdentifier(),\" \",\nFormatDecimal(ContractPricesTableRecords.List.Current.ContractPrice.AskVolume,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(ContractPricesTableRecords.List.Current.ContractPrice.GasContractId = NullIdentifier(),\" \",\nFormatDecimal(ContractPricesTableRecords.List.Current.ContractPrice.Ask,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(ContractPricesTableRecords.List.Current.ContractPrice.GasContractId = NullIdentifier(),\" \",\nFormatDecimal(ContractPricesTableRecords.List.Current.ContractPrice.BidVolume,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(ContractPricesTableRecords.List.Current.ContractPrice.GasContractId = NullIdentifier(),\" \",\nFormatDecimal(ContractPricesTableRecords.List.Current.ContractPrice.Bid,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(GeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = Entities.GasMarket.NCG or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadNCG.Threshold.GasMarketPriceId = NullIdentifier() or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = NullIdentifier(),\"\",\nFormatDecimal(GeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadNCG.Threshold.Spread,2,\",\",\"\"))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(GeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = Entities.GasMarket.NBP or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadNBP.Threshold.GasMarketPriceId = NullIdentifier() or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = NullIdentifier(),\"\",\nFormatDecimal(GeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadNBP.Threshold.Spread,2,\",\",\"\"))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(GeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = Entities.GasMarket.TTF or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadTTF.Threshold.GasMarketPriceId = NullIdentifier() or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = NullIdentifier(),\"\",\nFormatDecimal(GeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadTTF.Threshold.Spread,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(GeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = Entities.GasMarket.Zeebrugge or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadZeeHub.Threshold.GasMarketPriceId = NullIdentifier() or\nGeoSpreadsTableRecords.List.Current.GeoSpreads.GasmarketBidId = NullIdentifier(),\"\",\nFormatDecimal(GeoSpreadsTableRecords.List.Current.GeoSpreads.SpreadZeeHub.Threshold.Spread,2,\",\",\"\"))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(IDPricesTableRecords.List.Current.TimeSpread.GasmarketBidId = NullIdentifier() or IDPricesTableRecords.List.Current.TimeSpread.GasmarketDAId = NullIdentifier(),\" \",\nFormatDecimal(IDPricesTableRecords.List.Current.TimeSpread.Operation,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(IDPricesTableRecords.List.Current.TimeSpread.GasmarketDAId = NullIdentifier(),\" \",\nFormatDecimal(IDPricesTableRecords.List.Current.TimeSpread.Ask,2,\",\",\"\"))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(IDPricesTableRecords.List.Current.TimeSpread.GasmarketBidId = NullIdentifier(),\" \",\nFormatDecimal(IDPricesTableRecords.List.Current.TimeSpread.Bid,2,\",\",\"\"))\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(Length(ListRecords1.List.Current.INFRASTRUCTURE.Title)>30,\nSubstr(ListRecords1.List.Current.INFRASTRUCTURE.Title,0,30)+\"...\",\nListRecords1.List.Current.INFRASTRUCTURE.Title)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Please fill in \" \n+ If(FDDRec.FDD.LegalEntityId = NullIdentifier(),\"the legal entity \",\"\")\n+ If(FDDRec.FDD.TransactionTypeId = NullTextIdentifier() and FDDRec.FDD.TransactionProductId <> Entities.TRANSACTION_PRODUCT.GG,\"the transaction type \",\"\")\n+ If(FDDRec.FDD.TransProductCategorieId = NullTextIdentifier(),\"the transaction category \",\"\")\n+ If(FDDRec.FDD.TransactionProductId = NullTextIdentifier(),\"the transaction product \",\"\")","type":"Text","functions":["If","NullIdentifier","NullTextIdentifier"]}
{"text":"If(Length(LR_Entitties.List.Current.ENTITY.Name)>30,\nSubstr(LR_Entitties.List.Current.ENTITY.Name,0,30)+\"...\",\nLR_Entitties.List.Current.ENTITY.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_CounterParties.List.Current.Counterparty.Title)>30,\nSubstr(LR_CounterParties.List.Current.Counterparty.Title,0,30)+\"...\",\nLR_CounterParties.List.Current.Counterparty.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Please fill in \" \n+ If(GetFddById.List.Current.FDD.LegalEntityId = NullIdentifier(),\"the legal entity \",\"\")\n+ If(GetFddById.List.Current.FDD.TransactionTypeId = NullTextIdentifier() and GetFddById.List.Current.FDD.TransactionProductId <> Entities.TRANSACTION_PRODUCT.GG,\"the transaction type \",\"\")\n+ If(GetFddById.List.Current.FDD.TransProductCategorieId = NullTextIdentifier(),\"the transaction category \",\"\")\n+ If(GetFddById.List.Current.FDD.TransactionProductId = NullTextIdentifier(),\"the transaction product \",\"\")","type":"Text","functions":["If","NullIdentifier","NullTextIdentifier"]}
{"text":"FormatDateTime(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt, \"yyyy-MM-dd\")\n+ \" \" +\nFormatText(Hour(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt),2,2,True,\"0\")\n+ \":\" +\nFormatText(Minute(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt),2,2,True,\"0\")\n\n","type":"Text","functions":["FormatDateTime","FormatText","Hour","Minute"]}
{"text":"FormatDateTime(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt, \"yyyy-MM-dd\")\n+ \" \" +\nFormatText(Hour(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt),2,2,True,\"0\")\n+ \":\" +\nFormatText(Minute(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt),2,2,True,\"0\")\n","type":"Text","functions":["FormatDateTime","FormatText","Hour","Minute"]}
{"text":"If(Length(SelectionCriteriaTable.List.Current.SelectionCriteria.Argument)>45,Substr(SelectionCriteriaTable.List.Current.SelectionCriteria.Argument,0,45)+\"...\",SelectionCriteriaTable.List.Current.SelectionCriteria.Argument)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContactTable.List.Current.Contact.CC)>20,Substr(ContactTable.List.Current.Contact.CC,0,17)+\"...\",ContactTable.List.Current.Contact.CC)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContactTable.List.Current.Contact.Email)>20,Substr(ContactTable.List.Current.Contact.Email,0,17)+\"...\",ContactTable.List.Current.Contact.Email)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContactTable.List.Current.Contact.Name)>20,Substr(ContactTable.List.Current.Contact.Name,0,17)+\"...\",ContactTable.List.Current.Contact.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContactTable.List.Current.Contact.CC)>20, Substr(ContactTable.List.Current.Contact.CC,0,17)+\"...\",ContactTable.List.Current.Contact.CC)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContactTable.List.Current.Contact.Email)>20, Substr(ContactTable.List.Current.Contact.Email,0,17)+\"...\",ContactTable.List.Current.Contact.Email)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(AuctionLogTable.List.Current.Message_Processing_Log.comment) > 40, Substr(AuctionLogTable.List.Current.Message_Processing_Log.comment, 0, 37) + \"...\", AuctionLogTable.List.Current.Message_Processing_Log.comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SelectedMessages.ComparedMessagesDetail.ResponseMessageSubject <> \"\", \nIf(Length(SelectedMessages.ComparedMessagesDetail.ResponseMessageSubject) > 20, Substr(SelectedMessages.ComparedMessagesDetail.ResponseMessageSubject, 0, 20) + \"...\", SelectedMessages.ComparedMessagesDetail.ResponseMessageSubject), \"Target\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SelectedMessages.ComparedMessagesDetail.MessageSubject <> \"\", \nIf(Length(SelectedMessages.ComparedMessagesDetail.MessageSubject) > 20, Substr(SelectedMessages.ComparedMessagesDetail.MessageSubject, 0, 20) + \"...\", SelectedMessages.ComparedMessagesDetail.MessageSubject), \"Source\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(MessageShow.Record.ComparedMessagesDetail.ResponseMessageSubject) > 30, Substr(MessageShow.Record.ComparedMessagesDetail.ResponseMessageSubject, 0, 30) + \"...\", MessageShow.Record.ComparedMessagesDetail.ResponseMessageSubject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(MessageShow.Record.ComparedMessagesDetail.MessageSubject) > 30, Substr(MessageShow.Record.ComparedMessagesDetail.MessageSubject, 0, 30)+\"...\", MessageShow.Record.ComparedMessagesDetail.MessageSubject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASErrorCodeTable.List.Current.DAMAS_ErrorCodes.Description)>50,Substr(DAMASErrorCodeTable.List.Current.DAMAS_ErrorCodes.Description,0,50)+\"...\",DAMASErrorCodeTable.List.Current.DAMAS_ErrorCodes.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASDataFlowTable.List.Current.DAMAS_DataFlows.Description)>10, Substr(DAMASDataFlowTable.List.Current.DAMAS_DataFlows.Description,0,10)+\"...\",DAMASDataFlowTable.List.Current.DAMAS_DataFlows.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASCallLogTable.List.Current.DAMAS_CallLog.Result) > 30, Substr(DAMASCallLogTable.List.Current.DAMAS_CallLog.Result, 0, 30) + \" (...)\", DAMASCallLogTable.List.Current.DAMAS_CallLog.Result)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASCallLogTable.List.Current.DAMAS_CallLog.Parameters) > 30, Substr(DAMASCallLogTable.List.Current.DAMAS_CallLog.Parameters, 0, 30) + \" (...)\", DAMASCallLogTable.List.Current.DAMAS_CallLog.Parameters)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Note)>40,Substr(DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Note,0,40)+\"...\",DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Note)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Description)>40,Substr(DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Description,0,40)+\"...\",DAMASStateCodeTable.List.Current.DAMAS_StateCodes.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessageChannelTableRecord.List.Current.Message_Channel.BaseFolder) > 90, Substr(MessageChannelTableRecord.List.Current.Message_Channel.BaseFolder, 0, 90), MessageChannelTableRecord.List.Current.Message_Channel.BaseFolder)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessageChannelTableRecord.List.Current.Message_Channel.Description) > 25, Substr(MessageChannelTableRecord.List.Current.Message_Channel.Description, 0, 25), MessageChannelTableRecord.List.Current.Message_Channel.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName)>30,Substr(MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName,0,30),MessagesTableRecords.List.Current.MessageListEntry.MessageTypeName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessagesTableRecords.List.Current.MessageListEntry.Subject) > 43, Substr(MessagesTableRecords.List.Current.MessageListEntry.Subject, 0, 40) + \"...\", MessagesTableRecords.List.Current.MessageListEntry.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetNoReferences.Count > 0, IntegerToText(NoReferences_List.StartIndex + 1) + \" to \" + IntegerToText(Min(NoReferences_List.StartIndex + NoReferences_List.LineCount, GetNoReferences.Count)) + \" of \" + GetNoReferences.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetReferences.Count > 0, IntegerToText(References_TR.StartIndex + 1) + \" to \" + IntegerToText(Min(References_TR.StartIndex + References_TR.LineCount, GetReferences.Count)) + \" of \" + GetReferences.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.Deal.TradeGroup4Dsc) > 10, Substr(InvoiceDetailTable.List.Current.Deal.TradeGroup4Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.Deal.TradeGroup4Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.Deal.TradeGroup3Dsc) > 10, Substr(InvoiceDetailTable.List.Current.Deal.TradeGroup3Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.Deal.TradeGroup3Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.Deal.TradeSGroup1Dsc) > 10, Substr(InvoiceDetailTable.List.Current.Deal.TradeSGroup1Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.Deal.TradeSGroup1Dsc)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.Deal.TradeGroup1Dsc) > 10, Substr(InvoiceDetailTable.List.Current.Deal.TradeGroup1Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.Deal.TradeGroup1Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.DealDelta.TradeGroup4Dsc) > 10, Substr(InvoiceDetailTable.List.Current.DealDelta.TradeGroup4Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.DealDelta.TradeGroup4Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.DealDelta.TradeGroup3Dsc) > 10, Substr(InvoiceDetailTable.List.Current.DealDelta.TradeGroup3Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.DealDelta.TradeGroup3Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.DealDelta.TradeSGroup1Dsc) > 10, Substr(InvoiceDetailTable.List.Current.DealDelta.TradeSGroup1Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.DealDelta.TradeSGroup1Dsc)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InvoiceDetailTable.List.Current.DealDelta.TradeGroup1Dsc) > 10, Substr(InvoiceDetailTable.List.Current.DealDelta.TradeGroup1Dsc,0,8) + \"...\", InvoiceDetailTable.List.Current.DealDelta.TradeGroup1Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(BatchTable.List.Current.Batch.Description, 0, 29) + If(Length(BatchTable.List.Current.Batch.Description) > 30, \" ...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(RMSRequestTable.List.Current.RecalculateRequest.DeltaElements)>25,\nSubstr(Replace(RMSRequestTable.List.Current.RecalculateRequest.DeltaElements, \",\", \", \"), 0, 25) + \" ...\",RMSRequestTable.List.Current.RecalculateRequest.DeltaElements)","type":"Text","functions":["If","Length","Substr","Replace"]}
{"text":"If(RMSRequestTable.List.Current.RecalculateRequest.CreatedAt<>NullDate(),\nDateTimeToDate(RMSRequestTable.List.Current.RecalculateRequest.CreatedAt),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableDocuments.List.Current.DOCUMENT.Name)>30, Substr(TableDocuments.List.Current.DOCUMENT.Name,0,27)+\"...\",TableDocuments.List.Current.DOCUMENT.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(Hour(AddHours(StartInterval,OffSet)), 2, 2, True, \"0\") + \":\" + FormatText(Minute(AddHours(StartInterval,OffSet)), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","AddHours","Minute"]}
{"text":"FormatText(Hour(TableRecords.List.Current.TimeSeriesData.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.TimeSeriesData.StartInterval), 2, 2, True, \"0\")\n","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(CurrDate()=AddDays(TargetDate,1),\"Ex-Post\",If (DiffDays(CurrDate(),TargetDate)=0,\"Intraday\",\nIf (DiffDays(CurrDate(),TargetDate)=1,\"Day Ahead\",\"D\"+If (DiffDays(CurrDate(),TargetDate)<0 , \"+\"+(-1*DiffDays(CurrDate(),TargetDate)),\"-\"+DiffDays(CurrDate(),TargetDate)))))","type":"Text","functions":["If","CurrDate","AddDays","DiffDays"]}
{"text":"If(PositionCacheTable.List.Current.PositionCache.Status = Entities.PositionCacheStatus.FileProblem,If(Length(Site.GPS_ErrorSavingWarningMessage)>50,Substr(Site.GPS_ErrorSavingWarningMessage,0,50)+\"...\",Site.GPS_ErrorSavingWarningMessage),\nIf(Length(PositionCacheTable.List.Current.PositionCache.ErrorMsg)>50,Substr(PositionCacheTable.List.Current.PositionCache.ErrorMsg,0,50)+\"...\",PositionCacheTable.List.Current.PositionCache.ErrorMsg))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length( TableNotificationsManualNotifications.List.Current.Notifications.Detail) >40, Substr(TableNotificationsManualNotifications.List.Current.Notifications.Detail,0,37)+\"...\",TableNotificationsManualNotifications.List.Current.Notifications.Detail)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length( TableNotificationsLOTWorkflow.List.Current.Notifications.Detail) >40, Substr(TableNotificationsLOTWorkflow.List.Current.Notifications.Detail,0,37)+\"...\",TableNotificationsLOTWorkflow.List.Current.Notifications.Detail)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (EditTransport.Record.TRANSPORT.BUILT=NullDate(),\"\",Year(EditTransport.Record.TRANSPORT.BUILT))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If (TransportTable.List.Current.TRANSPORT.BUILT= NullDate(),\"\", Year(TransportTable.List.Current.TRANSPORT.BUILT))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If(Length(If(LOT_Get.Lot.LOT.LOT_NAME=LOT_Get.Lot.LOT.FULL_NAME,\"\",LOT_Get.Lot.LOT.FULL_NAME)) > 40 , Substr(If(LOT_Get.Lot.LOT.LOT_NAME=LOT_Get.Lot.LOT.FULL_NAME,\"\",LOT_Get.Lot.LOT.FULL_NAME),0,37)+\"...\",If(LOT_Get.Lot.LOT.LOT_NAME=LOT_Get.Lot.LOT.FULL_NAME,\"\",LOT_Get.Lot.LOT.FULL_NAME))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ExpvalsMappingTable.List.Current.ExpvalsMapping.InnerJoin)>30, Substr(ExpvalsMappingTable.List.Current.ExpvalsMapping.InnerJoin,0,30)+\"...\",ExpvalsMappingTable.List.Current.ExpvalsMapping.InnerJoin)\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ExpvalsMappingTable.List.Current.ExpvalsMapping.SelectionField)>30, Substr(ExpvalsMappingTable.List.Current.ExpvalsMapping.SelectionField,0,30)+\"...\",ExpvalsMappingTable.List.Current.ExpvalsMapping.SelectionField)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InstvalsMappingTable.List.Current.InstvalsMapping.InnerJoin)>30, Substr(InstvalsMappingTable.List.Current.InstvalsMapping.InnerJoin,0,30)+\"...\",InstvalsMappingTable.List.Current.InstvalsMapping.InnerJoin)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InstvalsMappingTable.List.Current.InstvalsMapping.SelectionField)>30, Substr(InstvalsMappingTable.List.Current.InstvalsMapping.SelectionField,0,30)+\"...\",InstvalsMappingTable.List.Current.InstvalsMapping.SelectionField)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GuaranteeTable.List.Current.GuaranteeList.ExpirationDate <> NullDate(),DiffDays(CurrDate(), GuaranteeTable.List.Current.GuaranteeList.ExpirationDate), \"NA\")","type":"Text","functions":["If","NullDate","DiffDays","CurrDate"]}
{"text":"Substr(GuaranteeTable.List.Current.GuaranteeList.Beneficiary,0,35) + If(Length(GuaranteeTable.List.Current.GuaranteeList.Beneficiary)>35,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(GuaranteeTable.List.Current.GuaranteeList.Guaranteed,0,35) + If(Length(GuaranteeTable.List.Current.GuaranteeList.Guaranteed)>35,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(GuaranteeTable.List.Current.GuaranteeList.Guarantor,0,35) + If(Length(GuaranteeTable.List.Current.GuaranteeList.Guarantor)>35, \"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Index(LogTable.List.Current.LogList.Details,NewLine()) < 80 and Index(LogTable.List.Current.LogList.Details,NewLine()) > 1, \nSubstr(LogTable.List.Current.LogList.Details,0,Index(LogTable.List.Current.LogList.Details,NewLine())),\n    Substr(LogTable.List.Current.LogList.Details,0,80))\n\n+ If(Length(LogTable.List.Current.LogList.Details)>80,\"...\",\"\")\n ","type":"Text","functions":["If","Index","NewLine","Substr","Length"]}
{"text":"Substr(LogShow.Record.LogList.FileName,\n       Index(LogShow.Record.LogList.FileName,\"\\\",0,True) + 1, \n       Length(LogShow.Record.LogList.FileName))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(Length(RoleToGroupMatrix.Current.RoleGroupAssociation.RoleName) > 30, Substr(RoleToGroupMatrix.Current.RoleGroupAssociation.RoleName,0, 28) + \"..\" , RoleToGroupMatrix.Current.RoleGroupAssociation.RoleName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type=\"\"text/javascript\"\">\nosjs(function() {\n    var theInputWidgetId = osjs('#'+'\"+InputWidgetId+\"');\n    var promptDateFormat = '\"+Replace(ToUpper(DateFormat),\"YY\",\"YYYY\")+\"'\n    if(theInputWidgetId.attr('readonly')) {\n        return;\n    }\n    else {\n        setPrompt('\"+InputWidgetId+\"', promptDateFormat);\n        osjs.datepicker.setDefaults({ dateFormat: '\"+ DateFormat +\"' });\n        theInputWidgetId.datepicker({ \n            showButtonPanel: true,    \n            closeText: 'Clear',\n            beforeShow: function(input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\n            onChangeMonthYear: function(year, month, input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); }, \n            onSelect: function(date) { osjs(theInputWidgetId).change(); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\"+           \n            If(MinDateConfig<>\"\",\" minDate: '\"+MinDateConfig+\"', \",\"\")+\n            If(MaxDateConfig<>\"\",\" maxDate: '\"+MaxDateConfig+\"', \",\"\")+\n            If(NumberOfMonths<>0,\" numberOfMonths: \"+NumberOfMonths+\", \",\"\")+\n            If(ShowIcon,\" showOn: \"+If(OnlyIcon,\"'button',\",\"'both',\")+\"\n                                 buttonImage: '/Datepicker/img/Datepicker_IconCalendar.png',\n                                 buttonText: 'Select a Date'\",\"\")+\"\n        });\n    }\n    \"+ If(EnableInput,\"\",\"\n    theInputWidgetId.attr('readonly','true')\")+\"\n});\n\n</script>\"","type":"Text","functions":["Replace","ToUpper","If"]}
{"text":"If(Length(GlossaryTable.List.Current.Glossary.Description) > Site.GlossaryListDescMaxLength-4,Substr(GlossaryTable.List.Current.Glossary.Description,0,Site.GlossaryListDescMaxLength-4)+\"...\",GlossaryTable.List.Current.Glossary.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DisclaimerTable.List.Current.Disclaimer.Description) > Site.DisclaimerListDescMaxLength-4,Substr(DisclaimerTable.List.Current.Disclaimer.Description,0,Site.DisclaimerListDescMaxLength-4)+\"...\",DisclaimerTable.List.Current.Disclaimer.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(UmmTable.List.Current.UMMStructure.NextUMMId <> NullIdentifier(),\"OUTDATED\",\nIf (UmmTable.List.Current.UMMStructure.PreviousUMMId = NullIdentifier(), \"NEW\", \"UPDATED\")) + If(Trim(UmmTable.List.Current.UMMStructure.Header) <> \"\",\" - \",\"\") +\nUmmTable.List.Current.UMMStructure.Header","type":"Text","functions":["If","NullIdentifier","Trim"]}
{"text":"FormatText(Hour(TableRecordsUMM.List.Current.UMSContent.ChangedOn),2,2,True,\"0\")\n + \":\" + FormatText(Minute(TableRecordsUMM.List.Current.UMSContent.ChangedOn),2,2,True,\"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(List.Current.RunStatsResult.calc_end<>NewDateTime(2099,12,31,0,0,0) and List.Current.RunStatsResult.run_end<>NewDateTime(2099,12,31,0,0,0),DiffSeconds(List.Current.RunStatsResult.calc_end,List.Current.RunStatsResult.run_end),\"\")","type":"Text","functions":["If","NewDateTime","DiffSeconds"]}
{"text":"If(List.Current.RunStatsResult.calc_begin<>NewDateTime(2099,12,31,0,0,0) and List.Current.RunStatsResult.calc_end<>NewDateTime(2099,12,31,0,0,0),DiffSeconds(List.Current.RunStatsResult.calc_begin,List.Current.RunStatsResult.calc_end),\"\")","type":"Text","functions":["If","NewDateTime","DiffSeconds"]}
{"text":"If(List.Current.RunStatsResult.run_begin<>NewDateTime(2099,12,31,0,0,0) and List.Current.RunStatsResult.calc_begin<>NewDateTime(2099,12,31,0,0,0),DiffSeconds(List.Current.RunStatsResult.run_begin,List.Current.RunStatsResult.calc_begin),\"\")","type":"Text","functions":["If","NewDateTime","DiffSeconds"]}
{"text":"If(Length(CounterpartiesMeteorList.List.Current.CPTY_METEOR.CptyLong)>20, Substr(CounterpartiesMeteorList.List.Current.CPTY_METEOR.CptyLong,0,20)+\"...\",CounterpartiesMeteorList.List.Current.CPTY_METEOR.CptyLong)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UnderlyingMeteorList.List.Current.UNDERLYING_METEOR.COMMODITY_METEOR_TYPE)>20, Substr(UnderlyingMeteorList.List.Current.UNDERLYING_METEOR.COMMODITY_METEOR_TYPE,0,20)+\"...\",UnderlyingMeteorList.List.Current.UNDERLYING_METEOR.COMMODITY_METEOR_TYPE)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(IasFlagMeteorList.List.Current.IASFLAG_METEOR.IFRS_ACCOUNTING_TREATMENT)>25, Substr(IasFlagMeteorList.List.Current.IASFLAG_METEOR.IFRS_ACCOUNTING_TREATMENT,0,25)+\"...\",IasFlagMeteorList.List.Current.IASFLAG_METEOR.IFRS_ACCOUNTING_TREATMENT)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BookMeteorList.List.Current.BOOK_METEOR.BOOK_LONG)>20, Substr(BookMeteorList.List.Current.BOOK_METEOR.BOOK_LONG,0,20)+\"...\",BookMeteorList.List.Current.BOOK_METEOR.BOOK_LONG)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDateTime(AddMonths(NewDate(Year,Month,1),1), \"MMMM yyyy\") + \" >\"","type":"Text","functions":["FormatDateTime","AddMonths","NewDate"]}
{"text":"\"< \" + FormatDateTime(AddMonths(NewDate(Year,Month,1),-1), \"MMMM yyyy\")","type":"Text","functions":["FormatDateTime","AddMonths","NewDate"]}
{"text":"If(Length(ContractTable.List.Current.Contract.Info )> 33,Substr(ContractTable.List.Current.Contract.Info,0,30) + \"...\",ContractTable.List.Current.Contract.Info)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OtherContractTable.List.Current.Contract.Info )> 33,Substr(OtherContractTable.List.Current.Contract.Info,0,30) + \"...\",OtherContractTable.List.Current.Contract.Info)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(MDC_ListMktLoc.List.CurrentRowNumber > 0 and Mod(MDC_ListMktLoc.List.CurrentRowNumber, 7) = 0, NewLine(), \"  |  \")","type":"Text","functions":["If","Mod","NewLine"]}
{"text":"If(FormulaName=\"\", \"'New Formula'\", If(Length(FormulaName)>8, Substr(FormulaName,0,8)+\"...\", \"'\"+FormulaName+\"'\"))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Day(StatusUpdateTable.List.Current.StatusUpdate.DateTime)<10,\"0\"+Day(StatusUpdateTable.List.Current.StatusUpdate.DateTime),Day(StatusUpdateTable.List.Current.StatusUpdate.DateTime))+\"-\"+If(Month(StatusUpdateTable.List.Current.StatusUpdate.DateTime)<10,\"0\"+Month(StatusUpdateTable.List.Current.StatusUpdate.DateTime),Month(StatusUpdateTable.List.Current.StatusUpdate.DateTime))+\"-\"+Year(StatusUpdateTable.List.Current.StatusUpdate.DateTime)+ \" \" + If(Hour(StatusUpdateTable.List.Current.StatusUpdate.DateTime)<10,\"0\"+Hour(StatusUpdateTable.List.Current.StatusUpdate.DateTime),Hour(StatusUpdateTable.List.Current.StatusUpdate.DateTime)) + \":\" +If(Minute(StatusUpdateTable.List.Current.StatusUpdate.DateTime)<10,\"0\"+Minute(StatusUpdateTable.List.Current.StatusUpdate.DateTime),Minute(StatusUpdateTable.List.Current.StatusUpdate.DateTime))","type":"Text","functions":["If","Day","Month","Year","Hour","Minute"]}
{"text":"If(Length(GetRequestByNr.List.Current.Request.ShortDescription)>25,Substr(GetRequestByNr.List.Current.Request.ShortDescription,0,25)+\"..\",GetRequestByNr.List.Current.Request.ShortDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments) > 50, Substr(SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments,0,50) + \"...\", SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments) > 20, Substr(SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments,0,20) + \"...\", SupplyCapacityNeedTable.List.Current.SupplyCapacityNeed.Comments)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"hÃ¡ \" + DiffHours(CurrTime(),TextToTime(R_Certificado.Cursor_SaberCertificadoProvPN.HORA_EMISSAO)) + \" hora(s)\"","type":"Text","functions":["DiffHours","CurrTime","TextToTime"]}
{"text":"If(NLCapacityRequestsCostList.Length > 0, IntegerToText(TableRecordCosts.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecordCosts.StartIndex + TableRecordCosts.LineCount, NLCapacityRequestsCostList.Length)) + \" of \" + NLCapacityRequestsCostList.Length + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"Substr(FormatDateTime(CurrDate, \"dd MMMM yyyy\"), 3, Length(FormatDateTime(CurrDate, \"dd MMMM yyyy\")))","type":"Text","functions":["Substr","FormatDateTime","Length"]}
{"text":"Substr(FormatDateTime(AddMonths(CurrDate, -1), \"dd MMMM yyyy\"), 3, Length(FormatDateTime(AddMonths(CurrDate, -1), \"dd MMMM yyyy\")))","type":"Text","functions":["Substr","FormatDateTime","AddMonths","Length"]}
{"text":"Day(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Month(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Year(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Month(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Year(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Month(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Year(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Month(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Year(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate)","type":"Text","functions":["Day","Month","Year"]}
{"text":"If(CapacityOverViewList.Length > 0, IntegerToText(ListRecordsGridPoints.StartIndex + 1) + \" to \" + IntegerToText(Min(ListRecordsGridPoints.StartIndex + ListRecordsGridPoints.LineCount, CapacityOverViewList.Length)) + \" of \" + CapacityOverViewList.Length + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetNeedsOverviews.Count > 0, IntegerToText(ListRecordsGridPoints.StartIndex + 1) + \" to \" + IntegerToText(Min(ListRecordsGridPoints.StartIndex + ListRecordsGridPoints.LineCount, GetNeedsOverviews.Count)) + \" of \" + GetNeedsOverviews.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridPoints.Count > 0, IntegerToText(TableRecordsAllocationAgreements.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecordsAllocationAgreements.StartIndex + TableRecordsAllocationAgreements.LineCount, GetGridPoints.Count)) + \" of \" + GetGridPoints.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(CapacityOverViewList.Length > 0,\nIntegerToText(ListRecordsGridPoints.StartIndex + 1) + \" to \" + IntegerToText(Min(ListRecordsGridPoints.StartIndex + ListRecordsGridPoints.LineCount, CapacityOverViewList.Length)) + \" of \" + (CapacityOverViewList.Length) + \" items\",\n\"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(CapacityRequestsFinalList.Length > 0, IntegerToText(TableRecordCosts.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecordCosts.StartIndex + TableRecordCosts.LineCount, CapacityRequestsFinalList.Length)) + \" of \" + CapacityRequestsFinalList.Length + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(Corpo) > 25, Substr(Corpo,0,20)+\"...\",Corpo)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Lesao) > 25, Substr(Lesao,0,20)+\"...\",Lesao)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Causa) > 25, Substr(Causa,0,20)+\"...\",Causa)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Causa) > 45, Substr(Causa,0,40)+\"...\",Causa)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TB_DESPESAS.List.Current.S_LISTA_DESPESAS.RISCO) > 6,\nSubstr(TB_DESPESAS.List.Current.S_LISTA_DESPESAS.RISCO, 0, 6) + \"...\", TB_DESPESAS.List.Current.S_LISTA_DESPESAS.RISCO)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TR_Documents.List.Current.Doc_Sinistros.COD_TIPO_DOCUMENTO= \"139\" and TR_Documents.List.Current.Doc_Sinistros.MODELO_DESC<>\"\",\n        If(Length(TR_Documents.List.Current.Doc_Sinistros.MODELO_DESC) > 20,Substr(TR_Documents.List.Current.Doc_Sinistros.MODELO_DESC,0,20)+\"...\",TR_Documents.List.Current.Doc_Sinistros.MODELO_DESC),\n            TR_Documents.List.Current.Doc_Sinistros.TIPO_DOCUMENTO\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script language='javascript' type='text/javascript'>\n$(document).ready(function(){\n    var url = $('.MainBanner .'+$('.MainBanner:nth-child(1)').attr('backImage')+' ').attr('src');\n    $('.Main_Background').css('background', \"\"url('\"\" + url + \"\"') no-repeat\"\").fadeIn(10);\n    $.cookie('PN_BACKGROUND', url, { expires: 7, path: '/' });\n\n    var bannerStatusAux = $.cookie('PN_BANNERSTATUS');\n    if(bannerStatusAux != null){\n        var bannerStatus = bannerStatusAux.split('.')[0];\n        var bannerDate = bannerStatusAux.split('.')[1];\n\n        if(bannerDate<'\"+DateToText(GetNews.List.Current.News.NewsDate)+\"') {\n            if(bannerStatus == 'colapsed'){\n                $.cookie('PN_BANNERSTATUS', 'expanded', { expires: 7, path: '/' });\n                bannerStatus = 'expanded';\n            }   \n        }  \n    }\n\n    /*Tooltip*/\n    var moreNewsLnk = $('#\" + MoreNews.Id + \"');\n    if((bannerDate<'\"+DateToText(GetNews.List.Current.News.NewsDate)+ \"') || (bannerDate==null && \"+ToLower(GetNews.List.Current.News.NewsDate>=CurrDate())+\"==true)) {\n            /*Mostra tooltip para quando existe uma noticia nova*/\n            moreNewsLnk.tooltipster('show').tooltipster('disable');\n\n            /*Esconde a tooltip ao fim de 5 segundos*/\n            setTimeout(function() { \n                moreNewsLnk.tooltipster('hide').tooltipster('disable'); \n            },5000); \n     } else {\n            /*Por omissao esconde a tooltip*/\n            moreNewsLnk.tooltipster('hide').tooltipster('disable'); \n    }   \n\n    if(bannerStatus == null || bannerStatus != 'colapsed'){\n        $('.BannerExpanded').show()\n        setupCarrousel('\" + BannerContainer.Id + \"','\" + DivPagination.Id + \"','\" + lnkPrevious.Id + \"','\" + lnkNext.Id + \"');\n    }\n    else{\n        var htmlText = $('.MainBanner:nth-child(1) .MainBannerTitle').html().replace(/<br>/g,' ');\n        $('.BannerColapsedText').html(htmlText);\n        \n        if($.browser.msie && $.browser.version <= 8)\n            $('.Main_Background_Overlay').css('filter', 'alpha(opacity=90)');\n        \n        $('.Main_Background_Overlay').fadeIn();\n\n        $('.BannerColapsed').show();\n    }  \n\n    $('#\" + BtnColapse.Id + \"').click(function(){\n        var htmlText = $('.MainBanner:visible .MainBannerTitle').html().replace(/<br>/g,' ');\n        $('.BannerColapsedText').html(htmlText);\n        $('#\" + BannerContainer.Id + \"').trigger('stop', true);\n        \n        $('#\" + MoreNews.Id + \"').tooltipster('hide').tooltipster('disable'); \n        $.cookie('PN_BANNERSTATUS', 'colapsed.'+'\"+GetNews.List.Current.News.NewsDate+\"', { expires: 7, path: '/' });\n\n        var originalHeight = $('.BannerExpanded').css('height');\n        var newHeight = $('.BannerColapsed').css('height');\n\n        $('.BannerExpanded').animate({height: newHeight}, 1000, function(){\n            $('.BannerExpanded').hide();\n            $('.BannerExpanded').css('height', originalHeight);\n                    \n            if($.browser.msie && $.browser.version <= 8)\n               $('.Main_Background_Overlay').css('filter', 'alpha(opacity=90)');\n            \n            $('.Main_Background_Overlay').fadeIn();\n           \n            $('.BannerColapsed').show();\n        });\n    });\n\n    $('#\" + BtnExpand.Id + \"').click(function(){\n        $.cookie('PN_BANNERSTATUS', 'expanded', { expires: 7, path: '/' });\n        $('.BannerColapsed').hide();\n        \n        if($('#\" + BannerContainer.Id + \"').data('inited')){\n            $('.BannerExpanded').slideDown(1000);\n            $('#\" + BannerContainer.Id + \"').trigger('play', true);\n        }\n        else{\n            $('.BannerExpanded').slideDown(1000, function(){\n                setupCarrousel('\" + BannerContainer.Id + \"','\" + DivPagination.Id + \"','\" + lnkPrevious.Id + \"','\" + lnkNext.Id + \"');\n            });\n        }\n        //$('#\" + BannerContainer.Id + \"').trigger('next', true);\n        $('.Main_Background_Overlay').fadeOut();\n    });\n});\n</script>\"","type":"Text","functions":["DateToText","ToLower","CurrDate"]}
{"text":"If(Substr(BannerContainer.List.Current.Banner.MainContent,Length(BannerContainer.List.Current.Banner.MainContent)-6,6)=\"</div>\",\nSubstr(BannerContainer.List.Current.Banner.MainContent,0,Length(BannerContainer.List.Current.Banner.MainContent)-6),\nBannerContainer.List.Current.Banner.MainContent)","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Substr(BannerContainer.List.Current.Banner.MainContent,Length(BannerContainer.List.Current.Banner.MainContent)-6,6)=\"</div>\",\n\"</div>\" ,\n\"\")\n\n\n","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Length(GetEmployeeByUserId.List.Current.JobTitle.Name) > 30, Substr(GetEmployeeByUserId.List.Current.JobTitle.Name,0, 30) + \"...\" ,GetEmployeeByUserId.List.Current.JobTitle.Name )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetEmployeeByUserId.List.Current.User.Name) > 15, Substr(GetEmployeeByUserId.List.Current.User.Name,0, 15) + \"...\" ,GetEmployeeByUserId.List.Current.User.Name )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetArticleById.List.Current.Article.Body) > 350, Substr(GetArticleById.List.Current.Article.Body,0,350) + \"...\", GetArticleById.List.Current.Article.Body)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DepartmentTools.List.Current.Tool.Name) > 8, Substr(DepartmentTools.List.Current.Tool.Name,0,7) + \"...\", DepartmentTools.List.Current.Tool.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MyTools.List.Current.Tool.Name) > 8, Substr(MyTools.List.Current.Tool.Name,0,7) + \"...\", MyTools.List.Current.Tool.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetUserDepartmentsWithOrWithoutOrganizationUnits.List[1].OrganizationUnit.Name) > 16, Substr(GetUserDepartmentsWithOrWithoutOrganizationUnits.List[1].OrganizationUnit.Name,0,15) + \"...\",GetUserDepartmentsWithOrWithoutOrganizationUnits.List[1].OrganizationUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetUserDepartmentsWithOrWithoutOrganizationUnits.List[0].OrganizationUnit.Name) > 16, Substr(GetUserDepartmentsWithOrWithoutOrganizationUnits.List[0].OrganizationUnit.Name,0,15) + \"...\",GetUserDepartmentsWithOrWithoutOrganizationUnits.List[0].OrganizationUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If\n(Length(GetGenericContentById.List.Current.Content.Tags) > 65,\nSubstr(GetGenericContentById.List.Current.Content.Tags,0,64) + \"...\",\nGetGenericContentById.List.Current.Content.Tags)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((Length(ShowGenericContent.List.Current.Content.Title)>65), (Substr(ShowGenericContent.List.Current.Content.Title,0,65) + \"...\"),(ShowGenericContent.List.Current.Content.Title))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetGenericContentById.List.Current.Tool.Name) > 8, Substr(GetGenericContentById.List.Current.Tool.Name,0,7) + \"...\",GetGenericContentById.List.Current.Tool.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If\n(Length(ShowConferences.List.Current.Conference.Description) > 65,\nSubstr(ShowConferences.List.Current.Conference.Description,0,64) + \"...\",\nShowConferences.List.Current.Conference.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((Length(ShowConferences.List.Current.Content.Title)>65), (Substr(ShowConferences.List.Current.Content.Title,0,65) + \"...\"),(ShowConferences.List.Current.Content.Title))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If\n(Length(GetArticleById.List.Current.Article.ShortDescription) > 65,\nSubstr(GetArticleById.List.Current.Article.ShortDescription,0,64) + \"...\",\nGetArticleById.List.Current.Article.ShortDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((Length(ShowArticles.List.Current.Content.Title)>65), (Substr(ShowArticles.List.Current.Content.Title,0,65) + \"...\"),(ShowArticles.List.Current.Content.Title))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(AllTools.List.Current.ToolStruct.Name) > 8, Substr(AllTools.List.Current.ToolStruct.Name,0,7) + \"...\", AllTools.List.Current.ToolStruct.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(ConferenceTable.List.Current.Conference.Description)>200), Substr(ConferenceTable.List.Current.Conference.Description,0,150) + \"(...)\", ConferenceTable.List.Current.Conference.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":" If(Length(MyTools.List.Current.InMyTools.Title) > 13, Substr(MyTools.List.Current.InMyTools.Title,0,10) +\"...\", MyTools.List.Current.InMyTools.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(AllTools.List.Current.NotInMyTools.Title) > 13, Substr(AllTools.List.Current.NotInMyTools.Title,0,10) +\"...\", AllTools.List.Current.NotInMyTools.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToInteger(ListRecord.List.Current.FacetOption.Id)/7 > 2, \"> \", \"\") +\nIf(TextToInteger(ListRecord.List.Current.FacetOption.Id)/7 > 2, Trunc((TextToInteger(ListRecord.List.Current.FacetOption.Id)-1)/7), TextToInteger(ListRecord.List.Current.FacetOption.Id)/7) +\nIf(TextToInteger(ListRecord.List.Current.FacetOption.Id)/7 > 1, \" weeks\", \" week\")","type":"Text","functions":["If","TextToInteger","Trunc"]}
{"text":"If(TextToInteger(RecordList.List.Current.FacetOption.Id)/7 > 2, \"> \", \"\") +\nIf(TextToInteger(RecordList.List.Current.FacetOption.Id)/7 > 2, Trunc((TextToInteger(RecordList.List.Current.FacetOption.Id)-1)/7), TextToInteger(RecordList.List.Current.FacetOption.Id)/7) +\nIf(TextToInteger(RecordList.List.Current.FacetOption.Id)/7 > 1, \" weeks\", \" week\")","type":"Text","functions":["If","TextToInteger","Trunc"]}
{"text":"If(ShowfullSSN, \nIf(ShowRecord2.Record.EB5_Investor.SsnNumber <> \"\",\nShowRecord2.Record.EB5_Investor.SsnNumber, \"***-**-\" + Substr(ShowRecord2.Record.EB5_Investor.SsnNumber, Length        (ShowRecord2.Record.EB5_Investor.SsnNumber) - 4, 4)),\n\"-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(GetInvestorImmigrantI829Cases.InvestorCases.EB5_ImmigrantInvestorCase.Client.Client.LPREndDate <> NullDate(),DateTimeToDate(AddMonths(GetInvestorImmigrantI829Cases.InvestorCases.EB5_ImmigrantInvestorCase.Client.Client.LPREndDate,-3)) + \" To \" + GetInvestorImmigrantI829Cases.InvestorCases.EB5_ImmigrantInvestorCase.Client.Client.LPREndDate, \"-\")","type":"Text","functions":["If","NullDate","DateTimeToDate","AddMonths"]}
{"text":"If(ImmigrantInvestorsTable.List.Current.ProjectInvestorItemForImmigrants.CPREnd <> NullDate(),DateTimeToDate(AddMonths(ImmigrantInvestorsTable.List.Current.ProjectInvestorItemForImmigrants.CPREnd,-3)) + \" To \" + ImmigrantInvestorsTable.List.Current.ProjectInvestorItemForImmigrants.CPREnd, \"-\")","type":"Text","functions":["If","NullDate","DateTimeToDate","AddMonths"]}
{"text":"If(ShowfullSSN, AccountProfile_ShowRecord.Record.AccountHolderInfo.TaxId, \"***-**-\" + Substr(AccountProfile_ShowRecord.Record.AccountHolderInfo.TaxId, Length(AccountProfile_ShowRecord.Record.AccountHolderInfo.TaxId) - 4, 4))\n\n\n","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Substr(rms,0,2)=\"99\", \"\",ToLower(R_Recibo.S_DetalheRecibo.TIPO_DOC))","type":"Text","functions":["If","Substr","ToLower"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(true, '\" + InputId + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + MaxFileNameLength + \", \" + If(SpecialCharacters, \"true\", \"false\") + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(false, '\" + InputId + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + MaxFileNameLength + \", \" + If(SpecialCharacters, \"true\", \"false\") + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '\" + PopupUploadLink.Id + \"', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"If(Length(ActionItemsList.List.Current.ActionItem.Name) > 60, Substr(ActionItemsList.List.Current.ActionItem.Name,0,60)+\"...\",ActionItemsList.List.Current.ActionItem.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n    if(!$('.Page').hasClass('desktop')) {\n        $('#\" + InputWidgetId + \"').click(function(){\n            $(this).blur();\n        });\n    }\n\n    dateServer = '\" + GetServerDateFormat.ServerDateFormat + \"';\n\n     \" + If(DisabledDates <> \"\", \"\n        var DisabledDays = \"\"\" + DisabledDates + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") + \n\n    If(InitialDate <> DateToDateTime(NullDate()), \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n        var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + DateFormat + \"');\n    \" ,\"\n        var DefaultDate = $('#\" + InputWidgetId + \"').val();\n        if (DefaultDate == \"\"\"\" || DefaultDate == null) {\n            DefaultDate = CalendarSilk.getTodayDate('\" + DateFormat + \"');\n        }\") + \"\n    var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + DateFormat + \"');\" +\n\n    If(DateFormat = \"\", \"\"\"%Y-%m-%d\"\"\", \"\") + \"\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(DateFormat <> \"\", \"\n        dateFormat      :   \"\"\" + DateFormat + \"\"\",\", \"\") +\n    If(DisabledDates <> \"\" or DisabledWeekDays <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(DisabledWeekDays <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + DisabledWeekDays + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(DisabledDates <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> DateToDateTime(NullDate()), \"\n        min             :   CalendarSilk.convertDateToInt(\"\"\" + MinDate + \"\"\",'\" + DateFormat + \"'),\" ,\"\") +\n    If(MaxDate <> DateToDateTime(NullDate()), \"\n        max             :   CalendarSilk.convertDateToInt(\"\"\" + MaxDate + \"\"\",'\" + DateFormat + \"'),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + InputWidgetId + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                               $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\")).change();\n                            },\n        onSelect        :   function() {\n                               $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\")).change();\n                            },\n        cont            :   \"\"\" + CalendarWrapper.Id + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["If","DateToDateTime","NullDate","IntegerToText"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n    if ($('#\" + InputWidgetId + \"').attr('readonly'))\n    return;\n\n    if($('.Page').hasClass('desktop')) {\n        $('#\" + InputWidgetId + \"').bind('keypress', function(e) {\n            var code = e.keyCode || e.which;\n            if(code == 13) {\n                $('#\" + InputWidgetId + \"').blur();\n                $('.calTriggerOut').click();\n            }\n        });\n    } else {\n        $('#\" + InputWidgetId + \"').click(function(){\n            $(this).blur();\n        });\n    }\n\n    dateServer = '\" + GetServerDateFormat.ServerDateFormat + \"';\n\n    \" + If(DisabledDates <> \"\", \"\n        var DisabledDays = \"\"\" + DisabledDates + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") +\n\n    If(InitialDate <> DateToDateTime(NullDate()), \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n        var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + DateFormat + \"');\n    \" ,\"\n        var DefaultDate = $('#\" + InputWidgetId + \"').val();\n        if (DefaultDate == \"\"\"\" || DefaultDate == null) {\n            DefaultDate = CalendarSilk.getTodayDate('\" + DateFormat + \"');\n        }\") + \"\n    var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + DateFormat + \"');\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(DateFormat <> \"\", \"\n        dateFormat      :   \"\"\" + DateFormat + \"\"\",\", \"\") +\n    If(DisabledDates <> \"\" or DisabledWeekDays <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(DisabledWeekDays <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + DisabledWeekDays + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(DisabledDates <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> DateToDateTime(NullDate()), \"\n        min             :   CalendarSilk.convertDateToInt(\"\"\" + MinDate + \"\"\",'\" + DateFormat + \"'),\" ,\"\") +\n    If(MaxDate <> DateToDateTime(NullDate()), \"\n        max             :   CalendarSilk.convertDateToInt(\"\"\" + MaxDate + \"\"\",'\" + DateFormat + \"'),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + InputWidgetId + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                                $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\")).change();\n                            },\n        onSelect        :   function() {\n                                $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\")).change();\" +\n                                If(ShowTime  <> True, \"this.hide();$('.calTriggerOut').remove()\", \"\") + \"\n                            },\n        onFocus         :   function() {\" +\n                                If(ShowTime = True, \"\n                                    if ($('#\" + InputWidgetId + \"').val() !=  '\" + DateToDateTime(NullDate()) + \"') {\n                                        /*var CalInputVal = $(\"\"#\" + InputWidgetId + \"\"\").val();\n                                        if (CalInputVal == \"\"\"\") {CalInputVal = '\" + CurrDateTime() + \"'};\n                                        this.selection.set(CalendarSilk.convertDateToInt(CalInputVal.substring(0,10),'\" + DateFormat + \"'));*/\n                                    }\", \"\") + \"\n                                $('.Page').append('<div class=\"\"calTriggerOut\"\"></div>');\n                                $('.Calendar-topBar td, .Calendar-day-disabled').on('click', function(){ return false; });\n                                $(document).on('click','.Calendar-topCont *',function(){\n                                    $('body').click();\n                                });\n                                $(document).on('click','.calTriggerOut',function(){\n                                    $(this).remove();\n                                    $('body > .Calendar-topCont').hide();\n                                });\n                            },\n        trigger         :   \" + If(ButtonWidgetId <> \"\", \"\"\"\" + ButtonWidgetId + \"\"\"\",\"\"\"\" + InputWidgetId + \"\"\"\") + \",\n        align           :   \"\"\"  + Align + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["If","DateToDateTime","NullDate","IntegerToText","CurrDateTime"]}
{"text":"If(Length(TR_Recibos.List.Current.Out_RecibosSinistros.DESC_DESPESA) > 13, Substr(TR_Recibos.List.Current.Out_RecibosSinistros.DESC_DESPESA,0,10)+\"...\",TR_Recibos.List.Current.Out_RecibosSinistros.DESC_DESPESA)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Tools.List.Current.Tool.Name) > 8, Substr(Tools.List.Current.Tool.Name,0,7) + \"...\", Tools.List.Current.Tool.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ArticlesTable.List.Current.Article.ShortDescription)>100,\n    Substr(ArticlesTable.List.Current.Article.ShortDescription,0,97)+\"...\",\n    ArticlesTable.List.Current.Article.ShortDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ArticlesTable.List.Current.Content.Title)>100,\n    Substr(ArticlesTable.List.Current.Content.Title,0,97)+\"...\",\n    ArticlesTable.List.Current.Content.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(ConferenceTable.List.Current.Conference.Description)> 255, Substr(ConferenceTable.List.Current.Conference.Description,0,254)+\"...\",ConferenceTable.List.Current.Conference.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ItemDate<>NullDate(), DateTimeToDate(ItemDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(NewComers.List.Current.User.Name + \" \" + Substr(NewComers.List.Current.UserData.MiddleName,0,1) + \" \" + NewComers.List.Current.UserData.LastName)>15,\n    Substr(NewComers.List.Current.User.Name + \" \" + Substr(NewComers.List.Current.UserData.MiddleName,0,1) + \" \" + NewComers.List.Current.UserData.LastName,0,15)+\"...\", \n    NewComers.List.Current.User.Name + \" \" + Substr(NewComers.List.Current.UserData.MiddleName,0,1) + \" \" + NewComers.List.Current.UserData.LastName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length( AtomItem.Tilte )>40, Substr(AtomItem.Tilte,0,40)+\"...\", AtomItem.Tilte)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListOfNews.List.Current.AtomItem.Tilte)> 112,Substr(ListOfNews.List.Current.AtomItem.Tilte,0,109)+\"...\",ListOfNews.List.Current.AtomItem.Tilte)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords1.List.Current.AtomItem.Summary)>100, Substr(ListRecords1.List.Current.AtomItem.Summary,0,100)+\"...\", ListRecords1.List.Current.AtomItem.Summary)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ProviderAuditId = NullIdentifier(), ToUpper(\"New Provider Audit Report\"), ToUpper(\"Provider Audit Report\"))","type":"Text","functions":["If","NullIdentifier","ToUpper"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n  if ($('#\" + InputWidgetId + \"').attr('readonly'))\n    return;\n\n    \" + If(DisabledDates <> \"\", \"\n        var DisabledDays = \"\"\" + DisabledDates + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") +\n\n    If(InitialDate <> \"1900-01-01\" and InitialDate <> \"1900-01-01 00:00:00\", \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n    \" ,\"\n        var DefaultDate = $('#\" + InputWidgetId + \"').attr('value');\n        if (DefaultDate == \"\"\"\") {\n            var todayDate = new Date();\n            DefaultDate = String((10000*todayDate.getFullYear()) + (100*(todayDate.getMonth()+1)) + (todayDate.getDate()));\n        };\") + \"\n        var DefaultDateNew = parseInt(DefaultDate.replace(/\\-/g, '').substring(0,8));\" +\n\n    If(DateFormat = \"\", \"\"\"%Y-%m-%d\"\"\", \"\") + \"\n\n    $('#\" + InputWidgetId + \"').blur();\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(DateFormat <> \"\", \"\n        dateFormat      :   \"\"\" + DateFormat + \"\"\",\", \"\") +\n    If(DisabledDates <> \"\" or DisabledWeekDays <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(DisabledWeekDays <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + DisabledWeekDays + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(DisabledDates <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> \"1900-01-01\" and MinDate <> \"1900-01-01 00:00:00\" and MinDate <> \"\", \"\n        min             :   convertDateToInt(\"\"\" + MinDate + \"\"\"),\" ,\"\") +\n    If(MaxDate <> \"1900-01-01\" and MaxDate <> \"1900-01-01 00:00:00\" and MinDate <> \"\", \"\n        max             :   convertDateToInt(\"\"\" + MaxDate + \"\"\"),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + InputWidgetId + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                                $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\"));\n                            },\n        onSelect        :   function() {\n                                $(\"\"#\" + InputWidgetId + \"\"\").val(this.selection.print(\"\"\" + DateFormat + \"\"\", \"\" ... \"\"));\" +\n                                If(ShowTime  <> True, \"this.hide();$('.calTriggerOut').remove()\", \"\") + \"\n                            },\n        onFocus         :   function() {\n                                $('body').append('<div class=\"\"calTriggerOut\"\"></div>');\n                            },\n        electric        :   \" + ToLower(BooleanToText(not UpdateOnCloseOnly)) + \",        \n        trigger         :   \" + If(ButtonWidgetId <> \"\", \"\"\"\" + ButtonWidgetId + \"\"\"\",\"\"\"\" + InputWidgetId + \"\"\"\") + \",\n        align           :   \"\"\"  + Align + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["If","IntegerToText","ToLower","BooleanToText"]}
{"text":"If(Length(UserName) > 17, Substr(UserName, 0, 14) + \"...\", UserName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProductAfterBlendName) > 10,\n    Substr(ProductAfterBlendName,0,10)+\"...\",\n    ProductAfterBlendName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(lrNotificacoes.List.Current.User.Name)>13,Substr(lrNotificacoes.List.Current.User.Name,0,13)+\"...\",lrNotificacoes.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(GetTruckArrivalOrdersByArrivalId.List.Current.Product.Name)> 20, \n    Substr(GetTruckArrivalOrdersByArrivalId.List.Current.Product.Name,0,17) + \"...\",\n    GetTruckArrivalOrdersByArrivalId.List.Current.Product.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trCheckListTemplate.List.Current.CheckListTemplate.Header) > 50, Substr(trCheckListTemplate.List.Current.CheckListTemplate.Header,0,50)+\"...\",trCheckListTemplate.List.Current.CheckListTemplate.Header)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TimeLogList_Table.List.Current.EventActivityId <> NullIdentifier() and TimeLogList_Table.List.Current.Description <> \"\" ,\" - \" +  \nIf(Length(TimeLogList_Table.List.Current.Description ) > 25, Substr(TimeLogList_Table.List.Current.Description ,0,25) + \"...\",TimeLogList_Table.List.Current.Description ),\n\"\")","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If(Length(TimeLogList_Table.List.Current.TaskOrEventCode)>25\nand not TimeLogList_Table.List.Current.DateTimeShowOnly, Substr(TimeLogList_Table.List.Current.TaskOrEventCode,0,25)+\"...\", TimeLogList_Table.List.Current.TaskOrEventCode)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(CallTable.List.Current.MarineMOT.Name)>20,Substr(CallTable.List.Current.MarineMOT.Name,0,20)+\"(...)\",CallTable.List.Current.MarineMOT.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TrucksWorkInstructions.List.Current.RTTMOT.LicencePlate)>20,Substr(TrucksWorkInstructions.List.Current.RTTMOT.LicencePlate,0,20)+\"(...)\",TrucksWorkInstructions.List.Current.RTTMOT.LicencePlate)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(CallTable.List.Current.RailcarMOT.IdentificationCode)>20,Substr(CallTable.List.Current.RailcarMOT.IdentificationCode,0,20)+\"(...)\",CallTable.List.Current.RailcarMOT.IdentificationCode)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(NewTime(Hour(EventActivityRec.EndDateTime_Local),Minute(EventActivityRec.EndDateTime_Local),0),0,Length(NewTime(Hour(EventActivityRec.EndDateTime_Local),Minute(EventActivityRec.EndDateTime_Local),0))-3)","type":"Text","functions":["Substr","NewTime","Hour","Minute","Length"]}
{"text":"Substr(NewTime(Hour(EventActivityRec.StartDateTime_Local),Minute(EventActivityRec.StartDateTime_Local),0),0,Length(NewTime(Hour(EventActivityRec.StartDateTime_Local),Minute(EventActivityRec.StartDateTime_Local),0))-3)","type":"Text","functions":["Substr","NewTime","Hour","Minute","Length"]}
{"text":"Substr(NewTime(Hour(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),Minute(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),0),0,Length(NewTime(Hour(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),Minute(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),0))-3)","type":"Text","functions":["Substr","NewTime","Hour","Minute","Length"]}
{"text":"\"Planning: \"+Day(WITable.List.Current.PlanningDateTime)+\"-\"+Month(WITable.List.Current.PlanningDateTime) + \" \" + Substr(DateTimeToTime(WITable.List.Current.PlanningDateTime),0,5)","type":"Text","functions":["Day","Month","Substr","DateTimeToTime"]}
{"text":"\"Planning: \"+Day(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime)+\"-\"+Month(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime) + \" \" + Substr(DateTimeToTime(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime),0,5)","type":"Text","functions":["Day","Month","Substr","DateTimeToTime"]}
{"text":"If(AssignedGroupId = NullIdentifier(),\"\",\"for \"+If(Length(GetTypeRecordById.List.Current.TypeRecord.Label)>25,Substr(GetTypeRecordById.List.Current.TypeRecord.Label,0,25),GetTypeRecordById.List.Current.TypeRecord.Label))","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If (Length( ToleranceTable.List.Current.Tolerance.Description)>50, \n    Substr(ToleranceTable.List.Current.Tolerance.Description, 0, 50) + \"...\", \n    ToleranceTable.List.Current.Tolerance.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Table_ContentList.List.Current.ACL_CONTENT.TITLE) > 50,Substr(Table_ContentList.List.Current.ACL_CONTENT.TITLE,0,50) + \"...\",Table_ContentList.List.Current.ACL_CONTENT.TITLE)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Locale <> \"\", \"\" + NewLine(), \"\") +\n\"<script type='text/javascript'>\n   // DIRECTORY HOLDING BUTTON IMAGES\n     buttonPath = \"\"\" + GetOwnerURLPath() + \"img/\"\"; \n\n   // CONSTRUCTION OF WHIZZYWIG\n/*  Config: LIST OF BUTTONS TO SHOW. \n Valid parameters are: 'all', which is equivalent to \n      'formatblock fontname fontsize newline bold italic \n      underline | left center right | number bullet indent outdent | undo redo \n      | color hilite rule | link image table | clean html spellcheck'*/\n makeWhizzyWig(\"\"\" + Input + \"\"\", \"\"\" + Config + \"\"\");\n</script>\"","type":"Text","functions":["If","NewLine","GetOwnerURLPath"]}
{"text":"If(TableRecords1.List.Current.Lbpm_HistoryItem.ActivityEndDate <> NullDate(),\nDiffDays(TableRecords1.List.Current.Lbpm_HistoryItem.ActivityStartDate, TableRecords1.List.Current.Lbpm_HistoryItem.ActivityEndDate),\nDiffDays(TableRecords1.List.Current.Lbpm_HistoryItem.ActivityStartDate, CurrDateTime())) + \"dia(s)\"","type":"Text","functions":["If","NullDate","DiffDays","CurrDateTime"]}
{"text":"If(Length(GetSpotById.List.Current.SpotDetails.Remarks) > 100, Substr(GetSpotById.List.Current.SpotDetails.Remarks,0,97) + \"...\", GetSpotById.List.Current.SpotDetails.Remarks)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords.List.Current.Lbpm_HistoryItem.ActivityEndDate <> NullDate(),\nDiffDays(TableRecords.List.Current.Lbpm_HistoryItem.ActivityStartDate, TableRecords.List.Current.Lbpm_HistoryItem.ActivityEndDate),\nDiffDays(TableRecords.List.Current.Lbpm_HistoryItem.ActivityStartDate, CurrDateTime())) + \"dia(s)\"","type":"Text","functions":["If","NullDate","DiffDays","CurrDateTime"]}
{"text":"If(\nErApolice.Record.PolicyDetailInCogen22BSGOutputData.statusChangeDate = NullDate(), \"\", DateTimeToDate( ErApolice.Record.PolicyDetailInCogen22BSGOutputData.statusChangeDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Comment.CommentsElement.commentDate=TextToDate(\"\"),\"\", DateToText(Comment.CommentsElement.commentDate))\n","type":"Text","functions":["If","TextToDate","DateToText"]}
{"text":"NewDate(Year(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta = NullDate(), \"<nÃ£o definida>\", NewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento = NullDate(), \"<nÃ£o definida>\",\nNewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.StrCliente.CodPostal = \"\", \"\", Substr(GetBpsPedidoCotacaoById.List.Current.StrCliente.CodPostal, 0, 4) +\nIf(Length(GetBpsPedidoCotacaoById.List.Current.StrCliente.CodPostal)>4,\"-\" + Substr(GetBpsPedidoCotacaoById.List.Current.StrCliente.CodPostal, 5, 3),\"\"))","type":"Text","functions":["If","Substr","Length"]}
{"text":"NewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Status_Recommendation = Entities.STATUS_RECOMMENDATION.GROUP_IMPLEMENTATION,\"\", DiffDays(ReportDate, TextToDate(\nIf(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Status_Recommendation = Entities.STATUS_RECOMMENDATION.IMPLEMENTED,TableRecords1.List.Current.RECOMMENDATIONS_PCI.Conclusion_Date,\nIf(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Status_Recommendation = Entities.STATUS_RECOMMENDATION.RISK_ACCEPTED,  TableRecords1.List.Current.RECOMMENDATIONS_PCI.Risk_Accepted_Date, \nIf(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Status_Recommendation = Entities.STATUS_RECOMMENDATION.VALIDATED, \nIf(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Conclusion_Date <> NullDate(),TableRecords1.List.Current.RECOMMENDATIONS_PCI.Conclusion_Date, \nIf(TableRecords1.List.Current.RECOMMENDATIONS_PCI.Risk_Accepted_Date <> NullDate(),TableRecords1.List.Current.RECOMMENDATIONS_PCI.Risk_Accepted_Date,CurrDate())),\nCurrDate()\n))))))","type":"Text","functions":["If","DiffDays","TextToDate","NullDate","CurrDate"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ImpostoSelo,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.IRS,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoPremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoPremiosNaoVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoEstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoEstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.EstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.EstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.PremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.PremiosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(trMatrix.List.Current.ENSMRN_ProductMatrix.CoverageName = \"\",\n \"&nbsp;\",\n TrimEnd(TrimStart(trMatrix.List.Current.ENSMRN_ProductMatrix.CoverageName)))","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(DateTimeToDate(TableUnavailable.List.Current.X_User_Unavailable_List.UpdateAt) = NullDate(),\"\",DateTimeToDate(TableUnavailable.List.Current.X_User_Unavailable_List.UpdateAt))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(QuestionGroupId=NullIdentifier(),\" Ungrouped Question\",\" Group Question '\"+Substr(GetRec_QuestionGroup.List.Current.QUESTION_GROUP.Title,0,25) + \"'\")","type":"Text","functions":["If","NullIdentifier","Substr"]}
{"text":"Substr(TR_InquiryList.List.Current.INQUIRY.Name,0,Min(Length(TR_InquiryList.List.Current.INQUIRY.Name),50)) + If (Length(TR_InquiryList.List.Current.INQUIRY.Name) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"If(Length(trListarAlertas.List.Current.Query_GAC_ListaAlertas.Texto)>250,Substr(trListarAlertas.List.Current.Query_GAC_ListaAlertas.Texto,0,247)+\"...\",trListarAlertas.List.Current.Query_GAC_ListaAlertas.Texto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trAlertasGenericos.List.Current.Query_GAC_ListaAlertas.Texto)>25,Substr(trAlertasGenericos.List.Current.Query_GAC_ListaAlertas.Texto,0,22)+\"...\",trAlertasGenericos.List.Current.Query_GAC_ListaAlertas.Texto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trAlertasAuto.List.Current.GAC_ListaAlertas.Texto)>25,Substr(trAlertasAuto.List.Current.GAC_ListaAlertas.Texto,0,22)+\"...\",trAlertasAuto.List.Current.GAC_ListaAlertas.Texto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trMeusAlertas.List.Current.GAC_ListaAlertas.Texto)>25,Substr(trMeusAlertas.List.Current.GAC_ListaAlertas.Texto,0,22)+\"...\",trMeusAlertas.List.Current.GAC_ListaAlertas.Texto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"NewDate(Year(ListaTarefas.Current.GAC_TAREFA.DataSituacao),Month(ListaTarefas.Current.GAC_TAREFA.DataSituacao),Day(ListaTarefas.Current.GAC_TAREFA.DataSituacao))\n","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(ListaTarefas.Current.GAC_TAREFA.DataActivacao),Month(ListaTarefas.Current.GAC_TAREFA.DataActivacao),Day(ListaTarefas.Current.GAC_TAREFA.DataActivacao))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim),Month(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim),Day(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim))\n","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio),Month(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio),Day(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio))\n","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(TRTarefas.List.Current.GAC_TAREFA.DataActivacao),Month(TRTarefas.List.Current.GAC_TAREFA.DataActivacao),Day(TRTarefas.List.Current.GAC_TAREFA.DataActivacao))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewTime(Hour(TRContactos.List.Current.GAC_CONTACTO.DataHora),Minute(TRContactos.List.Current.GAC_CONTACTO.DataHora),Second(TRContactos.List.Current.GAC_CONTACTO.DataHora))","type":"Time","functions":["NewTime","Hour","Minute","Second"]}
{"text":"NewDate(Year(TRContactos.List.Current.GAC_CONTACTO.DataHora),Month(TRContactos.List.Current.GAC_CONTACTO.DataHora),Day(TRContactos.List.Current.GAC_CONTACTO.DataHora))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(erProspect.Record.GAC_PROSPECT.DataNasc <> NullDate(), NewDate(Year(erProspect.Record.GAC_PROSPECT.DataNasc),Month(erProspect.Record.GAC_PROSPECT.DataNasc),Day(erProspect.Record.GAC_PROSPECT.DataNasc)), \"\")","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(ShowRecord1.Record.GAC_ALERTA.DataFinal),Month(ShowRecord1.Record.GAC_ALERTA.DataFinal),Day(ShowRecord1.Record.GAC_ALERTA.DataFinal))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(ShowRecord1.Record.GAC_ALERTA.DataInicial),Month(ShowRecord1.Record.GAC_ALERTA.DataInicial),Day(ShowRecord1.Record.GAC_ALERTA.DataInicial))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(DecimalToInteger(GetNroTarefas.List.Current.GAC_ACCAOCOM.MetricaPotencial) = 0, 0, ((TextToInteger(Resultado.Current.GAC_Relatorio2.ValorRetorno)) * 100) / DecimalToInteger(GetNroTarefas.List.Current.GAC_ACCAOCOM.MetricaPotencial))","type":"Decimal","functions":["If","DecimalToInteger","TextToInteger"]}
{"text":"If(DateTimeToDate(trListarTarefas.List.Current.GAC_TAREFA.DataVencimento)=NullDate(),\"\",DateTimeToDate(trListarTarefas.List.Current.GAC_TAREFA.DataVencimento))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If( Year(trListarTarefas.List.Current.GAC_TAREFA.DataSituacao) <> \"1900\", NewDate(Year(trListarTarefas.List.Current.GAC_TAREFA.DataSituacao),Month(trListarTarefas.List.Current.GAC_TAREFA.DataSituacao),Day(trListarTarefas.List.Current.GAC_TAREFA.DataSituacao)), \"\")","type":"Text","functions":["If","Year","NewDate","Month","Day"]}
{"text":"If(Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.email,\"/\")<>-1,Substr(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.email,Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.email,\"/\")+1,Length(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.email)),CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.email)","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"If(Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.mobile,\"/\")<>-1,Substr(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.mobile,Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.mobile,\"/\")+1,Length(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.mobile)),CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.mobile)","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"If(Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.phone,\"/\")<>-1,Substr(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.phone,Index(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.phone,\"/\")+1,Length(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.phone)),CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.contacts.Current.ContactsElement.phone)","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"If(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.addressElement.AddressElem.postalCode=\"\",\"\",Substr(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.addressElement.AddressElem.postalCode,0,4)+\nIf(Length(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.addressElement.AddressElem.postalCode)>4,\"-\"+Substr(CC41_ConsultarEntidade.outputData.GetClientBSGOutputData.addressElement.AddressElem.postalCode,5,3),\"\"))","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto<>\"\",Substr(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto,0,200) + If(Length(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto)>200,\"...\",\"\") + \"<img src='/GAC_FrontEnd/img/InfoBalloon.png' alt='\"+ GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto+\"'/>\",\"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(erFileInfo.Record.FILEINFO.FILESIZE <> 0,\nFormatDecimal(TextToDecimal(If(erFileInfo.Record.FILEINFO.FILESIZE < 1024,\nerFileInfo.Record.FILEINFO.FILESIZE,\n(erFileInfo.Record.FILEINFO.FILESIZE/1024))\n),1,\",\",\"\") + If(erFileInfo.Record.FILEINFO.FILESIZE < 1024,\n\"bytes\",\"KB\"), \"?KB\")","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(trResources.List.Current.X_RESOURCE.Size = 0, \"?KB\",\nFormatDecimal(TextToDecimal(If(trResources.List.Current.X_RESOURCE.Size < 1024,\ntrResources.List.Current.X_RESOURCE.Size,\n(trResources.List.Current.X_RESOURCE.Size/1024))\n),1,\",\",\"\") + If(trResources.List.Current.X_RESOURCE.Size < 1024,\n\"bytes\",\"KB\"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(Claim_Header.Claim_Header.AccidentAt <> NullDate(), DateTimeToDate(Claim_Header.Claim_Header.AccidentAt), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Event_Header.Event_Header.AccidentAt <> NullDate(), DateTimeToDate(Event_Header.Event_Header.AccidentAt), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableComments.List.Current.Comment_List.Description) > 80, Substr(TableComments.List.Current.Comment_List.Description,0,80) + \" ...\", TableComments.List.Current.Comment_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(TableSubUARs.List.Current.SubUAR_List.ExternalEndDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs.List.Current.SubUAR_List.ExternalEndDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableSubUARs.List.Current.SubUAR_List.ExternalStartDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs.List.Current.SubUAR_List.ExternalStartDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(TextToDate(tableEntity.List.Current.Entity_List.BirthDate)<>NullDate(),TextToDate(tableEntity.List.Current.Entity_List.BirthDate),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TextToDate(TableProvider.List.Current.Provider_List.BirthDate)<>NullDate(),TextToDate(TableProvider.List.Current.Provider_List.BirthDate),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"FormatDecimal(TextToDecimal(If(AverageValue>EditSubClaim.Record.SubClaim_Person_Struct.YearAmount_D_Sub,AverageValue,EditSubClaim.Record.SubClaim_Person_Struct.YearAmount_D_Sub)),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If(DiffDays(NewDate(2000,Month(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate),Day(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate)), NewDate(2000,Month(EditSubClaim.Record.SubClaim_Struct.AccidentDate),Day(EditSubClaim.Record.SubClaim_Struct.AccidentDate)))<0,Year(EditSubClaim.Record.SubClaim_Struct.AccidentDate)-Year(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate)-1,Year(EditSubClaim.Record.SubClaim_Struct.AccidentDate)-Year(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate))","type":"Integer","functions":["If","DiffDays","NewDate","Month","Day","Year"]}
{"text":"If(TableScheduleList.List.Current.X_WL_AppointmentList.ExpireDate = NullDate(),\"\",DateTimeToDate(TableScheduleList.List.Current.X_WL_AppointmentList.ExpireDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableScheduleList.List.Current.X_WL_AppointmentList.CreationDate = NullDate(),\"\",DateTimeToDate(TableScheduleList.List.Current.X_WL_AppointmentList.CreationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableScheduleList.List.Current.X_WL_AppointmentList.StatusDate = NullDate(),\"\",DateTimeToDate(TableScheduleList.List.Current.X_WL_AppointmentList.StatusDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableScheduleList.List.Current.X_WL_AppointmentList.Description) >= 100,Substr(TableScheduleList.List.Current.X_WL_AppointmentList.Description,0,100) + \"...\",TableScheduleList.List.Current.X_WL_AppointmentList.Description) \n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(TextToDate(EntryRecord.X_WL_Entry.Date))\n= NullDate() or TextToDate(EntryRecord.X_WL_Entry.Date) = \"0001-01-01\",\"\",DateTimeToDate(TextToDate(EntryRecord.X_WL_Entry.Date)))","type":"Text","functions":["If","DateTimeToDate","TextToDate","NullDate"]}
{"text":"If(TableProcessList.List.Current.X_WL_FolderList.Date = NullDate(),\"\",DateTimeToDate(TableProcessList.List.Current.X_WL_FolderList.Date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ProcessRecord.X_WL_FolderList.Date = NullDate(),\"\",\nDateTimeToDate(ProcessRecord.X_WL_FolderList.Date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DateTimeToDate(TextToDate(TableEntryList.List.Current.X_WL_EntryList.Date))\n= NullDate() or TextToDate(TableEntryList.List.Current.X_WL_EntryList.Date) = \"0001-01-01\",\"\",DateTimeToDate(TextToDate(TableEntryList.List.Current.X_WL_EntryList.Date)))","type":"Text","functions":["If","DateTimeToDate","TextToDate","NullDate"]}
{"text":"If(TableReceipts.List.Current.VAB_Receipt_List.Status = OKCS_ReceiptStatus_GetById.Receipt_Status and TextToDate(TableReceipts.List.Current.VAB_Receipt_List.DueDate) < CurrDate(),TableReceipts.List.Current.VAB_Receipt_List.ReceiptNumber,\" \" + TableReceipts.List.Current.VAB_Receipt_List.ReceiptNumber)","type":"Text","functions":["If","TextToDate","CurrDate"]}
{"text":"If(TableReceipts.List.Current.VAB_Receipt_List.Status = OKCS_ReceiptStatus_GetById.Receipt_Status and TextToDate(TableReceipts.List.Current.VAB_Receipt_List.DueDate) < CurrDate(),\"!\",\"\") ","type":"Text","functions":["If","TextToDate","CurrDate"]}
{"text":"If(tblReceiptList.List.Current.VAB_Receipt_List.Status  = OKCS_ReceiptStatus_GetById.Receipt_Status and TextToDate(tblReceiptList.List.Current.VAB_Receipt_List.DueDate ) < CurrDate(),tblReceiptList.List.Current.VAB_Receipt_List.ReceiptNumber,\" \" + tblReceiptList.List.Current.VAB_Receipt_List.ReceiptNumber)","type":"Text","functions":["If","TextToDate","CurrDate"]}
{"text":"If(tblReceiptList.List.Current.VAB_Receipt_List.Status  = OKCS_ReceiptStatus_GetById.Receipt_Status and TextToDate(tblReceiptList.List.Current.VAB_Receipt_List.DueDate) < CurrDate (),\"!\",\"\") ","type":"Text","functions":["If","TextToDate","CurrDate"]}
{"text":"If(EditBudget.Record.Budget_Struct.ApprovedAt=NullDate(),\"\",DateTimeToDate(EditBudget.Record.Budget_Struct.ApprovedAt))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(ProposalTable.List.Current.OKSA_ProposalListAuto.DriverName)>22,\nSubstr(ProposalTable.List.Current.OKSA_ProposalListAuto.DriverName,0,22)+\" ...\",\nProposalTable.List.Current.OKSA_ProposalListAuto.DriverName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListUnitRisk.List.Current.VAB_ClientRiskUnitAuto.DriverName)>22,\nSubstr(ListUnitRisk.List.Current.VAB_ClientRiskUnitAuto.DriverName,0,22)+\" ...\",\nListUnitRisk.List.Current.VAB_ClientRiskUnitAuto.DriverName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDate(ClaimTable.List.Current.VAB_Claim_List.ClaimDate) =NullDate(),\"\",ClaimTable.List.Current.VAB_Claim_List.ClaimDate) \n\n","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableAssociatedEvents.List.Current.AssociatedEventList_Event.AccidentAt)=NullDate(),\"\",DateTimeToDate(TableAssociatedEvents.List.Current.AssociatedEventList_Event.AccidentAt))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableEvent.List.Current.Event_Struct.AccidentAt)=NullDate(),\"\",DateTimeToDate(TableEvent.List.Current.Event_Struct.AccidentAt))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(SubClaimVehicle.SubClaim_Vehicle_Struct.CompanyEntryDate <>NullDate(),SubClaimVehicle.SubClaim_Vehicle_Struct.CompanyEntryDate+ \" \"+ Substr(MSS_Claim_GetData.Claim_Struct.Claim_Struct.CompanyEntryHour,0,5),\"\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(EditSubClaim.Record.SubClaim_Person_Struct.CompanyEntryDate<>NullDate(),EditSubClaim.Record.SubClaim_Person_Struct.CompanyEntryDate+ \" \"+ Substr(MSS_Claim_GetData.Claim_Struct.Claim_Struct.CompanyEntryHour,0,5),\"\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(DateTimeToDate(EditClaim.Record.Claim_Struct.SystemEntranceAt) = NullDate(), \"\", EditClaim.Record.Claim_Struct.SystemEntranceAt)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(EditSubClaim.Record.SubClaim_Object_Struct.CompanyEntryDate<>NullDate(),EditSubClaim.Record.SubClaim_Object_Struct.CompanyEntryDate+ \" \"+ Substr(MSS_Claim_GetData.Claim_Struct.Claim_Struct.CompanyEntryHour,0,5),\"\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(DCODetails.Record.LegalActionDCODetail.ClosedAt=NullDate(),\"\",DateTimeToDate(DCODetails.Record.LegalActionDCODetail.ClosedAt))\n","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DCODetails.Record.LegalActionDCODetail.CreatedAt=NullDate(),\"\",DateTimeToDate(DCODetails.Record.LegalActionDCODetail.CreatedAt\n))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DCODetails.Record.LegalActionDCODetail.OppenedAt=NullDate(),\"\", DateTimeToDate(DCODetails.Record.LegalActionDCODetail.OppenedAt))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.Catastrophe_List.CreatedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.Catastrophe_List.CreatedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.Catastrophe_List.EndedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.Catastrophe_List.EndedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.Catastrophe_List.StartedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.Catastrophe_List.StartedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PersonExclusionDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PersonExclusionDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PersonJoinDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PersonJoinDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.TransactionApprovalDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.TransactionApprovalDate))\n","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.TransactionStartDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.TransactionStartDate))\n","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyRenewalExpDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyRenewalExpDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyRenewalDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyRenewalDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyStartDate)=NullDate(),\"\",DateTimeToDate(MSS_Policy_GetData_FromBD.Claim_PolicyDetail_Struct.Claim_PolicyDetail_Struct.PolicyStartDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If (DateTimeToDate(TableTransactionsMovementsAccounting.List.Current.Transactions.TransactionDate)=NullDate(),\"\",DateTimeToDate(TableTransactionsMovementsAccounting.List.Current.Transactions.TransactionDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Index(ToUpper(Profile),\"PERFIL COMPETITIVO\") = 0,\"6 - 10\",\"3\") ","type":"Text","functions":["If","Index","ToUpper"]}
{"text":"If(Index(ToUpper(Profile),\"PERFIL COMPETITIVO\") = 0,DateTimeToDate(AddYears(CurrDate(),-10)),DateTimeToDate(AddYears(CurrDate(),-8)))  ","type":"Date","functions":["If","Index","ToUpper","DateTimeToDate","AddYears","CurrDate"]}
{"text":"If(Index(ToUpper(Profile),\"PERFIL COMPETITIVO\") = 0,DateTimeToDate(AddYears(CurrDate(),-32)),DateTimeToDate(AddYears(CurrDate(),-30)))","type":"Date","functions":["If","Index","ToUpper","DateTimeToDate","AddYears","CurrDate"]}
{"text":"If(Length(Drivers_Table.List.Current.AndDriver_Overview_List.DriverName)<15,\n    Drivers_Table.List.Current.AndDriver_Overview_List.DriverName,\n    Substr(Drivers_Table.List.Current.AndDriver_Overview_List.DriverName,0,12) + \"...\"\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Vehicles_Table.List.Current.AndDriver_Overview_List.VehicleModel)<15,\n    Vehicles_Table.List.Current.AndDriver_Overview_List.VehicleModel,\n    Substr(Vehicles_Table.List.Current.AndDriver_Overview_List.VehicleModel,0,12) + \"...\"\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecordsHeader.List.Current.OKSAWS_InsuranceElement.Header.Header.DriverName)<15,\n    ListRecordsHeader.List.Current.OKSAWS_InsuranceElement.Header.Header.DriverName,\n    Substr(ListRecordsHeader.List.Current.OKSAWS_InsuranceElement.Header.Header.DriverName,0,13)+ \"...\"\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsDrivers.List.Current.List.Name) > 28,\n    Substr(TableRecordsDrivers.List.Current.List.Name,0,26) + \"...\",\n    TableRecordsDrivers.List.Current.List.Name\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Extras_Table.List.Current.OKSA_Extra.NAME) > 41, \n    Substr(Extras_Table.List.Current.OKSA_Extra.NAME,0,39) + \"...\",\n    Extras_Table.List.Current.OKSA_Extra.NAME\n)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(VehicleOverview_Table.List.Current.Overview.DriverName = \"\",\"-\",\n    If(Length(VehicleOverview_Table.List.Current.Overview.DriverName)>9,Substr(VehicleOverview_Table.List.Current.Overview.DriverName,0,7)+\"...\",\n        VehicleOverview_Table.List.Current.Overview.DriverName\n    )\n) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Driver_ListRecord.List.Current.List.Name)>18,\nSubstr(Driver_ListRecord.List.Current.List.Name,0,15) + \"...\",\nDriver_ListRecord.List.Current.List.Name)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((ListOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListOptionalProductCoverages.List.Length / OptionalCoverageList.Length)\n   )  \n    <\n  \n    IntegerToDecimal((ListOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListOptionalProductCoverages.List.Length / OptionalCoverageList.Length)      , Trunc(\n    IntegerToDecimal((ListOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListOptionalProductCoverages.List.Length / OptionalCoverageList.Length)\n   )   +1    , IntegerToDecimal((ListOptionalProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(ListOptionalProductCoverages.List.Length / OptionalCoverageList.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalOptionalCoverages.Length)\n   )  \n    <\n  \n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalOptionalCoverages.Length)      , Trunc(\n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalOptionalCoverages.Length)\n   )   +1    , IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalOptionalCoverages.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((ListBaseProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListBaseProductCoverages.List.Length / BaseCoverageList.Length)\n   )  \n    <\n  \n    IntegerToDecimal((ListBaseProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListBaseProductCoverages.List.Length / BaseCoverageList.Length)      , Trunc(\n    IntegerToDecimal((ListBaseProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(ListBaseProductCoverages.List.Length / BaseCoverageList.Length)\n   )   +1    , IntegerToDecimal((ListBaseProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(ListBaseProductCoverages.List.Length / BaseCoverageList.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalBaseCoverages.Length)\n   )  \n    <\n  \n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalBaseCoverages.Length)      , Trunc(\n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalBaseCoverages.Length)\n   )   +1    , IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_InsuranceData_Get.InsuranceData.VAB_PolicyChange_InsuranceData.InsuranceGeneralData.VAB_PolicyChange_InsuranceGeneralData.OriginalBaseCoverages.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(SimulatedChangesList.List.Current.VAB_PolicyChange_OverviewList.SimulationDate<>NullDate(),DateTimeToDate(SimulatedChangesList.List.Current.VAB_PolicyChange_OverviewList.SimulationDate),\"-\")\n","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TR_Versions.List.Current.VDPCB_Eurotax_Simulator_Vehicle_List.FimImp = NullDate(),\"\",DateTimeToDate(TR_Versions.List.Current.VDPCB_Eurotax_Simulator_Vehicle_List.FimImp))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TR_Versions.List.Current.VDPCB_Eurotax_Simulator_Vehicle_List.IniImp = NullDate(),\"\",DateTimeToDate(TR_Versions.List.Current.VDPCB_Eurotax_Simulator_Vehicle_List.IniImp))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalOptionalCoverages.Length)\n   )  \n    <\n  \n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalOptionalCoverages.Length)      , Trunc(\n    IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalOptionalCoverages.Length)\n   )   +1    , IntegerToDecimal((OriginalOptionalProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(OriginalOptionalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalOptionalCoverages.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(\n Mod(\n  TextToInteger(\n  If(\n   Trunc(\n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalBaseCoverages.Length)\n   )  \n    <\n  \n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalBaseCoverages.Length)      , Trunc(\n    IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1)) / \n    IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalBaseCoverages.Length)\n   )   +1    , IntegerToDecimal((OriginalProductCoverages.List.CurrentRowNumber + 1))/IntegerToDecimal(OriginalProductCoverages.List.Length / VAB_PolicyChange_CoverageData_Get.CoverageData.VAB_PolicyChange_CoverageData.CoverageGeneralData.VAB_PolicyChange_CoverageGeneralData.OriginalBaseCoverages.Length)\n\n)\n \n  )    ,2) = 0,\n \"<td class='TableInsurance_OddLine' valign='middle'>\",\n \"<td class='TableInsurance_Line' valign='middle'>\"\n)\n\n","type":"Text","functions":["If","Mod","TextToInteger","Trunc","IntegerToDecimal"]}
{"text":"If(DateTimeToDate(Table_Activity.List.Current.VDEB_Common_UserList_Info.UpdateOn)= NullDate(),\"\",Table_Activity.List.Current.VDEB_Common_UserList_Info.UpdateOn\n)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(IntegerToIdentifier(Table_Activity.List.Current.VDEB_Interaction_List.InteractionTypeId) = Entities.Z_INTERACTION_TYPE.ENTITY_CATEGORY,Table_Activity.List.Current.VDEB_Interaction_List.InteractionTypeDescription,If(Length(Table_Activity.List.Current.VDEB_Interaction_List.Interaction)>37,\n    Substr(Table_Activity.List.Current.VDEB_Interaction_List.Interaction,0,37) + \"...\",\n    Table_Activity.List.Current.VDEB_Interaction_List.Interaction\n))","type":"Text","functions":["If","IntegerToIdentifier","Length","Substr"]}
{"text":"\nIf(Client.VDC_EntityInfo.Contact = \"\",\n \"-\",\nIf(Length(Client.VDC_EntityInfo.Contact) < 20,\n  Client.VDC_EntityInfo.Contact,\n  Substr(Client.VDC_EntityInfo.Contact,0,17) + \"...\"\n ) \n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Client.VDC_EntityInfo.Locality) >= 40,\n \" \" + Substr(Client.VDC_EntityInfo.Locality,0,40) + \"...\", \n Client.VDC_EntityInfo.Locality\n)\n\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(Table_Fenix.List.Current.VDFB_Fenix.Name,0,25)+ If (Length(Table_Fenix.List.Current.VDFB_Fenix.Name)>25,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(Table_Fenix.List.Current.VDFB_Fenix.ChannelName) > 4,\nSubstr(Table_Fenix.List.Current.VDFB_Fenix.ChannelName,0,4) + \"...\", Table_Fenix.List.Current.VDFB_Fenix.ChannelName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(tblCoverages.List.Current.VDSAPB_Matrix_CoverageExtension.Name)>33,Substr(tblCoverages.List.Current.VDSAPB_Matrix_CoverageExtension.Name,0,32) + \"...\",\ntblCoverages.List.Current.VDSAPB_Matrix_CoverageExtension.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(tblCoverages.List.Current.VDSAPB_Matrix_Coverage.Name)>43,Substr(tblCoverages.List.Current.VDSAPB_Matrix_Coverage.Name,0,42) + \"...\",\ntblCoverages.List.Current.VDSAPB_Matrix_Coverage.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Substr(TableRecords_Eurotax.List.Current.VDPCB_Eurotax_List.FimImp, 0, 10) = NullDate() or  ToObject(TableRecords_Eurotax.List.Current.VDPCB_Eurotax_List.FimImp) = NullObject(),\"-\",Substr(TableRecords_Eurotax.List.Current.VDPCB_Eurotax_List.FimImp, 0, 10))\n","type":"Text","functions":["If","Substr","NullDate","ToObject","NullObject"]}
{"text":"If(Table_Collection.List.Current.VDPCB_CollectionList.EndDate = NullDate(),\"\",DateTimeToDate(Table_Collection.List.Current.VDPCB_CollectionList.EndDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Table_Collection.List.Current.VDPCB_CollectionList.StartDate = NullDate(),\"\",DateTimeToDate(Table_Collection.List.Current.VDPCB_CollectionList.StartDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"<td class='TableRecords_OddLine' width=100  align=center>\"+If(Values.List.Current.TableValue.FormulaId=0,If(Values.List.Current.TableValue.IsError,\"?!\", If(Length(Values.List.Current.TableValue.Value)>4,Substr(Values.List.Current.TableValue.Value,0,4)+\"...\",Values.List.Current.TableValue.Value)),\"FX(...)\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"</tr><td colspan=\"+Cells.List.Current.TableCell.NumberOfDescendats+\" width='\"+100*If(Cells.List.Current.TableCell.NumberOfDescendats>0,Cells.List.Current.TableCell.NumberOfDescendats,1)+\"' class='TableRecords_OddLine' align=center>\"+If(Length(Cells.List.Current.TableCell.Rule.Rule.Name)>6,Substr(Cells.List.Current.TableCell.Rule.Rule.Name,0,6)+\"...\",Cells.List.Current.TableCell.Rule.Rule.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<td colspan=\"+Cells.List.Current.TableCell.NumberOfDescendats+\" width='\"+150*If(Cells.List.Current.TableCell.NumberOfDescendats>0,Cells.List.Current.TableCell.NumberOfDescendats,1)+\"' class='TableRecords_OddLine' align=center>\"+If(Length(Cells.List.Current.TableCell.Rule.Rule.Name)>6,Substr(Cells.List.Current.TableCell.Rule.Rule.Name,0,6)+\"...\",Cells.List.Current.TableCell.Rule.Rule.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<tr><td colspan=\"+Cells.List.Current.TableCell.NumberOfDescendats+\" width='\"+150*If(Cells.List.Current.TableCell.NumberOfDescendats>0,Cells.List.Current.TableCell.NumberOfDescendats,1)+\"' class='TableRecords_OddLine' align=center>\"+If(Length(Cells.List.Current.TableCell.Rule.Rule.Name)>6,Substr(Cells.List.Current.TableCell.Rule.Rule.Name,0,6)+\"...\",Cells.List.Current.TableCell.Rule.Rule.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<tr><td class='TableRecords_OddLine' width=170>\"+If(Length(Parameters.List.Current.TableParameter.Name)>16,Substr(Parameters.List.Current.TableParameter.Name,0,16)+\"...\",Parameters.List.Current.TableParameter.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SR_ProcessUpload.Record.VDTMB_UsermasterProcess_UploadData2.BirthDate = NullDate(),\"-\", DateTimeToDate(SR_ProcessUpload.Record.VDTMB_UsermasterProcess_UploadData2.BirthDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\nIf(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityJob=\"\",\"-\",If(Length(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityJob)>21,\n  Substr(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityJob,0,21)+\"...\",\n  VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityJob\n ))\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\nIf(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityName=\"\",\"-\",If(Length(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityName) > 30, \n Substr(VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityName,0,30) + \"...\",\n VDTMB_CogenEntityProcess_Get.CogenEntityProcess.VDTMB_CogenEntityProcess.EntityName))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimStart(TrimEnd(EditRecord_TaskOutputType.Record.VDTMB_UserMasterTaskDetail.EntityNumber)) = \"\",\"(Potencial Cliente)\", EditRecord_TaskOutputType.Record.VDTMB_UserMasterTaskDetail.EntityNumber)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(Length(TaskOutputList.Current.VDTM_TaskOutput.Comment)>20,Substr(TaskOutputList.Current.VDTM_TaskOutput.Comment,0,20)+\"...\",TaskOutputList.Current.VDTM_TaskOutput.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords_TaskOutput.List.Current.VDTMB_TaskOutput_List.Comment)>20,Substr(TableRecords_TaskOutput.List.Current.VDTMB_TaskOutput_List.Comment,0,20)+\"...\",TableRecords_TaskOutput.List.Current.VDTMB_TaskOutput_List.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(UserMaster_LoginInfo.VDUB_UserMaster_LoginInfo.UserName <> \"\",\n Substr(ShowRecord_UserMaster.Record.VDUB_UserMaster_LoginInfo.UserName,\n  Length(UsernamePrefix), \n  Length(ShowRecord_UserMaster.Record.VDUB_UserMaster_LoginInfo.UserName)),\n \"-\")\n\n","type":"Text","functions":["If","Substr","Length"]}
{"text":"If ( Entity.VDEB_Entity.ActivityLabel = \"\", \"-\",\n If(\n  Length(Entity.VDEB_Entity.ActivityLabel) > 24,\n  Substr(Entity.VDEB_Entity.ActivityLabel,0,21) + \"...\",\n  Entity.VDEB_Entity.ActivityLabel)\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Entity.VDEB_Entity.EntityTypeId = Entities.Z_ENTITY_TYPE.Company,\n \"-\",\n If(Length(Entity.VDEB_Entity.JobLabel)>21,\n  Substr(Entity.VDEB_Entity.JobLabel,0,21)+\"...\",\n  Entity.VDEB_Entity.JobLabel\n )\n)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Entity.VDEB_Entity.Name) > 30, \n Substr(Entity.VDEB_Entity.Name,0,30) + \"...\",\n Entity.VDEB_Entity.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Table_PolicyList.List.Current.VAB_Policy_List.DriverName) > 25,\n Substr(Table_PolicyList.List.Current.VAB_Policy_List.DriverName,0,25) + \"...\",\n Table_PolicyList.List.Current.VAB_Policy_List.DriverName\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(Table_Interaction_IVision.List.Current.VDEB_Interaction_List.Interaction) > 10, \n   Substr(Table_Interaction_IVision.List.Current.VDEB_Interaction_List.Interaction,0,10) +\"...\",\n   Table_Interaction_IVision.List.Current.VDEB_Interaction_List.Interaction\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(Table_Interaction.List.Current.VDEB_Interaction_List.Interaction) > 30, \n   Substr(Table_Interaction.List.Current.VDEB_Interaction_List.Interaction,0,30) +\"...\",\n   Table_Interaction.List.Current.VDEB_Interaction_List.Interaction\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableHistoryExaminationStatus.List.Current.VDVB_ExaminationHistoryStatus.AutoShopAddress\n)>22,\nSubstr(TableHistoryExaminationStatus.List.Current.VDVB_ExaminationHistoryStatus.AutoShopAddress ,0,22)+\" ...\",\nTableHistoryExaminationStatus.List.Current.VDVB_ExaminationHistoryStatus.AutoShopAddress\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableExaminations.List.Current.VDVB_ExaminationAutoListElement.ClientName)>40,\nSubstr(TableExaminations.List.Current.VDVB_ExaminationAutoListElement.ClientName,0,40)+\" ...\",\nTableExaminations.List.Current.VDVB_ExaminationAutoListElement.ClientName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(urUserMster.Record.VDUB_UserMaster.LastLogin = NullDate(),\"-\",DateTimeToDate(urUserMster.Record.VDUB_UserMaster.LastLogin))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":" If(Table_Users.List.Current.VDUB_UserMaster.CreationDate = NullDate(),\"-\", DateTimeToDate(Table_Users.List.Current.VDUB_UserMaster.CreationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Table_Users.List.Current.VDUB_UserMaster.LastLogin = NullDate(),\"-\",DateTimeToDate(Table_Users.List.Current.VDUB_UserMaster.LastLogin))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (ModuleId <> NullIdentifier(), EncodeHtml(EditRecord1.Record.MODULE.Name), \"<I>Novo</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If(not ExaminationData_Get.List.Empty, \nExaminationData_Get.List.Current.PGO_ENTITY.FirstName +\nIf(TrimEnd(TrimStart(ExaminationData_Get.List.Current.PGO_ENTITY.MiddleNames)) <> \"\",\" \" + ExaminationData_Get.List.Current.PGO_ENTITY.MiddleNames,\"\") +\n\" \" + ExaminationData_Get.List.Current.PGO_ENTITY.LastName, \n\"-\")","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"SrExamination.Record.EXAMINATION.EXAMINATIONDATE + If(SrExamination.Record.EXAMINATION_AUTO.AUTOSHOPID = NullIdentifier(), If(IntegerToIdentifier(SrExamination.Record.EXAMINATION_AUTO.ISAM) = Entities.Z_BOOLEAN.TRUE_VALUE, \" [ManhÃ£]\", \" [Tarde]\"), \"\")","type":"Text","functions":["If","NullIdentifier","IntegerToIdentifier"]}
{"text":"If(SrOwner.Record.RISK_UNIT_AUTO.RENTPGOENTITYID <> NullIdentifier(),SrOwner.Record.PGO_ENTITY.FirstName + \nIf(TrimEnd(TrimStart(SrOwner.Record.PGO_ENTITY.MiddleNames)) <> \"\",\" \" + SrOwner.Record.PGO_ENTITY.MiddleNames,\"\") +\nSrOwner.Record.PGO_ENTITY.LastName + \" [\"+SrOwner.Record.RISK_UNIT_AUTO.RENTCONTRACTENDDATE+\"]\", \"-\")","type":"Text","functions":["If","NullIdentifier","TrimEnd","TrimStart"]}
{"text":"DateTimeToDate(TableNotes.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords1.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords1.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords4.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords4.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords4.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords3.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords3.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords3.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords2.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords2.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords2.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TablePublicNotes.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TablePublicNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TablePublicNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(Length(TableRecords1.List.Current.EP_NOTE.Description) > 256, Substr(TableRecords1.List.Current.EP_NOTE.Description, 0, 256) + \"...\", TableRecords1.List.Current.EP_NOTE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.EP_DOCUMENT.Filename) > 20, Substr(TableRecords1.List.Current.EP_DOCUMENT.Filename, 0, 20) + \"...\", TableRecords1.List.Current.EP_DOCUMENT.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableScoringRules.List.Current.VDS_SetRule_List.RuleDescription) > 18,\nSubstr(TableScoringRules.List.Current.VDS_SetRule_List.RuleDescription,0,17)+\"...\",\nTableScoringRules.List.Current.VDS_SetRule_List.RuleDescription)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListScoringSetProduct.List.Current.VDS_SetProduct.MasterProductName) > 18,\n\nSubstr(ListScoringSetProduct.List.Current.VDS_SetProduct.MasterProductName,0,8) + NewLine()\n+ Substr(ListScoringSetProduct.List.Current.VDS_SetProduct.MasterProductName,8,18) +\nIf(Length(ListScoringSetProduct.List.Current.VDS_SetProduct.MasterProductName) > 38, \"...\",\"\"), \n\n(ListScoringSetProduct.List.Current.VDS_SetProduct.MasterProductName))\n\n","type":"Text","functions":["If","Length","Substr","NewLine"]}
{"text":"If(Length(TR_ScoringSet.List.Current.VDS_ScoringSet_List.Description)> 40,\nSubstr(TR_ScoringSet.List.Current.VDS_ScoringSet_List.Description,0,39) + \"...\",TR_ScoringSet.List.Current.VDS_ScoringSet_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_ScoringSet.List.Current.VDS_ScoringSet_List.Name)> 40,\nSubstr(TR_ScoringSet.List.Current.VDS_ScoringSet_List.Name,0,39) + \"...\",TR_ScoringSet.List.Current.VDS_ScoringSet_List.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableOffers.List.Current.SQL_GetOffers.Offer_ValidThruDate <> NullDate(), DateTimeToDate(TableOffers.List.Current.SQL_GetOffers.Offer_ValidThruDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord1.Record.EP_OFFER.ValidThruDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_OFFER.ValidThruDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord1.Record.EP_OFFER.DeliveryDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_OFFER.DeliveryDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.SQL_GetOffersMgmt.Offer_ValidThruDate <> NullDate(), DateTimeToDate(TableRecords1.List.Current.SQL_GetOffersMgmt.Offer_ValidThruDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord1.Record.EP_AUCTION.ExpectedDeliveryDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_AUCTION.ExpectedDeliveryDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TrimStart(TrimEnd(TableEnterpriseUsers.List.Current.USER_MASTER.FirstName + TableEnterpriseUsers.List.Current.USER_MASTER.LastName)) <> \"\", TableEnterpriseUsers.List.Current.USER_MASTER.FirstName + \" \" + TableEnterpriseUsers.List.Current.USER_MASTER.LastName, If(TableEnterpriseUsers.List.Current.USER_MASTER.Name <> \"\",TableEnterpriseUsers.List.Current.USER_MASTER.Name,\"(nÃ£o-definido)\"))","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(ReplyTo <> NullIdentifier(), \"Resposta \" +\n  If(GetOriginal.List.Current.EMAIL_REGISTRY.EmailId <> NullIdentifier(),\n    If(Length(GetOriginal.List.Current.EMAIL.Subject) > 40,\n      Substr(GetOriginal.List.Current.EMAIL.Subject,0,37) + \"...\", GetOriginal.List.Current.EMAIL.Subject),\n    If(Length(GetOriginal.List.Current.DIGEST_MAIL.Subject) > 40,\n      Substr(GetOriginal.List.Current.DIGEST_MAIL.Subject,0,37) + \"...\", GetOriginal.List.Current.DIGEST_MAIL.Subject)),\n  \"Novo Email\")","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If(EditBID.Record.EP_BID.DeliveryDate <> NullDate(), DateTimeToDate(EditBID.Record.EP_BID.DeliveryDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(EditBID.Record.EP_BID.ValidThruDate <> NullDate(), DateTimeToDate(EditBID.Record.EP_BID.ValidThruDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsBids.List.Current.Bid_Struct.DataLimiteConcurso <> NullDate(), DateTimeToDate(TableRecordsBids.List.Current.Bid_Struct.DataLimiteConcurso), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableBids.List.Current.Bid_Struct.DataLimiteProposta <> NullDate(), DateTimeToDate(TableBids.List.Current.Bid_Struct.DataLimiteProposta), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableBids.List.Current.Bid_Struct.DataLimiteConcurso <> NullDate(), DateTimeToDate(TableBids.List.Current.Bid_Struct.DataLimiteConcurso), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableEmails.List.Current.DIGEST_MAIL.To)>50,Substr(TableEmails.List.Current.DIGEST_MAIL.To,0,50)+\"...\",TableEmails.List.Current.DIGEST_MAIL.To)","type":"Text","functions":["If","Length","Substr"]}
{"text":"DateTimeToDate(TableClosedIssues.List.Current.ISSUE.ClosedAt)+\" \"+Hour(TableClosedIssues.List.Current.ISSUE.ClosedAt)+\":\"+Minute(TableClosedIssues.List.Current.ISSUE.ClosedAt)","type":"Text","functions":["DateTimeToDate","Hour","Minute"]}
{"text":"FormatText(Hour(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\":\"+FormatText(Minute(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\" | \"+FormatText(Hour(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DuracaoPrevista),2,2,True,\"0\")+\"h\"+FormatText(Minute(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DuracaoPrevista),2,2,True,\"0\")+\"m\"\n\n","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"FormatText(Hour(TableNovasCNPP.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\":\"+FormatText(Minute(TableNovasCNPP.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(TableDocumetos.List.Current.AG_PROP_DOC.Data = NullDate(), \"< nÃ£o definida >\", DateTimeToDate(TableDocumetos.List.Current.AG_PROP_DOC.Data))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If( TableDocuments.List.Current.Document.Data_Documento = NullDate(), \"< nÃ£o definida >\", \nDateTimeToDate(TableDocuments.List.Current.Document.Data_Documento)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(EditAgendamentoProposta.Record.AG_PROP.Internamento_DataHora = NullDate(), \"< nÃ£o definido >\",Substr(EditAgendamentoProposta.Record.AG_PROP.Internamento_DataHora, 0, 16))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(TablePropostas.List.Current.PropostaList.Cirurgia_DataHora_Proposta <> NullDate(), Substr(TablePropostas.List.Current.PropostaList.Cirurgia_DataHora_Proposta, 0, 16), \"< nÃ£o agendada >\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"Substr(TableSurveys.List.Current.EP_SURVEY.Description,0,Min(Length(TableSurveys.List.Current.EP_SURVEY.Description),50)) + If (Length(TableSurveys.List.Current.EP_SURVEY.Description) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"\"<script language=\"\"javascript\"\">\nvar IframeSRC = '\" + AddPersonalAreaToURLPath(\"/SurveyingServices/AnswerSurvey.aspx?Solution=\" + GetEntryEspaceName() + \"&SurveyId=\" + (PublicationId + If (CSSURL <> \"\", \"&CSSURL=\" + EncodeUrl(CSSURL), \"\") ) + \"&ExternalId=\" + ExternalId + \"&ModuleName=\" +ModuleName + \"&OnSurveySave=\" + OnSurveySave) + \"';\" + NewLine() +\n\"function AnswerPublicationLoad() {\"+ NewLine() +\n\" document.getElementById('cfgiframe').src=IframeSRC; \"+ NewLine() +\n\"}\" + NewLine() +\n\"</script>\"","type":"Text","functions":["AddPersonalAreaToURLPath","GetEntryEspaceName","If","EncodeUrl","NewLine"]}
{"text":"\"<iframe src=\"\"\" + If( not LoadOnExternalEvent, AddPersonalAreaToURLPath(\"/SurveyingServices/AnswerSurvey.aspx?Solution=\" + GetEntryEspaceName() + \"&SurveyId=\" + (PublicationId + If (CSSURL <> \"\", \"&CSSURL=\" + EncodeUrl(CSSURL), \"\") ) + \"&ExternalId=\" + ExternalId + \"&ModuleName=\" +ModuleName + \"&OnSurveySave=\" + OnSurveySave), \"\") +   \"\"\" width=\"\"\" + width + \"\"\" frameborder=\"\"0\"\" scrolling=\"\"auto\"\" height=\"\"\" + height + \"\"\" id=\"\"cfgiframe\"\" name=\"\"cfgiframe\"\"></iframe>\"","type":"Text","functions":["If","AddPersonalAreaToURLPath","GetEntryEspaceName","EncodeUrl"]}
{"text":"Year(TableRecords1.List.Current.Date.Date) + \"-\" +\n\nIf(Month(TableRecords1.List.Current.Date.Date) < 10,\n \"0\"+Month(TableRecords1.List.Current.Date.Date),\n Month(TableRecords1.List.Current.Date.Date)) + \"-\" +\n\nIf(Day(TableRecords1.List.Current.Date.Date) < 10,\n \"0\"+Day(TableRecords1.List.Current.Date.Date),\n Day(TableRecords1.List.Current.Date.Date))\n","type":"Text","functions":["Year","If","Month","Day"]}
{"text":"If(Length(TableRecordsUCPA.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION) > 40,Substr(TableRecordsUCPA.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION ,0,40) + \"...\" ,TableRecordsUCPA.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsSala.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION) > 40,Substr(TableRecordsSala.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION ,0,40) + \"...\" ,TableRecordsSala.List.Current.V_MOBILE_SURGERYARTICLES.UNITDESCRIPTION)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.V_MOBILE_DOCSURGERY.PROCEDUREDESC) > 15,Substr(TableRecords1.List.Current.V_MOBILE_DOCSURGERY.PROCEDUREDESC,0,15) + \"...\" ,TableRecords1.List.Current.V_MOBILE_DOCSURGERY.PROCEDUREDESC)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DiffDays(CurrDate(), TableRecordsProtocols.List.Current.Query_ListProtocols.DataFim) >= 0 and\nDiffDays(CurrDate(), TableRecordsProtocols.List.Current.Query_ListProtocols.DataFim) <= Site.ExpirationProtocol_Days,\n\"Activo (expira brevemente)\", \"Activo\")","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If(DiffDays(CurrDate(), ShowProtocol.Record.EP_PROTOCOL.EndDate) >= 0 and\nDiffDays(CurrDate(), ShowProtocol.Record.EP_PROTOCOL.EndDate) <= Site.ExpirationProtocol_Days,\n\"Activo (expira brevemente)\", \"Activo\")\n\n","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"Substr(TablePedidosAnteriores.List.Current.EP_ITEM_REQUEST.Justification,0,150) + If(\nLength(TablePedidosAnteriores.List.Current.EP_ITEM_REQUEST.Justification)>150, \"...\", \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TableItems.List.Current.Query_GetRequestItems.Justification,0,150) + If(\nLength(TableItems.List.Current.Query_GetRequestItems.Justification)>150, \"...\", \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(TrimStart(TrimEnd(TableSupplierUsers.List.Current.User_Item.JobTitle + TableSupplierUsers.List.Current.User_Item.Name)) <> \"\", TableSupplierUsers.List.Current.User_Item.JobTitle + \" \" + TableSupplierUsers.List.Current.User_Item.Name, \"(undefined)\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(UserId = NullIdentifier(), \"Novo Utilizador\", If(TrimStart(TrimEnd(GetUser.List.Current.USER_MASTER.Name)) <> \"\", GetUser.List.Current.USER_MASTER.Name, \"EdiÃ§Ã£o de Utilizador\"))","type":"Text","functions":["If","NullIdentifier","TrimStart","TrimEnd"]}
{"text":"If( TrimEnd(TrimStart(GetSupplier.List.Current.EP_SUPPLIER.ShortName))= \"\", \"\", \"(\"+GetSupplier.List.Current.EP_SUPPLIER.ShortName+\")\")\n\n","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(TrimStart(TrimEnd(TableUsers.List.Current.USER_MASTER.Name)) <> \"\", TableUsers.List.Current.USER_MASTER.JobTitle + \" \" + TableUsers.List.Current.USER_MASTER.Name, \"(undefined)\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(TableRecords1.List.Current.USER_MASTER.Name)) <> \"\", TableRecords1.List.Current.USER_MASTER.JobTitle + \" \" + TableRecords1.List.Current.USER_MASTER.Name, \"(undefined)\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(TableInvoiceItems.List.Current.EP_C_FACTURA_ITEM.NumLinha))= \"\", \"\", TrimStart(TrimEnd(TableInvoiceItems.List.Current.EP_C_FACTURA_ITEM.NumLinha)))","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(Length(TableRecordsInvoices.List.Current.EP_C_FORNECEDOR.Nome)>12,\nSubstr(TableRecordsInvoices.List.Current.EP_C_FORNECEDOR.Nome,0,10)+\"...\",TableRecordsInvoices.List.Current.EP_C_FORNECEDOR.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsPO.List.Current.EP_C_FORNECEDOR.Nome)>12,\nSubstr(TableRecordsPO.List.Current.EP_C_FORNECEDOR.Nome,0,10)+\"...\",TableRecordsPO.List.Current.EP_C_FORNECEDOR.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Comment <> \"\" and Substr(Comment,Length(Comment)-1,Length(Comment)) <> \".\", \".\",\"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(DiffDays(CurrDate(), TableProtocolos.List.Current.Query_Supplier_ArtigoESS_ProtocolList.DataFim) >= 0 and\nDiffDays(CurrDate(), TableProtocolos.List.Current.Query_Supplier_ArtigoESS_ProtocolList.DataFim) <= Site.ExpirationProtocol_Days,\n\"Activo (expira brevemente)\", \"Activo\")","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If(TrimStart(TrimEnd(TableRecordsOrderItems.List.Current.Query_Encomenda_Artigos.NumLinha))= \"0\", \"\", TrimStart(TrimEnd(TableRecordsOrderItems.List.Current.Query_Encomenda_Artigos.NumLinha)))\n","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ShowRecordPOHeader.Record.MD_UNIDADE_ESS_2.Nome))<> \"\",\nShowRecordPOHeader.Record.MD_UNIDADE_ESS_2.Nome,\nShowRecordPOHeader.Record.MD_UNIDADE_ESS.Nome)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(TableRecordsOrderItems.List.Current.EP_C_GUIA_ITEM.NumLinha))= \"0\", \"\", TrimStart(TrimEnd(TableRecordsOrderItems.List.Current.EP_C_GUIA_ITEM.NumLinha)))","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ShowRecordGuiaHeader.Record.MD_UNIDADE_ESS_2.Nome))<> \"\",ShowRecordGuiaHeader.Record.MD_UNIDADE_ESS_2.Nome,\nShowRecordGuiaHeader.Record.MD_UNIDADE_ESS.Nome)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(TableArtigosEncomenda.List.Current.Query_Encomenda_Artigos.NumLinha))= \"0\", \"\", TrimStart(TrimEnd(TableArtigosEncomenda.List.Current.Query_Encomenda_Artigos.NumLinha)))","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(TableShippingDocItems.List.Current.EP_C_GUIA_ITEM.NumLinha))= \"0\", \"\", TrimStart(TrimEnd(TableShippingDocItems.List.Current.EP_C_GUIA_ITEM.NumLinha)))","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(DiffDays(CurrDate(), TableActiveSupplierProtocols.List.Current.Query_Supplier_ProtocolList.DataFim) >= 0 and\nDiffDays(CurrDate(), TableActiveSupplierProtocols.List.Current.Query_Supplier_ProtocolList.DataFim) <= Site.ExpirationProtocol_Days,\n\"Activo (expira brevemente)\", \"Activo\")","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If(Length(tblBatch.List.Current.BatchFiles.Log) > 300, Substr(tblBatch.List.Current.BatchFiles.Log, 0, 300) + \" ...\", tblBatch.List.Current.BatchFiles.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(tblBatch.List.Current.BatchFiles.Filename) > 40, Substr(tblBatch.List.Current.BatchFiles.Filename, 0, 40) + \" ...\", tblBatch.List.Current.BatchFiles.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords1.List.Current.CRM_ESTIM_USG_REPOSITORY.BeginTimestamp <> NullDate() and TableRecords1.List.Current.CRM_ESTIM_USG_REPOSITORY.EndTimestamp <> NullDate(), DiffSeconds(TableRecords1.List.Current.CRM_ESTIM_USG_REPOSITORY.BeginTimestamp,TableRecords1.List.Current.CRM_ESTIM_USG_REPOSITORY.EndTimestamp), \"\")","type":"Text","functions":["If","NullDate","DiffSeconds"]}
{"text":"If(ToUpper(TrimStart(TrimEnd(TR_CMS.List.Current.CMS_CONTRACT.type_aansluiting))) = \"Z\", TR_CMS.List.Current.CMS_CONTRACT.naam_bedrijf,TR_CMS.List.Current.CMS_CONTRACT.voorletters + If(TR_CMS.List.Current.CMS_CONTRACT.voorletters = \"\",\"\", \" \") + \nTR_CMS.List.Current.CMS_CONTRACT.tussenvoegsels + If(TR_CMS.List.Current.CMS_CONTRACT.tussenvoegsels =\"\", \"\", \" \") +\nTR_CMS.List.Current.CMS_CONTRACT.achternaam)","type":"Text","functions":["If","ToUpper","TrimStart","TrimEnd"]}
{"text":"If(TableRecords1.List.Current.CGC_MIGRATED_SETTLEMENT_EXPLAIN.InvoiceNumber<>TableRecords1.List.Current.CGC_MIGRATED_SETTLEMENT.InvoiceNumber, TrimStart(TrimEnd(TableRecords1.List.Current.CGC_MIGRATED_SETTLEMENT_EXPLAIN.InvoiceNumber)), \"\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(tblMeteringData.List.Current.MeterDataWithQuantities.MeterData.METERING_DATA .SubmittedDate<>NullDate(),DateTimeToDate(tblMeteringData.List.Current.MeterDataWithQuantities.MeterData.METERING_DATA .SubmittedDate),\" \")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (Length(TableRecords1.List.Current.MESSAGE.Log) > 40, Substr(TableRecords1.List.Current.MESSAGE.Log, 0, 40) + \" ...\", TableRecords1.List.Current.MESSAGE.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords1.List.Current.MESSAGE.Date <> NullDate(),\nDateTimeToDate(TableRecords1.List.Current.MESSAGE.Date),\n\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"FormatText(Hour(TableRecords1.List.Current.PROFILE_VALUE.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.PROFILE_VALUE.StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(Counter > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, Counter)) + \" of \" + Counter + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"Substr(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,0,Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\") ) + NewLine() + Substr(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\")+2, Length(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address) - Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\") - 2)","type":"Text","functions":["Substr","Index","NewLine","Length"]}
{"text":"If(GetCount.List.Current.Int.Int > 0, IntegerToText(tbrMarketParties.StartIndex + 1) + \" to \" + IntegerToText(Min(tbrMarketParties.StartIndex + tbrMarketParties.LineCount, GetCount.List.Current.Int.Int)) + \" of \" + GetCount.List.Current.Int.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCount.List.Current.sInt.int > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCount.List.Current.sInt.int)) + \" of \" + GetCount.List.Current.sInt.int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If (Length(TableRecords1.List.Current.MESSAGE_PROCESSING_LOG.comment) > 120, Substr(TableRecords1.List.Current.MESSAGE_PROCESSING_LOG.comment, 0, 120) + \"...\", TableRecords1.List.Current.MESSAGE_PROCESSING_LOG.comment) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.MESSAGE.Log) > 30, Substr(TableRecords1.List.Current.MESSAGE.Log, 0, 27) + \"...\", TableRecords1.List.Current.MESSAGE.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDateTime(TableRecords1.List.Current.MESSAGE.Date, \"HH:mm:ss\"),0,5) +\nIf(DiffDays(TableRecords1.List.Current.MESSAGE.Date,CurrDateTime())=0,\"\",\nIf(DiffDays(TableRecords1.List.Current.MESSAGE.Date,CurrDateTime())>0,\"-\",\"+\")+DiffDays(TableRecords1.List.Current.MESSAGE.Date,CurrDateTime()))\n","type":"Text","functions":["Substr","FormatDateTime","If","DiffDays","CurrDateTime"]}
{"text":"If(Length(Messages.List.Current.MESSAGE.Log)>30,Substr(Messages.List.Current.MESSAGE.Log,0,27)+\"...\",Messages.List.Current.MESSAGE.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDateTime(Messages.List.Current.MESSAGE_PROCESSING_LOG.timestamp, \"HH:mm:ss\"),0,5) +\nIf(DiffDays(Messages.List.Current.MESSAGE_PROCESSING_LOG.timestamp,CurrDateTime())=0,\"\",\nIf(DiffDays(Messages.List.Current.MESSAGE_PROCESSING_LOG.timestamp,CurrDateTime())>0,\"-\",\"+\")+DiffDays(Messages.List.Current.MESSAGE_PROCESSING_LOG.timestamp,CurrDateTime()))","type":"Text","functions":["Substr","FormatDateTime","If","DiffDays","CurrDateTime"]}
{"text":"If(tblProspectActivity.List.Current.PROSPECT_ACTIVITY.DueDate = NullDate(), \"NoDate\",DateTimeToDate(tblProspectActivity.List.Current.PROSPECT_ACTIVITY.DueDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetCount.List.Current.strInt.Int > 0, IntegerToText(TR_MarketingActionType.StartIndex + 1) + \" to \" + IntegerToText(Min(TR_MarketingActionType.StartIndex + TR_MarketingActionType.LineCount, GetCount.List.Current.strInt.Int)) + \" of \" + GetCount.List.Current.strInt.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCount.List.Current.strInt.Int > 0, IntegerToText(TR_SalesChannel.StartIndex + 1) + \" to \" + IntegerToText(Min(TR_SalesChannel.StartIndex + TR_SalesChannel.LineCount, GetCount.List.Current.strInt.Int)) + \" of \" + GetCount.List.Current.strInt.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Count_GetAccountMarketingActionList.List.Current.strInt.Int  > 0, IntegerToText(TR_MarketingAction.StartIndex  + 1) + \" to \" + IntegerToText(Min(TR_MarketingAction.StartIndex + TR_MarketingAction.LineCount, Count_GetAccountMarketingActionList.List.Current.strInt.Int)) + \" of \" + Count_GetAccountMarketingActionList.List.Current.strInt.Int  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCount.List.Current.strInt.Int > 0, IntegerToText(TR_BusinessBranch.StartIndex + 1) + \" to \" + IntegerToText(Min(TR_BusinessBranch.StartIndex + TR_BusinessBranch.LineCount, GetCount.List.Current.strInt.Int)) + \" of \" + GetCount.List.Current.strInt.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCountSalesChannel.List.Current.strInt.Int  > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCountSalesChannel.List.Current.strInt.Int)) + \" of \" + GetCountSalesChannel.List.Current.strInt.Int  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCount.List.Current.strInt.Int > 0, IntegerToText(TR_MarketingAction.StartIndex + 1) + \" to \" + IntegerToText(Min(TR_MarketingAction.StartIndex + TR_MarketingAction.LineCount, GetCount.List.Current.strInt.Int)) + \" of \" + GetCount.List.Current.strInt.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"Replace(If(Length(SolutionList.Solutions.Current.ProjectSummary.Text) > 90,\n Substr(SolutionList.Solutions.Current.ProjectSummary.Text, 0, 90) + \"...\",\n SolutionList.Solutions.Current.ProjectSummary.Text),\"<br />\",\"\")","type":"Text","functions":["Replace","If","Length","Substr"]}
{"text":"Replace(If(Length(TopicsList.List.Current.ForumTopic.Text) > 90,\n Substr(TopicsList.List.Current.ForumTopic.Text, 0, 90) + \"...\",\n TopicsList.List.Current.ForumTopic.Text),\"<br />\",\"\")","type":"Text","functions":["Replace","If","Length","Substr"]}
{"text":"If(GetCount.List.Current.strInt.Int > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCount.List.Current.strInt.Int)) + \" of \" + GetCount.List.Current.strInt.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(TR_ListOffers.List.Current.ADDRESS.Id <> NullIdentifier(),\nTR_ListOffers.List.Current.ADDRESS.StreetName + \", \" + TR_ListOffers.List.Current.ADDRESS.DoorNumber + \", \" +\nTR_ListOffers.List.Current.ADDRESS.ZIPCode + \" \" +\nTR_ListOffers.List.Current.LOCATION.Name + If(TrimEnd(TrimStart(TR_ListOffers.List.Current.ADDRESS.Country)) <> \"\",\" - \" + TR_ListOffers.List.Current.ADDRESS.Country,\"\"), \"\")","type":"Text","functions":["If","NullIdentifier","TrimEnd","TrimStart"]}
{"text":"If(TrimEnd(TrimStart(TableRecordProducts.List.Current.ProductList.SalesDescription))=\"\",\nTableRecordProducts.List.Current.ProductList.Description,\nTableRecordProducts.List.Current.ProductList.SalesDescription)","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If (Length(TRParticipants.List.Current.PARTICIPANT.AdicionalInfo) > 30,\n Substr(TRParticipants.List.Current.PARTICIPANT.AdicionalInfo,0,30) + \"...\",\n TRParticipants.List.Current.PARTICIPANT.AdicionalInfo) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRBootCamps.List.Current.BOOTCAMP.Description)> 40,Substr(TRBootCamps.List.Current.BOOTCAMP.Description,0,40)+\"...\",TRBootCamps.List.Current.BOOTCAMP.Description) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRBootCamps.List.Current.BOOTCAMP_TYPE.Name)> 40,Substr(TRBootCamps.List.Current.BOOTCAMP_TYPE.Name,0,40)+\"...\",TRBootCamps.List.Current.BOOTCAMP_TYPE.Name) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(\n  DiffDays(CurrDate(),TRBootCamps.List.Current.BOOTCAMP.StartDate) > 0 and DiffDays(CurrDate(),TRBootCamps.List.Current.BOOTCAMP.StartDate) < 14, \n  \" in \"  + DiffDays(CurrDate(),TRBootCamps.List.Current.BOOTCAMP.StartDate) + \" days.\",\"\"\n)","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If(Length(TRFallOut.List.Current.FALL_OUT.FallOutReason) > 250, Substr(TRFallOut.List.Current.FALL_OUT.FallOutReason, 0, 250) + \" ...\", TRFallOut.List.Current.FALL_OUT.FallOutReason)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRAssociatedFallOut.List.Current.FALL_OUT.FallOutReason) > 250, Substr(TRAssociatedFallOut.List.Current.FALL_OUT.FallOutReason, 0, 250) + \" ...\", TRAssociatedFallOut.List.Current.FALL_OUT.FallOutReason)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ShowDealInfo.Record.DEAL_REGISTRATION.ExpectedCloseDate <> NullDate(),DateTimeToDate(ShowDealInfo.Record.DEAL_REGISTRATION.ExpectedCloseDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowDealInfo.Record.DEAL_REGISTRATION.ExpireDate <> NullDate(),DateTimeToDate(ShowDealInfo.Record.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate<>NullDate(),DateTimeToDate(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetRegDeals.List.Current.CURRENCY.Symbol <> \"$\",\n\nIf( GetRegDeals.List.Current.CURRENCY.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\")) +\" \" + \nIf( Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY.Symbol) ,\n\nIf( Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY.Symbol)\n+\" \" + \nIf( GetRegDeals.List.Current.CURRENCY.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\"))\n)\n\n\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(GetRegDeals.List.Current.CURRENCY.Symbol <> \"$\",\n\nIf( GetRegDeals.List.Current.CURRENCY.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")) +\" \" + \nIf( Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY.Symbol) ,\n\nIf( Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY.Symbol)\n+\" \" + \nIf( GetRegDeals.List.Current.CURRENCY.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\"))\n)\n\n\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trAccounts.List.Current.PROSPECT_COMPANY.ExpireDate<>NullDate(),DateTimeToDate(trAccounts.List.Current.PROSPECT_COMPANY.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals.List.Current.Text_2.Value <> \"$\",\n\nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value) ,\n\nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value)\n+\" \" + \nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trDeals.List.Current.Text_2.Value <> \"$\",\n\nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value) ,\n\nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value)\n+\" \" + \nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(TrimEnd(TrimStart(TR_ListProspects.List.Current.PROSPECT.Code)) <> \"\",\"Code: \" + TR_ListProspects.List.Current.PROSPECT.Code,\"\")","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(TR_WarmLead.List.Current.WARM_LEAD.DueDate = NullDate(), \"\", DateTimeToDate(TR_WarmLead.List.Current.WARM_LEAD.DueDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"TRTodoList.List.Current.PROSPECT_ACCOUNT.Name + \nIf(ToLower(GetPersonalAreaName()) = \"pjesus\",\"(\" + TRTodoList.List.Current.PROSPECT_ACCOUNT.AddressId +\")\",\"\")","type":"Text","functions":["If","ToLower","GetPersonalAreaName"]}
{"text":"If(TRTodoList.List.Current.PROSPECT_ACTIVITY.DueDate = NullDate(), \"Not schedule\",  DateTimeToDate(TRTodoList.List.Current.PROSPECT_ACTIVITY.DueDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If( DateTimeToDate(TR_WarmLeadList.List.Current.WARM_LEAD.DueDate) = NullDate(), \"<em>No due date</em>\", DateTimeToDate(TR_WarmLeadList.List.Current.WARM_LEAD.DueDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If ( TrimStart(TrimEnd(TR_WarmLeadList.List.Current.SALES_REGION.Name)) = \"\",\"\", \"<strong>Sales area:</strong>\" + TR_WarmLeadList.List.Current.SALES_REGION.Name)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TR_ListActivities.List.Current.PROSPECT_ACTIVITY.DueDate = NullDate(), \"Not schedule\", DateTimeToDate(TR_ListActivities.List.Current.PROSPECT_ACTIVITY.DueDate))\n\n","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If( TrimStart(TrimEnd(ShowLeadAddress.Record.WARM_LEAD.Country)) = \"\", \"N/D\", ShowLeadAddress.Record.WARM_LEAD.Country)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If( TrimStart(TrimEnd(ShowLeadAddress.Record.LOCATION.Name)) = \"\", \"N/D\", ShowLeadAddress.Record.LOCATION.Name)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If( TrimStart(TrimEnd(ShowLeadAddress.Record.WARM_LEAD.PostCode)) = \"\", \"N/D\", ShowLeadAddress.Record.WARM_LEAD.PostCode)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ShowLeadAddress.Record.WARM_LEAD.AddressStreet)) = \"\",\n \"N/D\",\n ShowLeadAddress.Record.WARM_LEAD.AddressStreet\n  + \" \" + ShowLeadAddress.Record.WARM_LEAD.AddressDoorNumber\n  + \" \" + ShowLeadAddress.Record.WARM_LEAD.AddressAppendix)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"TableRecords.List.Current.ADDRESS.StreetName\n+ \" \" + TableRecords.List.Current.ADDRESS.DoorNumber + \"<br>\" +\nTableRecords.List.Current.ADDRESS.ZIPCode + \" \" +\nTableRecords.List.Current.LOCATION.Name\n+ If(TrimEnd(TrimStart(TableRecords.List.Current.ADDRESS.Country)) <> \"\"\n  and TrimEnd(TrimStart(TableRecords.List.Current.ADDRESS.Country)) <> \"NL\"\n  and TrimEnd(TrimStart(TableRecords.List.Current.ADDRESS.Country)) <> \"NEDERLAND\",\n \" - \" + TableRecords.List.Current.ADDRESS.Country,\n \"\")","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(TrimEnd(TrimStart(a_PhoneNr)) <> \"\",If(l_DataCount=0,\"<br>\",\"\") + \"Phone Nr: \" + \"<strong>\" + a_PhoneNr + \"</strong>\",\"\")","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"l_DataList.Current.ADDRESS.StreetName\n+ \" \" + l_DataList.Current.ADDRESS.DoorNumber + \"<br>\" +\nl_DataList.Current.ADDRESS.ZIPCode + \" \" +\nl_DataList.Current.LOCATION.Name\n+ If(TrimEnd(TrimStart(l_DataList.Current.ADDRESS.Country)) <> \"\"\n  and TrimEnd(TrimStart(l_DataList.Current.ADDRESS.Country)) <> \"NL\"\n  and TrimEnd(TrimStart(l_DataList.Current.ADDRESS.Country)) <> \"NEDERLAND\",\n \" - \" + l_DataList.Current.ADDRESS.Country,\n \"\")","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If( Length(TableRecords1.List.Current.Account.Name) > 30,\n\tSubstr(TableRecords1.List.Current.Account.Name,0,30) + \"...\",\n\tTableRecords1.List.Current.Account.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(trProjects.List.Current.Account.Name) > 50,\n\tSubstr(trProjects.List.Current.Account.Name, 0, 50) + \"...\",\n\ttrProjects.List.Current.Account.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (IntegerToIdentifier( TextToInteger( GroupId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(QueryGroup.List.Current.Group.Name), \" - New\"), \"\")\n","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"If(DateTimeToDate(TRMasterDataUpdatesList.List.Current.ConnectionHistoryPair.ConnectionHistory2.CONNECTION_HISTORY.ValidityStartDate) <> NullDate(), DateTimeToDate(TRMasterDataUpdatesList.List.Current.ConnectionHistoryPair.ConnectionHistory2.CONNECTION_HISTORY.ValidityStartDate), \"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(ShowRecord1.Record.CONNECTION_HISTORY.ValidityStartDate = NullDate(), \"\", DateTimeToDate(ShowRecord1.Record.CONNECTION_HISTORY.ValidityStartDate)) ","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (Length(TRSAPSynchronizationList.List.Current.BATCH_FILE_ITEM.Filename) > 28, Substr(TRSAPSynchronizationList.List.Current.BATCH_FILE_ITEM.Filename, 0, 28) + \" ...\", TRSAPSynchronizationList.List.Current.BATCH_FILE_ITEM.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\nIf (Length(TRBatchList.List.Current.BATCH_FILE_ITEM.Log) > 40, Substr(TRBatchList.List.Current.BATCH_FILE_ITEM.Log, 0, 40) + \" ...\", TRBatchList.List.Current.BATCH_FILE_ITEM.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(TRBatchList.List.Current.BATCH_FILE_ITEM.Filename) > 40, Substr(TRBatchList.List.Current.BATCH_FILE_ITEM.Filename, 0, 40) + \" ...\", TRBatchList.List.Current.BATCH_FILE_ITEM.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(RemarksTR.List.Current.REQUEST_REMARK.Remark,0, 100) + If ( Length(RemarksTR.List.Current.REQUEST_REMARK.Remark) > 200, \"...\", \"\" )","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(GetCompany.List.Current.Account.BillingStreet) > 50,Substr(GetCompany.List.Current.Account.BillingStreet,0,50)+\"...\",GetCompany.List.Current.Account.BillingStreet)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetPerson.List.Current.PERSON.Address1<>\"\" and GetPerson.List.Current.PERSON.Address2<>\"\",If(Length(GetPerson.List.Current.PERSON.Address1) > 50,Substr(GetPerson.List.Current.PERSON.Address1,0,50)+\"...\",GetPerson.List.Current.PERSON.Address1)\n + NewLine() + If(Length(GetPerson.List.Current.PERSON.Address2) > 50,Substr(GetPerson.List.Current.PERSON.Address2,0,50)+\"...\",GetPerson.List.Current.PERSON.Address2) ,If(GetPerson.List.Current.PERSON.Address1<>\"\",If(Length(GetPerson.List.Current.PERSON.Address1) > 50,Substr(GetPerson.List.Current.PERSON.Address1,0,50)+\"...\",GetPerson.List.Current.PERSON.Address1) ,If(GetPerson.List.Current.PERSON.Address2<>\"\",If(Length(GetPerson.List.Current.PERSON.Address2) > 50,Substr(GetPerson.List.Current.PERSON.Address2,0,50)+\"...\",GetPerson.List.Current.PERSON.Address2) ,\"\")))\n\n","type":"Text","functions":["If","Length","Substr","NewLine"]}
{"text":"\"<SCRIPT language=javascript>\nshow_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',holidays,false,'CalendarDiv'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))\n+\"');</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"Substr(ListCompanies.List.Current.COMPANY.Description, 0, 100) + If(Length(ListCompanies.List.Current.COMPANY.Description)>100, \" (...)\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(GetActiveLicense.List.Current.LICENSE_TYPE.Days > 0 and GetActiveLicense.List.Current.LICENSE.Expires <> NullDate() and GetActiveLicense.List.Current.LICENSE.IssuingDate <> NullDate(), ( If( GetActiveLicense.List.Current.LICENSE.Expires < CurrDate(), \"The \" + GetActiveLicense.List.Current.LICENSE_TYPE.Name + \" has expired on \" + GetActiveLicense.List.Current.LICENSE.Expires,\n\"The \" + GetActiveLicense.List.Current.LICENSE_TYPE.Name + \" will expire within \" + (DiffDays( CurrDate(), GetActiveLicense.List.Current.LICENSE.Expires)) + \" days\")), \"There is no issued license!\")","type":"Text","functions":["If","NullDate","CurrDate","DiffDays"]}
{"text":"If(TableRecords_ExpireNextMonth.List.Current.INSTALLATION.RenewalDate = NullDate(), DateTimeToDate( AddDays(TableRecords_ExpireNextMonth.List.Current.SUs.TimeStamp, Site.NextAuditDaySpan)),  TableRecords_ExpireNextMonth.List.Current.INSTALLATION.RenewalDate)","type":"Date","functions":["If","NullDate","DateTimeToDate","AddDays"]}
{"text":"Substr(ListFolderDocuments.List.Current.DOCUMENT.Description, 0, 200) + If(Length(ListFolderDocuments.List.Current.DOCUMENT.Description)>200,\" (...)\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Index(ContactActivityList.List.Current.ContactActivityList_ActivityList.Object,\" from \")<>-1,\nSubstr(ContactActivityList.List.Current.ContactActivityList_ActivityList.Object,0,Index(ContactActivityList.List.Current.ContactActivityList_ActivityList.Object,\" from \")),ContactActivityList.List.Current.ContactActivityList_ActivityList.Object)","type":"Text","functions":["If","Index","Substr"]}
{"text":"NewTime(Hour(ListRecords1.List.Current.ContactActivityList_LogList.Datetime),Minute(ListRecords1.List.Current.ContactActivityList_LogList.Datetime),Second(ListRecords1.List.Current.ContactActivityList_LogList.Datetime))","type":"Time","functions":["NewTime","Hour","Minute","Second"]}
{"text":"If(Length(ER_Opportunity.Record.Opportunity2.Description)>500, Substr(ER_Opportunity.Record.Opportunity2.Description,0,500)+\"...\", ER_Opportunity.Record.Opportunity2.Description)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ResourcesTable.List.Current.RESOURCE.Size=\"0\",\"0\",Round(TextToInteger(ResourcesTable.List.Current.RESOURCE.Size)/10)/100)","type":"Text","functions":["If","Round","TextToInteger"]}
{"text":"If(Length(TableRecords3.List.Current.UrlFilter.Regex)>80,Substr(TableRecords3.List.Current.UrlFilter.Regex,0,80) + \" \" + Substr(TableRecords3.List.Current.UrlFilter.Regex,80,1000), TableRecords3.List.Current.UrlFilter.Regex)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableActions.List.Current.ActivityLog.Custom1)>TrimSize,Substr(TableActions.List.Current.ActivityLog.Custom1,0,TrimSize),TableActions.List.Current.ActivityLog.Custom1)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<sup>\" + \nIf(Day(Webinar.Webinar.Date) > 10 and Day(Webinar.Webinar.Date) < 20, \"th\",\nIf(Mod(Day(Webinar.Webinar.Date), 10) = 1, \"st\",\nIf(Mod(Day(Webinar.Webinar.Date), 10)  = 2, \"nd\",\nIf(Mod(Day(Webinar.Webinar.Date), 10)  = 3, \"rd\", \"th\")))) +\n\"</sup>\"","type":"Text","functions":["If","Day","Mod"]}
{"text":"If(Length(TableMailboxes.List.Current.EMAIL_ACCOUNT.Last_Fetch_Error) > 200, Substr(TableMailboxes.List.Current.EMAIL_ACCOUNT.Last_Fetch_Error,0,200)+\"...\", TableMailboxes.List.Current.EMAIL_ACCOUNT.Last_Fetch_Error)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(trPartners.List.Current.LKP_PartnerList.ApprovalDate<>NullDate(),\"Approved on \"+DateTimeToDate(trPartners.List.Current.LKP_PartnerList.ApprovalDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trTrialCustomers.List.Current.LKP_CustomerList.ApprovalDate<>NullDate(),\"Approved on \"+DateTimeToDate(trTrialCustomers.List.Current.LKP_CustomerList.ApprovalDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trCustomers.List.Current.LKP_CustomerList.ApprovalDate<>NullDate(),\"Approved on \"+DateTimeToDate(trCustomers.List.Current.LKP_CustomerList.ApprovalDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(ListRelatedProjects.List.Current.PROJECT.ShortDescription)>80, Substr(ListRelatedProjects.List.Current.PROJECT.ShortDescription,0,80) + \"...\", ListRelatedProjects.List.Current.PROJECT.ShortDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Locale <> \"\", \"<script type='text/javascript' src='\" + GetOwnerURLPath() + Locale + \".js'></script>\" + NewLine(), \"\") +\n\"<script type='text/javascript'>\n   // DIRECTORY HOLDING BUTTON IMAGES\n     buttonPath = \"\"\" + GetOwnerURLPath() + \"img/\"\"; \n\n   // CONSTRUCTION OF WHIZZYWIG\n/*  Config: LIST OF BUTTONS TO SHOW. \n Valid parameters are: 'all', which is equivalent to \n      'formatblock fontname fontsize newline bold italic \n      underline | left center right | number bullet indent outdent | undo redo \n      | color hilite rule | link image table | clean html spellcheck'*/\n makeWhizzyWig(\"\"\" + Input + \"\"\", \"\"\" + Config + \"\"\");\n</script>\"","type":"Text","functions":["If","GetOwnerURLPath","NewLine"]}
{"text":"If(EditRecord.Record.Text.Text=\"\",\"\",If(EditRecord.Record.License.IsTermUnlimited,\"Unlimited\",\"Expires on \"+DateTimeToDate(AddDays(CurrDate(), TextToInteger(EditRecord.Record.Text.Text)))))","type":"Text","functions":["If","DateTimeToDate","AddDays","CurrDate","TextToInteger"]}
{"text":"If(Length(TableRecordsFeatures.List.Current.Feature.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsFeatures.List.Current.Feature.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsFeatures.List.Current.Feature.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsFeatures.List.Current.Feature.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsSolutions.List.Current.Segmentation_Solution.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsSolutions.List.Current.Segmentation_Solution.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsSolutions.List.Current.Segmentation_Solution.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsSolutions.List.Current.Segmentation_Solution.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDateTime(TableRecordsEmails.List.Current.Email.DATERECEIVED, \"dd MMMM\") + \"@\" +\nHour(TableRecordsEmails.List.Current.Email.DATERECEIVED) + \":\" + FormatText(Minute(TableRecordsEmails.List.Current.Email.DATERECEIVED), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"If(Length(TableRecordsEmails.List.Current.Email.FROM) > 14, Substr(TableRecordsEmails.List.Current.Email.FROM, 0, 10) + \"...\", TableRecordsEmails.List.Current.Email.FROM)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(If(Length(TableRecordsEmails.List.Current.Email.BODY) > Site.Help_TrimListInfo, Substr(TableRecordsEmails.List.Current.Email.BODY, 0, Site.Help_TrimListInfo) + \"...\", TableRecordsEmails.List.Current.Email.BODY), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsEmails.List.Current.Email.SUBJECT) > Site.Help_TrimListSecondary, Substr(TableRecordsEmails.List.Current.Email.SUBJECT, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsEmails.List.Current.Email.SUBJECT)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDateTime(TableRecordsLicenses.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsLicenses.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsLicenses.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsLicenses.List.Current.Licensing_License.Edition) > Site.Help_TrimListInfo, Substr(TableRecordsLicenses.List.Current.Licensing_License.Edition, 0, Site.Help_TrimListInfo) + \"...\", TableRecordsLicenses.List.Current.Licensing_License.Edition), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsLicenses.List.Current.COMPANY2.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsLicenses.List.Current.COMPANY2.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsLicenses.List.Current.COMPANY2.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsCompanies.List.Current.COMPANY2.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsCompanies.List.Current.COMPANY2.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsCompanies.List.Current.COMPANY2.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsCompanies.List.Current.COMPANY2.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDateTime(TableRecordsRequests.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsRequests.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsRequests.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsRequests.List.Current.Licensing_Request.Description) > Site.Help_TrimListInfo, Substr(TableRecordsRequests.List.Current.Licensing_Request.Description, 0, Site.Help_TrimListInfo) + \"...\", TableRecordsRequests.List.Current.Licensing_Request.Description), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsRequests.List.Current.COMPANY2.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsRequests.List.Current.COMPANY2.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsRequests.List.Current.COMPANY2.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDateTime(TableRecordsHubServers.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsHubServers.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsHubServers.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsHubServers.List.Current.Licensing_HubServer.Serial) > Site.Help_TrimListInfo, Substr(TableRecordsHubServers.List.Current.Licensing_HubServer.Serial, 0, Site.Help_TrimListInfo) + \"...\", TableRecordsHubServers.List.Current.Licensing_HubServer.Serial), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsHubServers.List.Current.COMPANY2.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsHubServers.List.Current.COMPANY2.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsHubServers.List.Current.COMPANY2.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsDocuments.List.Current.Licensing_Document.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsDocuments.List.Current.Licensing_Document.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsDocuments.List.Current.Licensing_Document.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsDocuments.List.Current.Licensing_Document.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDateTime(GetChangeLog.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(GetChangeLog.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(GetChangeLog.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"DateTimeToDate(AddDays(ShowRecord1.Record.ChangeLog.Created,TextToInteger(ShowRecord1.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)))","type":"Date","functions":["DateTimeToDate","AddDays","TextToInteger"]}
{"text":"\"(\" + DiffDays(CurrDate(), AddDays(ShowRecord1.Record.ChangeLog.Created,TextToInteger(ShowRecord1.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) + \")\"","type":"Text","functions":["DiffDays","CurrDate","AddDays","TextToInteger"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.InstalledOn<>NullDate(),DateTimeToTime(TR_TrialQueue.List.Current.TRIAL_QUEUE.InstalledOn),\"\")","type":"Text","functions":["If","NullDate","DateTimeToTime"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.InstalledOn<>NullDate(),DateTimeToDate(TR_TrialQueue.List.Current.TRIAL_QUEUE.InstalledOn),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.DownloadedOn<>NullDate(),DateTimeToTime(TR_TrialQueue.List.Current.TRIAL_QUEUE.DownloadedOn),\"\")","type":"Text","functions":["If","NullDate","DateTimeToTime"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.DownloadedOn<>NullDate(),DateTimeToDate(TR_TrialQueue.List.Current.TRIAL_QUEUE.DownloadedOn),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.RequestDate<>NullDate(),DateTimeToTime(TR_TrialQueue.List.Current.TRIAL_QUEUE.RequestDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToTime"]}
{"text":"If(TR_TrialQueue.List.Current.TRIAL_QUEUE.RequestDate<>NullDate(),DateTimeToDate(TR_TrialQueue.List.Current.TRIAL_QUEUE.RequestDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If((not named_users and  numusers>Site.ContactUsConcurrentUsers) or (named_users and  numusers>Site.ContactUsNamedUsers),\">\",\"\") + Min(numusers,\nTextToInteger(\n If(named_users, Site.ContactUsNamedUsers,Site.ContactUsConcurrentUsers))\n)\n","type":"Text","functions":["If","Min","TextToInteger"]}
{"text":"If(Length(Project_List2.Projects.Current.ProjectSummary2.Title)>50, Substr(Project_List2.Projects.Current.ProjectSummary2.Title,0,50) + \"...\", Project_List2.Projects.Current.ProjectSummary2.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListDocuments_32.List.Current.DOCUMENT2.Subject)>50,Substr(ListDocuments_32.List.Current.DOCUMENT2.Subject,0,50) + \"...\", ListDocuments_32.List.Current.DOCUMENT2.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListNews3.List.Current.ForumTopic2.Title)>50, Substr(ListNews3.List.Current.ForumTopic2.Title,0,50) + \"...\",\nListNews3.List.Current.ForumTopic2.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListDocuments_32.List.Current.DOCUMENT.Subject)>50,Substr(ListDocuments_32.List.Current.DOCUMENT.Subject,0,50) + \"...\", ListDocuments_32.List.Current.DOCUMENT.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListNews3.List.Current.ForumTopic.Title)>50, Substr(ListNews3.List.Current.ForumTopic.Title,0,50) + \"...\",\nListNews3.List.Current.ForumTopic.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Project_List.Projects.Current.ProjectSummary.Title)>50, Substr(Project_List.Projects.Current.ProjectSummary.Title,0,50) + \"...\", Project_List.Projects.Current.ProjectSummary.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SolutionIdentifier = NullIdentifier(), \"Create Solution\", If(-1 <> Index(EditRecordSolution.Record.Segmentation_Solution.Name, \"Solution\"), EditRecordSolution.Record.Segmentation_Solution.Name, EditRecordSolution.Record.Segmentation_Solution.Name + \" Solution\"))","type":"Text","functions":["If","NullIdentifier","Index"]}
{"text":"FormatDateTime(TableRecordsSolutions.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsSolutions.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsSolutions.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsSolutions.List.Current.Segmentation_Solution.Description) > Site.Help_TrimListMain, Substr(TableRecordsSolutions.List.Current.Segmentation_Solution.Description, 0, Site.Help_TrimListMain) + \"...\", TableRecordsSolutions.List.Current.Segmentation_Solution.Description), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsSolutions.List.Current.Segmentation_Solution.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsSolutions.List.Current.Segmentation_Solution.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsSolutions.List.Current.Segmentation_Solution.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsEditionFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"<span title='\" + EncodeHtml(TableRecordsEditionFeatures.List.Current.Segmentation_Feature.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsEditionSolutions.List.Current.Segmentation_Solution.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsEditionFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsAvailableFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"<span title='\" + EncodeHtml(TableRecordsAvailableFeatures.List.Current.Segmentation_Feature.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsAvailableSolutions.List.Current.Segmentation_Solution.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsAvailableSolutions.List.Current.Segmentation_Solution.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TableRecordsEditionFeatures.List.Current.Segmentation_Feature.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsEditionFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TableRecordsAvailableFeatures.List.Current.Segmentation_Feature.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsAvailableFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(EditionIdentifier = NullIdentifier(), \"Create Edition\", If(-1 <> Index(EditRecordEdition.Record.Segmentation_Edition.Name, \"Edition\"), EditRecordEdition.Record.Segmentation_Edition.Name, EditRecordEdition.Record.Segmentation_Edition.Name + \" Edition\"))","type":"Text","functions":["If","NullIdentifier","Index"]}
{"text":"FormatDateTime(TableRecordsEditions.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsEditions.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsEditions.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsEditions.List.Current.Segmentation_Edition.Description) > Site.Help_TrimListMain, Substr(TableRecordsEditions.List.Current.Segmentation_Edition.Description, 0, Site.Help_TrimListMain) + \"...\", TableRecordsEditions.List.Current.Segmentation_Edition.Description), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsEditions.List.Current.Segmentation_Edition.InternalName) > Site.Help_TrimListSecondary, Substr(TableRecordsEditions.List.Current.Segmentation_Edition.InternalName, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsEditions.List.Current.Segmentation_Edition.InternalName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsFeatureEditions.List.Current.Segmentation_Edition.Description)>Site.Help_TrimListSecondary,\"<span title='\" + EncodeHtml(TableRecordsFeatureEditions.List.Current.Segmentation_Edition.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsFeatureEditions.List.Current.Segmentation_Edition.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsFeatureEditions.List.Current.Segmentation_Edition.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsFeatureLimits.List.Current.Segmentation_FeatureLimit.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsFeatureLimits.List.Current.Segmentation_FeatureLimit.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsFeatureLimits.List.Current.Segmentation_FeatureLimit.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsFeatureLimits.List.Current.Segmentation_FeatureLimit.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(FeatureIdentifier = NullIdentifier(), \"Create Feature\", If(-1 <> Index(EditRecordFeature.Record.Segmentation_Feature.Name, \"Feature\"), EditRecordFeature.Record.Segmentation_Feature.Name, EditRecordFeature.Record.Segmentation_Feature.Name + \" Feature\"))","type":"Text","functions":["If","NullIdentifier","Index"]}
{"text":"If(Length(TableRecordsFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsFeatures.List.Current.Segmentation_Feature.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsFeatures.List.Current.Segmentation_Feature.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsFeatures.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsEditions.List.Current.Segmentation_Edition.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsEditions.List.Current.Segmentation_Edition.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsEditions.List.Current.Segmentation_Edition.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsEditions.List.Current.Segmentation_Edition.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsEditionLicenseTemplateLimits.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"<span title='\" + EncodeHtml(TableRecordsEditionLicenseTemplateLimits.List.Current.Segmentation_Feature.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsEditionLicenseTemplateLimits.List.Current.Segmentation_Feature.Description,0,Site.Help_TrimListSecondary) + If(Length(TableRecordsEditionLicenseTemplateLimits.List.Current.Segmentation_Feature.Description)>Site.Help_TrimListSecondary,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDateTime(TableRecordsFeatures.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsFeatures.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsFeatures.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")","type":"Text","functions":["FormatDateTime","Hour","FormatText","Minute"]}
{"text":"Replace(If(Length(TableRecordsFeatures.List.Current.Segmentation_Feature.Description) > Site.Help_TrimListMain, Substr(TableRecordsFeatures.List.Current.Segmentation_Feature.Description, 0, Site.Help_TrimListMain) + \"...\", TableRecordsFeatures.List.Current.Segmentation_Feature.Description), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"If(Length(TableRecordsFeatures.List.Current.Segmentation_Feature.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsFeatures.List.Current.Segmentation_Feature.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsFeatures.List.Current.Segmentation_Feature.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\")","type":"Text","functions":["FormatText","Minute","Second"]}
{"text":"AddPersonalAreaToURLPath(\"http://\" + Site.Hostname + \"/SupportCenter/EmailInvitationAccept.aspx?Key=\" + RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\"))","type":"Text","functions":["AddPersonalAreaToURLPath","FormatText","Minute","Second"]}
{"text":"AddPersonalAreaToURLPath(\"http://\" + Site.Hostname + \"/SupportCenter/EmailRegistrationAccept.aspx?Key=\" + RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\"))","type":"Text","functions":["AddPersonalAreaToURLPath","FormatText","Minute","Second"]}
{"text":"If(ShowRecord_Document.Record.DOCUMENT.LastRevisionDate= NullDate(), Substr(ShowRecord_Document.Record.DOCUMENT.DatePublished,0,10), ShowRecord_Document.Record.DOCUMENT.LastRevisionDate)","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If( Length(CourseRecords.List.Current.COURSE.Description) <= 200, CourseRecords.List.Current.COURSE.Description, Substr(CourseRecords.List.Current.COURSE.Description,0,200) + \"...\" )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(CoursesList.List.Current.COURSE.Description) <= 200, CoursesList.List.Current.COURSE.Description, Substr(CoursesList.List.Current.COURSE.Description,0,200) + \"...\" )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InArtist.Artist.Statement)>Site.TruncatedTextLength,Concat(Substr(InArtist.Artist.Statement,0,Site.TruncatedTextLength-Length(\"...\")),\"...\"),InArtist.Artist.Statement)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(Length(InNews.News.Body)>Site.TruncatedTextLength,Concat(Substr(InNews.News.Body,0,Site.TruncatedTextLength-Length(\"...\")),\"...\"),InNews.News.Body)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(Length(UploadedFileRec.UPLOADED_FILE.FileName) > 70, \nSubstr(UploadedFileRec.UPLOADED_FILE.FileName, 0, 67) + \"...\",\nUploadedFileRec.UPLOADED_FILE.FileName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(trExams.List.Current.INQUIRY.Description,0,Min(Length(trExams.List.Current.INQUIRY.Description),50)) + If (Length(trExams.List.Current.INQUIRY.Description) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"Substr(trExams.List.Current.SKILL_LEVEL.Name,0,Min(Length(trExams.List.Current.SKILL_LEVEL.Name),50)) + If (Length(trExams.List.Current.SKILL_LEVEL.Name) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"If ( Length(tr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaSeleccao) > 25,\nSubstr(tr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaSeleccao,0,25) +\"...\",\ntr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaSeleccao)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ( Length(tr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaQuantidade) > 25,\nSubstr(tr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaQuantidade,0,25) +\"...\",\ntr_ModeloOutputs.List.Current.MODELO_ORCAMENTO_OUTPUT.FormulaQuantidade)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ( Length(ModeloOrc_output.Current.ModeloOrcamento_output.FormulaSeleccao) > 25,\nSubstr(ModeloOrc_output.Current.ModeloOrcamento_output.FormulaSeleccao,0,25) +\"...\",\nModeloOrc_output.Current.ModeloOrcamento_output.FormulaSeleccao)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ( Length(ModeloOrc_output.Current.ModeloOrcamento_output.FormulaQuantidade) > 25,\nSubstr(ModeloOrc_output.Current.ModeloOrcamento_output.FormulaQuantidade,0,25) +\"...\",\nModeloOrc_output.Current.ModeloOrcamento_output.FormulaQuantidade)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Your sizing has been rejected on \" + \nYear(GetEstimate.List.Current.Estimate.RejectedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.RejectedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.RejectedDate)\n","type":"Text","functions":["Year","Month","Day"]}
{"text":"\"Your sizing has been approved on \" + \nYear(GetEstimate.List.Current.Estimate.ApprovedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.ApprovedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.ApprovedDate)\n","type":"Text","functions":["Year","Month","Day"]}
{"text":"\"You have submited  your sizing on \" + \nYear(GetEstimate.List.Current.Estimate.SubmitedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.SubmitedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.SubmitedDate)","type":"Text","functions":["Year","Month","Day"]}
{"text":"If(VersionsList.List.Current.Estimate.ApprovedDate = NullDate() or VersionsList.List.Current.USER_MASTER_3.Id = NullIdentifier() or VersionsList.List.Current.Estimate.State = \"RE\", \"\", If(VersionsList.List.Current.Estimate.State = \"AP\", \"Approved on \", \"Approved or Rejected on \") + DateTimeToDate(VersionsList.List.Current.Estimate.ApprovedDate) + \" by \" + VersionsList.List.Current.USER_MASTER_3.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(VersionsList.List.Current.Estimate.RejectedDate = NullDate() or  VersionsList.List.Current.USER_MASTER_6.Id = NullIdentifier(), \"\", \"Rejected on \" + DateTimeToDate(VersionsList.List.Current.Estimate.RejectedDate) + \" by \" + VersionsList.List.Current.USER_MASTER_6.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(VersionsList2.List.Current.Estimate.SubmitedDate = NullDate() or  VersionsList2.List.Current.USER_MASTER_2.Id = NullIdentifier(), \"\", \"Submited on \" + DateTimeToDate(VersionsList2.List.Current.Estimate.SubmitedDate) + \" by \" + VersionsList2.List.Current.USER_MASTER_2.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"\"Version created on \" + DateTimeToDate(VersionsList.List.Current.Estimate.VersionDate) + \" by \" + \nIf(VersionsList.List.Current.Estimate.CreatedBy = NullIdentifier(), VersionsList.List.Current.USER_MASTER.Name, VersionsList.List.Current.USER_MASTER_4.Name)","type":"Text","functions":["DateTimeToDate","If","NullIdentifier"]}
{"text":"If(VersionsList.List.Current.Estimate.SubmitedDate = NullDate() or  VersionsList.List.Current.USER_MASTER_2.Id = NullIdentifier(), \"\", \"Submited on \" + DateTimeToDate(VersionsList.List.Current.Estimate.SubmitedDate) + \" by \" + VersionsList.List.Current.USER_MASTER_2.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(Year(EstimatesTable.List.Current.Estimate.DeliverDate) = 1900, \"\", DateTimeToDate(EstimatesTable.List.Current.Estimate.DeliverDate))","type":"Text","functions":["If","Year","DateTimeToDate"]}
{"text":"If(EstimatesTable.List.Current.Estimate.ApprovedDate = NullDate() or EstimatesTable.List.Current.USER_MASTER_3.Id = NullIdentifier(), \"\", If(EstimatesTable.List.Current.Estimate.State = \"AP\", \"Approved on \", \"Rejected on \") + DateTimeToDate(EstimatesTable.List.Current.Estimate.ApprovedDate) +  \" by \" + EstimatesTable.List.Current.USER_MASTER_3.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(EstimatesTable.List.Current.Estimate.SubmitedDate = NullDate() or  EstimatesTable.List.Current.USER_MASTER_2.Id = NullIdentifier(), \"\", \"Submited on \" + DateTimeToDate(EstimatesTable.List.Current.Estimate.SubmitedDate) + \" by \" + EstimatesTable.List.Current.USER_MASTER_2.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If (Length(EstimatesTable.List.Current.Estimate.Description) > 40,\nSubstr(EstimatesTable.List.Current.Estimate.Description,0,40) +\"...\",\nEstimatesTable.List.Current.Estimate.Description)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EstimatesTable.List.Current.Estimate.ApprovedDate = NullDate() or EstimatesTable.List.Current.USER_MASTER_3.Id = NullIdentifier() or EstimatesTable.List.Current.Estimate.State = \"RE\", \"\", If(EstimatesTable.List.Current.Estimate.State = \"AP\", \"Approved on \", \"Approved or Rejected on \") + DateTimeToDate(EstimatesTable.List.Current.Estimate.ApprovedDate) +  \" by \" + EstimatesTable.List.Current.USER_MASTER_3.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(EstimatesTable.List.Current.Estimate.RejectedDate = NullDate() or  EstimatesTable.List.Current.USER_MASTER_5.Id = NullIdentifier(), \"\", \"Rejected on \" + DateTimeToDate(EstimatesTable.List.Current.Estimate.RejectedDate) + \" by \" + EstimatesTable.List.Current.USER_MASTER_5.Name)","type":"Text","functions":["If","NullDate","NullIdentifier","DateTimeToDate"]}
{"text":"If(ListRecords1.List.Current.ROLE_ACQUIRED.RevisionDate = NullDate(),\"\",\"Since:<br>\" + DateTimeToDate(ListRecords1.List.Current.ROLE_ACQUIRED.AccomplishedDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ListRecords1.List.Current.ROLE_ACQUIRED.RevisionDate = NullDate(),\"\",\"Revision date:<br>\" + DateTimeToDate(ListRecords1.List.Current.ROLE_ACQUIRED.RevisionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If( Trunc(DiffMinutes(CurrDateTime(),ExamNextDate)/60)=0,\"\",Trunc(DiffMinutes(CurrDateTime(),ExamNextDate)/60)\n+ \" hour(s) and \") + \nMod(DiffMinutes(CurrDateTime(),ExamNextDate),60)\n+ \" minute(s) \"\n","type":"Text","functions":["If","Trunc","DiffMinutes","CurrDateTime","Mod"]}
{"text":"If(ListRecords1.List.Current.ROLE_ACQUIRED.RevisionDate = NullDate(),\"\",\"Expires on<br>\" + DateTimeToDate(ListRecords1.List.Current.ROLE_ACQUIRED.RevisionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TextToDate(\nListaErros_Recolha_TR.List.Current.Problemas_QuadroErrosRecolha.DataFechoAutomatico) = NullDate(), \"\",\nListaErros_Recolha_TR.List.Current.Problemas_QuadroErrosRecolha.DataFechoAutomatico)","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Length(ListaErros_Recolha_TR.List.Current.Problemas_QuadroErrosRecolha.TarefaMaterial_Descricao) > 30,\nSubstr(ListaErros_Recolha_TR.List.Current.Problemas_QuadroErrosRecolha.TarefaMaterial_Descricao,0,30)+\"...\",\nListaErros_Recolha_TR.List.Current.Problemas_QuadroErrosRecolha.TarefaMaterial_Descricao)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDate(\nListaErros_Ordem_TR.List.Current.Problemas_QuadroErrosOrdem.DataFechoAutomatico) = NullDate(), \"\",\nListaErros_Ordem_TR.List.Current.Problemas_QuadroErrosOrdem.DataFechoAutomatico)","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableRecords1.List.Current.Erro_Listar.DataFechoAutomatico) = NullDate(),\"-\",DateTimeToDate(TableRecords1.List.Current.Erro_Listar.DataFechoAutomatico))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If (AutehnticationDomainId <> NullIdentifier(), EncodeHtml(AuthenticationDomainER.Record.AUTHENTICATION_DOMAIN.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"If\n(\nIndex(TableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.EstornoSAP,\" \") = -1 ,\nTableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.EstornoSAP ,\nSubstr(\nTableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.EstornoSAP,\n0,\nIndex(TableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.EstornoSAP,\" \"))\n)","type":"Text","functions":["If","Index","Substr"]}
{"text":"If\n(\nIndex(TableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.DocSAP,\" \") = -1 ,\nTableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.DocSAP ,\nSubstr(\nTableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.DocSAP,\n0,\nIndex(TableRecordsEspecializacoesOrdensEstimadas.List.Current.Especializacao_ResultadosPesquisa.DocSAP,\" \"))\n)","type":"Text","functions":["If","Index","Substr"]}
{"text":"If(TableRecords1.List.Current.QoS_TableRecords.DataReferencia = NullDate(),\"-\",DateTimeToDate(TableRecords1.List.Current.QoS_TableRecords.DataReferencia))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.PENALIDADE.Estado = Entities.PENALIDADE_ESTADO_OPERACIONAL.ANALISE_PT or TableRecords1.List.Current.PENALIDADE.Estado = Entities.PENALIDADE_ESTADO_OPERACIONAL.ANALISE_SP, If(DiffHours(CurrDateTime(),TableRecords1.List.Current.PENALIDADE.DataFecho)<0,\"-\",DiffHours(CurrDateTime(),TableRecords1.List.Current.PENALIDADE.DataFecho)+\"h\"),\"-\")","type":"Text","functions":["If","DiffHours","CurrDateTime"]}
{"text":"If(TextToIdentifier(TableRecords1.List.Current.ERRO_GRUPO_RESPONSAVEL_STRUCT.ErroTipo) = NullTextIdentifier(), \"-\", TableRecords1.List.Current.ERRO_GRUPO_RESPONSAVEL_STRUCT.ErroTipo)","type":"Text","functions":["If","TextToIdentifier","NullTextIdentifier"]}
{"text":"\nIf(TextToIdentifier(TableRecords1.List.Current.ERRO_GRUPO_RESPONSAVEL_STRUCT.ErroGrupo) = NullTextIdentifier(), \"-\", TableRecords1.List.Current.ERRO_GRUPO_RESPONSAVEL_STRUCT.ErroGrupo)\n","type":"Text","functions":["If","TextToIdentifier","NullTextIdentifier"]}
{"text":"If(TableRecordsAdendas.List.Current.ORCAMENTO_ADENDA.DataAceitacao=NullDate(), \"-\", DateTimeToDate(TableRecordsAdendas.List.Current.ORCAMENTO_ADENDA.DataAceitacao))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"em \" + DateTimeToDate(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn) + \" \" + FormatText(Hour(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If\n((DateTimeToDate(AddDays(ShowRecord1.Record.PROMOTION.EndDate,(DiffDays(ShowRecord1.Record.PROMOTION.ExpectedStartDate, CurrDate()))))) <= (DateTimeToDate(ShowRecord1.Record.PROMOTION.EndDate)),\"\",\n\"(Reagendamento sugerido \" + DateTimeToDate(AddDays(ShowRecord1.Record.PROMOTION.EndDate,(DiffDays(ShowRecord1.Record.PROMOTION.ExpectedStartDate, CurrDate())))) + \" )\")","type":"Text","functions":["If","DateTimeToDate","AddDays","DiffDays","CurrDate"]}
{"text":"DateTimeToDate(AddDays(PromotionER.Record.PROMOTION.ExpectedEndDate, DiffDays(PromotionER.Record.PROMOTION_STEP.ExpectedEndDate, CurrDate())))","type":"Date","functions":["DateTimeToDate","AddDays","DiffDays","CurrDate"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(List2.List.Current.AUDIT.Duration)/1000-60*Trunc(List2.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(List2.List.Current.AUDIT.Duration)/1000-60*Trunc(List2.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"If(DateTimeToDate(TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoEstado) = NullDate() and DateTimeToDate(TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoResponsavel) = NullDate(),\"-\",\nIf(TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoEstado > TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoResponsavel,Substr(TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoEstado,0,10) ,Substr(TableRecordsErrosManuais.List.Current.Erro_Listar.DataAlteracaoResponsavel,0,10) ))","type":"Text","functions":["If","DateTimeToDate","NullDate","Substr"]}
{"text":"If(DateTimeToDate(TableRecordsErrosAutomaticos.List.Current.Erro_Listar.DataFechoAutomatico) = NullDate(),\"-\",DateTimeToDate(TableRecordsErrosAutomaticos.List.Current.Erro_Listar.DataFechoAutomatico))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableRecordsErrosAutomaticos.List.Current.Erro_Listar.DataCriacao) = NullDate(),\"-\",Substr(TableRecordsErrosAutomaticos.List.Current.Erro_Listar.DataCriacao,0,10) )","type":"Text","functions":["If","DateTimeToDate","NullDate","Substr"]}
{"text":"If(Obtem_Erros_QuadroPrincipal.List.Current.Erros_Quadro0_Principal.DataHoraCriacao=NullDate(),\"Dados em actualizaÃ§Ã£o, por favor aguarde um momento e tente de novo.\",\"Actualizado hÃ¡ \"+DiffMinutes(Obtem_Erros_QuadroPrincipal.List.Current.Erros_Quadro0_Principal.DataHoraCriacao,CurrDateTime())+If(DiffMinutes(Obtem_Erros_QuadroPrincipal.List.Current.Erros_Quadro0_Principal.DataHoraCriacao,CurrDateTime())=1,\" minuto\",\" minutos\"))","type":"Text","functions":["If","NullDate","DiffMinutes","CurrDateTime"]}
{"text":"If(Length(TrimEnd(TrimStart(Ordem.Ordem.NumeroExterno))) <> 0,Ordem.Ordem.NumeroExterno,\"-\")","type":"Text","functions":["If","Length","TrimEnd","TrimStart"]}
{"text":"If(Length(TrimEnd(TrimStart(Recolha.Recolha.NumeroExterno))) <> 0,Recolha.Recolha.NumeroExterno,\"-\")","type":"Text","functions":["If","Length","TrimEnd","TrimStart"]}
{"text":"If(TableRecords1.List.Current.Ordem_TableRecords.DataPronto = NullDate(),\"-\",DateTimeToDate(TableRecords1.List.Current.Ordem_TableRecords.DataPronto))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.Ordem_TableRecords.DataPronto = NullDate(),\"-\",DateTimeToDate(TableRecords1.List.Current.Ordem_TableRecords.DataConsorcio))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"ToUpper(Substr(PontosVerificacaoAuditoria.List.Current.CQ_PV.Descricao,0,1))+\nToLower(Substr(PontosVerificacaoAuditoria.List.Current.CQ_PV.Descricao,1,119))","type":"Text","functions":["ToUpper","Substr","ToLower"]}
{"text":"ToUpper(Substr(PontosVerificacaoAuditoria.List.Current.PontosVerificacaoAuditoria.PVA,0,1))+\nToLower(Substr(PontosVerificacaoAuditoria.List.Current.PontosVerificacaoAuditoria.PVA,1,99))","type":"Text","functions":["ToUpper","Substr","ToLower"]}
{"text":"ToUpper(Substr(TableRecordsPV.List.Current.CQ_PV.Descricao,0,1))+\nToLower(Substr(TableRecordsPV.List.Current.CQ_PV.Descricao,1,119))","type":"Text","functions":["ToUpper","Substr","ToLower"]}
{"text":"If(DateTimeToDate(TableRecordsCQ.List.Current.CQ.DataLimiteResposta) <> NullDate(),\nDateTimeToDate(TableRecordsCQ.List.Current.CQ.DataLimiteResposta),\n\"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableRecordsCQ.List.Current.CQ.DataFinalizado) <> NullDate(),\nDateTimeToDate(TableRecordsCQ.List.Current.CQ.DataFinalizado),\n\"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableRecordsCQ.List.Current.CQ.DataCriacao) <> NullDate(),\nDateTimeToDate(TableRecordsCQ.List.Current.CQ.DataCriacao),\n\"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"Substr(TableRecords1.List.Current.stSearchResults.Observacao, 0, 30) + If(Length(TableRecords1.List.Current.stSearchResults.Observacao) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDecimal(TR_Pesquisa.List.Current.Despesa.Valor,2,\",\",\".\") + If(TR_Pesquisa.List.Current.Despesa.MoedaOriginal <> NullIdentifier(), NewLine() + \"(\" + TR_Pesquisa.List.Current.Despesa.ValorOriginal + \" \" + TR_Pesquisa.List.Current.Moeda.Codigo + \")\", \"\")","type":"Text","functions":["FormatDecimal","If","NullIdentifier","NewLine"]}
{"text":"NewDate(TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,0,4)), TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,4,2)), TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,6,2)))","type":"Date","functions":["NewDate","TextToInteger","Substr"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.LOSGR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",FormatDecimal(GetMaterialRef.List.Current.MATERIAL.MBEW_STPRS,2,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier","FormatDecimal"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.AWSLS)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.KOSGR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.ORIGIN_GROUP.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.PEINH)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MBEW_VPRSV)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BKLAS)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.TAX.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MAKTX)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MATNR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.NSMNG)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.LPMIN)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MAMNG)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.LPMAX)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.PALLET.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_UNIT.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MEINS)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.LHMG1)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.BULK_STORAGE.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_SECTION.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_TYPE_2.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_TYPE.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"A\",\n\"A - Unidade de medida de saÃ­da\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"B\",\n\"B - Unidade de pedido\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"K\",\n\"K - Unidade de medida bÃ¡sica se nenhuma outra UM indicada\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"L\",\n\"L - Unidade de medida WM\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"M\",\n\"M - Unidade de medida WM tambÃ©m em caso de outra UM em doc.ref.\",\nIf(GetMaterialRef.List.Current.MATERIAL.VOMEM = \"N\",\n\"N - UM bÃ¡sica tambÃ©m em outra UM no documento de referÃªncia\",\"\"))))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.WZEIT)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MTVFP)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.VINT22)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.VINT2)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.VINT12)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.VINT1)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.VRMOD = \"1\",\n\"1 - Exclusivamente compensaÃ§Ã£o regressiva\",\nIf(GetMaterialRef.List.Current.MATERIAL.VRMOD = \"2\",\n\"2 - CompensaÃ§Ã£o regressiva/progressiva\",\nIf(GetMaterialRef.List.Current.MATERIAL.VRMOD = \"3\",\n\"3 - Exclusivamente compensaÃ§Ã£o progressiva\",\nIf(GetMaterialRef.List.Current.MATERIAL.VRMOD = \"4\",\n\"4 - CompensaÃ§Ã£o progressiva/regressiva\",\"\"))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.STRGR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.PERKZ=\"P\",\n\"P - PerÃ­odo conforme variante exercÃ­cio\",\nIf(GetMaterialRef.List.Current.MATERIAL.PERKZ=\"M\",\n\"M - Por mÃªs\",\nIf(GetMaterialRef.List.Current.MATERIAL.PERKZ=\"W\",\n\"W - Por semana\",\nIf(GetMaterialRef.List.Current.MATERIAL.PERKZ=\"T\",\n\"T - Por dia\",\nIf(GetMaterialRef.List.Current.MATERIAL.PERKZ=\"0\",\n\"0 - Valor inicial\",\"\")))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.SHZET2)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG2 = \"0\",\n\"0 - NÃ£o considerar margem de seguranÃ§a\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG2 = \"1\",\n\"1 - Margem de seguranÃ§a p/necs.indep.\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG2 = \"2\",\n\"2 - Margem segur.p/todas necessidades\",\"\")))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.SHZET)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG = \"0\",\n\"0 - NÃ£o considerar margem de seguranÃ§a\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG = \"1\",\n\"1 - Margem de seguranÃ§a p/necs.indep.\",\nIf(GetMaterialRef.List.Current.MATERIAL.SHFLG = \"2\",\n\"2 - Margem segur.p/todas necessidades\",\"\")))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.EISLO)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.EISBE)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.FHORI)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.PLIFZ)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.WEBAZ)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.SOBSL2)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_LOCATION_2.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.SPECIAL_PROCUREMENT.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_LOCATION.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.BESKZ = \"E\",\n\"E - FabricaÃ§Ã£o prÃ³pria\",\nIf(GetMaterialRef.List.Current.MATERIAL.BESKZ = \"F\",\n\"F - Suprimento externo\",\nIf(GetMaterialRef.List.Current.MATERIAL.BESKZ = \"0\",\n\"0 - Nenhum suprimento\",\nIf(GetMaterialRef.List.Current.MATERIAL.BESKZ = \"X\",\n\"X - Ambos os tipos de suprimento\",\"\"))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTRF2)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTRF)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTMI2)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTMI)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTFE)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.BSTMA)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MRP_CONTROLLER.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.FXHOR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"DY\",\n\"DY - CÃ¡lculo dinÃ¢mico de planejamento\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"EX\",\n\"EX - CÃ¡lculo exato do tamanho de lote\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"FS\",\n\"FS - Fixo/partiÃ§Ã£o\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"FX\",\n\"FX - CÃ¡lculo fixo do tamanho de lote\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"GR\",\n\"GR - Regr.cÃ¡lc.tam.lotes seg.Groff\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"HB\",\n\"HB - ReposiÃ§Ã£o atÃ© estoque mÃ¡ximo\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"MB\",\n\"MB - Tamanho de lote mensal\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"TB\",\n\"TB - Tam.lote periÃ³d.anÃ¡logo perÃ­odoContabil.\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"PK\",\n\"PK - Tam.lote periÃ³d.seg.calendÃ¡rio planej.\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"SP\",\n\"SP - MÃ©todo de custos equilibrados\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"TB\",\n\"TB - Tamanho de lote diÃ¡rio\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"W2\",\n\"W2 - Semana - 2\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"WB\",\n\"WB - Tamanho de lote semanal\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"WI\",\n\"WI - Tamanho de lote econÃ³mico variÃ¡vel\",\nIf(GetMaterialRef.List.Current.MATERIAL.DISLS = \"ZQ\",\n\"ZQ - Tamanho de lote quinzenal\",\"\")))))))))))))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MRP_TYPE.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.IPRKZ = \"M\",\"MÃªs\", \n  If(GetMaterialRef.List.Current.MATERIAL.IPRKZ = \"S\", \"Semana\", \n    If(GetMaterialRef.List.Current.MATERIAL.IPRKZ = \"A\", \"Ano\", \n      If(GetMaterialRef.List.Current.MATERIAL.IPRKZ = \"D\", \"Dia\",\"\")))))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MHDHB)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MHDRZ)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.RAUBE)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.CodPalete)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.NUMTP)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MAGRV)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.GEWEI)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.EAN11)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MTPOS_MARA)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",FormatDecimal(GetMaterialRef.List.Current.MATERIAL.BRGEW,2,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier","FormatDecimal"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL_GROUP.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.PRODUCTION_PROFILE.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.SFEPR)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.PRODUCTION_SCHEDULER.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",FormatDecimal(GetMaterialRef.List.Current.MATERIAL.KAUSF,2,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier","FormatDecimal"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.ALTSL=\"0\",\n\"0 - SelecÃ§Ã£o por quantid.ordem\",\nIf(GetMaterialRef.List.Current.MATERIAL.ALTSL=\"1\",\n\"1 - SeleÃ§.por data explos.necess.\",\nIf(GetMaterialRef.List.Current.MATERIAL.ALTSL=\"2\",\n\"2 - SelecÃ§Ã£o por versÃ£o de produÃ§Ã£o\",\nIf(GetMaterialRef.List.Current.MATERIAL.ALTSL=\"3\",\n\"3 - SelecÃ§Ã£o obrigatÃ³ria por versÃ£o de produÃ§Ã£o\",\"\"))))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.STORAGE_LOCATION_3.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.DZEIT)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.PRFRQ)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_CARGOHEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_WIDTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_DEPTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_HEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_CARGOVOLUME,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_GROSSWEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DPL_NETWEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEV_DEPTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEV_WIDTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEV_HEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEV_BOXGROSSWEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_WIDTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_DEPTH,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_HEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_DIAMETER,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_NETWEIGHT,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.ST_DEC_VOLUME,3,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RefMaterialId=NullIdentifier(),\"\",FormatDecimal(GetRefMaterial.List.Current.MATERIAL.BASICSALESPRICE,2,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.LABEL_FORM.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.LABEL_TYPE.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL.MARC_LGRAD)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",\nIf(GetMaterialRef.List.Current.MATERIAL.MTPOS_MARA = \"ZIMP\", \n\"ZIMP - Vasilhame implicado\", \nIf(GetMaterialRef.List.Current.MATERIAL.MTPOS_MARA = \"LEER\", \n\"LEER - Vasilhame\", \"\"))\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.MATERIAL_TYPE.PriceControl + \" - \" + GetMaterialRef.List.Current.MATERIAL_TYPE.PriceControlText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",FormatDecimal(GetMaterialRef.List.Current.MATERIAL.VERPR,2,Site.DecimalSeparator,Site.GroupSeparator))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier","FormatDecimal"]}
{"text":"If(IntegerToIdentifier(MaterialER.Record.MATERIAL.MaterialRefId)=NullIdentifier(),\"\",GetMaterialRef.List.Current.PURCHASING_GROUP.LongText)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"Substr(TRConsultor.List.Current.StructurePesquisa.Descricao, 0, 40) + If(Length(TRConsultor.List.Current.StructurePesquisa.Descricao) > 40, \"...\",  \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TRFornecedor.List.Current.StructurePesquisa.Descricao, 0, 40) + If(Length(TRFornecedor.List.Current.StructurePesquisa.Descricao) > 40, \"...\",  \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TR_Ficheiros.List.Current.Files.Descricao, 0, 80) + If(Length(TR_Ficheiros.List.Current.Files.Descricao) > 80, \"...\",  \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDecimal(TR_Pesquisa.List.Current.Despesa.Valor,2,\",\",\".\") + If(TR_Pesquisa.List.Current.Despesa.MoedaOriginal <> NullIdentifier(), NewLine() + \"(\" + TR_Pesquisa.List.Current.Despesa.ValorOriginal + \" \" + TR_Pesquisa.List.Current.Moeda.Codigo + \")\", \"\")\n\n","type":"Text","functions":["FormatDecimal","If","NullIdentifier","NewLine"]}
{"text":"NewTime(Hour(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Minute(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio),0)  ","type":"Time","functions":["NewTime","Hour","Minute"]}
{"text":"NewTime(Hour(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Minute(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim),0)  ","type":"Time","functions":["NewTime","Hour","Minute"]}
{"text":"NewDate(Year(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Month(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Day(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio))  ","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Month(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Day(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim))  ","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewTime(Hour(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Minute(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio),0)  ","type":"Time","functions":["NewTime","Hour","Minute"]}
{"text":"NewTime(Hour(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Minute(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim),0)  ","type":"Time","functions":["NewTime","Hour","Minute"]}
{"text":"NewDate(Year(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Month(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Day(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio))  ","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Month(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Day(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim))  ","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(TR_Pesquisa.List.Current.stSearchResults.DataIda = TR_Pesquisa.List.Current.stSearchResults.DataVolta and TR_Pesquisa.List.Current.stSearchResults.CustoRealAlojamento > 0,FormatDecimal(TR_Pesquisa.List.Current.stSearchResults.CustoRealAlojamento,2,\",\",\".\"),\nIf (TR_Pesquisa.List.Current.stSearchResults.CustoRealAlojamento > 0,  \nFormatDecimal((TR_Pesquisa.List.Current.stSearchResults.CustoRealAlojamento / DiffDays(TR_Pesquisa.List.Current.stSearchResults.DataIda,TR_Pesquisa.List.Current.stSearchResults.DataVolta)), 2, \",\", \".\"), \"\") )","type":"Text","functions":["If","FormatDecimal","DiffDays"]}
{"text":"Replace(Replace(TrimEnd(\nIf(ShowRecord1.Record.Viagem.Voo, \"Voo \", \"\") +\nIf(ShowRecord1.Record.Viagem.Alojamento, \"Alojamento \", \"\") +\nIf(ShowRecord1.Record.Viagem.AluguerViatura, \"Aluguer_Viatura \", \"\") +\nIf(ShowRecord1.Record.Viagem.ViaturaRoff, \"Viatura_Roff \", \"\")\n), \" \", \", \"), \"_\", \" \")","type":"Text","functions":["Replace","TrimEnd","If"]}
{"text":"If((DateTimeToDate(ShowRecord1.Record.Ocorrencias.DataResolucao) = NullDate()),\"\",ShowRecord1.Record.Ocorrencias.DataResolucao)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"Substr(TR_Ocorrencias.List.Current.Ocorrencias.Descricao, 0, 30) + If(Length(TR_Ocorrencias.List.Current.Ocorrencias.Descricao) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"TR_Ocorrencias.List.Current.Ocorrencias.Pendencia + If((TR_Ocorrencias.List.Current.Ocorrencias.Status = 1),\"\",(NewLine() + Day(TR_Ocorrencias.List.Current.Ocorrencias_Log.DataHora) + \"/\" + Month(TR_Ocorrencias.List.Current.Ocorrencias_Log.DataHora) + \"/\" + Year(TR_Ocorrencias.List.Current.Ocorrencias_Log.DataHora) + NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataResponsabilidade + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataResponsabilidade,1,\",\",\".\") + \"h)\"))","type":"Text","functions":["If","NewLine","Day","Month","Year","FormatDecimal"]}
{"text":"Day(List.List.Current.Ocorrencias.DataResolucao) + \"/\" + Month(List.List.Current.Ocorrencias.DataResolucao) + \"/\" + Year(List.List.Current.Ocorrencias.DataResolucao) \n","type":"Text","functions":["Day","Month","Year"]}
{"text":"List.List.Current.Ocorrencias.Pendencia + If(List.List.Current.Ocorrencias.Status = 1,\"\", \"(\" + DiffDays(List.List.Current.Ocorrencias.Data,CurrDate()) + \")\")","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"Substr(List.List.Current.Ocorrencias.Descricao,0,50) + If(Length(List.List.Current.Ocorrencias.Descricao)>50,\" ... \",\"\") ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Day(List.List.Current.Ocorrencias.Data) + \"/\" + Month(List.List.Current.Ocorrencias.Data) + \"/\" + Year(List.List.Current.Ocorrencias.Data)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao) + \"/\" + Month(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao) + \"/\" + Year(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(TR_Ocorrencias.List.Current.Ocorrencias.Data) + \"/\" + Month(TR_Ocorrencias.List.Current.Ocorrencias.Data) + \"/\" + Year(TR_Ocorrencias.List.Current.Ocorrencias.Data) + If((TR_Ocorrencias.List.Current.Ocorrencias.Status = 1),\"\",(NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataCriacao + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataCriacao,1,\",\",\".\") + \"h)\"))","type":"Text","functions":["Day","Month","Year","If","NewLine","FormatDecimal"]}
{"text":"If(Length(ListRecords2.List.Current.FRM_POST.Text) > 200, Substr(ListRecords2.List.Current.FRM_POST.Text,0,197) + \"...\", ListRecords2.List.Current.FRM_POST.Text)","type":"Text","functions":["If","Length","Substr"]}
{"text":"DateToText(If(GetPeriodInfo.List.Current.SKE_EVALUATION_PERIOD.Revision1StartDate <> NullDate(), GetPeriodInfo.List.Current.SKE_EVALUATION_PERIOD.Revision1StartDate, GetPeriodInfo.List.Current.SKE_EVALUATION_PERIOD.Revision2StartDate))","type":"Text","functions":["DateToText","If","NullDate"]}
{"text":"Substr(TableRecords1.List.Current.stRelPrevisaoFacturacaoTM.TextoVendas, 0, 30) + If(Length(TableRecords1.List.Current.stRelPrevisaoFacturacaoTM.TextoVendas) > 30, \"...\", \"\") ","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.Total = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.Total)), 2, \",\", \".\") ","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.TotalCliente = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.TotalCliente)), 2, \",\", \".\") ","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.TotalProjecto = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.TotalProjecto)), 2, \",\", \".\") ","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.TotalAno = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.TotalAno)), 2, \",\", \".\") ","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.TotalMes = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.TotalMes)\n), 2, \",\", \".\") ","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.TotalConsultor = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.TotalConsultor)), 2, \",\", \".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If((TableRecords1.List.Current.RelatorioProjectosPorResp.Horas = 0),\"\",TableRecords1.List.Current.RelatorioProjectosPorResp.Horas)), 2, \",\", \".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If((((TableRecords1.List.CurrentRowNumber <> 0) and (TableRecords1.List.Current.RelatorioProjectosPorResp.Data = TableRecords1.List[TableRecords1.List.CurrentRowNumber - 1].RelatorioProjectosPorResp.Data) and (TableRecords1.List.Current.RelatorioProjectosPorResp.Projecto = TableRecords1.List[TableRecords1.List.CurrentRowNumber - 1].RelatorioProjectosPorResp.Projecto) and (TableRecords1.List.Current.RelatorioProjectosPorResp.Cliente = TableRecords1.List[TableRecords1.List.CurrentRowNumber - 1].RelatorioProjectosPorResp.Cliente)) or ((Year(TableRecords1.List.Current.RelatorioProjectosPorResp.Data) + \" / \" + Month(TableRecords1.List.Current.RelatorioProjectosPorResp.Data)) = \"1900 / 1\")),\"\",(Year(TableRecords1.List.Current.RelatorioProjectosPorResp.Data) + \" / \" + Month(TableRecords1.List.Current.RelatorioProjectosPorResp.Data)))","type":"Text","functions":["If","Year","Month"]}
{"text":"Substr(lrObservacoes.List.Current.Observacoes.Observacao,0, 80 - Length(lrObservacoes.List.Current.Observacoes.ObsDate + \" \" + lrObservacoes.List.Current.RoffUser.DisplayName + \" - \")) + If(Length(lrObservacoes.List.Current.Observacoes.ObsDate + \" \" + lrObservacoes.List.Current.RoffUser.DisplayName + \" - \" + lrObservacoes.List.Current.Observacoes.Observacao) > 80, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(TR_Descricaomarketing.List.Current.stRelDescricaoMarketing.Observacoes, 0, 30) + If(Length(TR_Descricaomarketing.List.Current.stRelDescricaoMarketing.Observacoes) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TR_Descricaomarketing.List.Current.stRelDescricaoMarketing.DescricaoParaMarketing, 0, 30) + If(Length(TR_Descricaomarketing.List.Current.stRelDescricaoMarketing.DescricaoParaMarketing) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TableRecords1.List.Current.stRelPrevisaoFacturacaoPF.TextoVendas, 0, 30) + If(Length(TableRecords1.List.Current.stRelPrevisaoFacturacaoPF.TextoVendas) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(TableRecords1.List.Current.AUDIT.Duration)/1000-60*Trunc(TableRecords1.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(TableRecords1.List.Current.AUDIT.Duration)/1000-60*Trunc(TableRecords1.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras31 > 0, TableRecords1.List.Current.Horas.TotalHoras31, If(rlFeriados[10].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 10)) =  0 or DayOfWeek(AddDays(Data_inicio, 10)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras10 > 0, TableRecords1.List.Current.Horas.TotalHoras10, If(rlFeriados[9].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 9)) =  0 or DayOfWeek(AddDays(Data_inicio, 9)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras9 > 0, TableRecords1.List.Current.Horas.TotalHoras9, If(rlFeriados[8].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 8)) =  0 or DayOfWeek(AddDays(Data_inicio, 8)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras8 > 0, TableRecords1.List.Current.Horas.TotalHoras8, If(rlFeriados[7].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 7)) =  0 or DayOfWeek(AddDays(Data_inicio, 7)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras7 > 0, TableRecords1.List.Current.Horas.TotalHoras7, If(rlFeriados[6].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 6)) =  0 or DayOfWeek(AddDays(Data_inicio, 6)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras6 > 0, TableRecords1.List.Current.Horas.TotalHoras6, If(rlFeriados[5].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 5)) =  0 or DayOfWeek(AddDays(Data_inicio, 5)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras5 > 0, TableRecords1.List.Current.Horas.TotalHoras5, If(rlFeriados[4].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 4)) =  0 or DayOfWeek(AddDays(Data_inicio, 4)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras4 > 0, TableRecords1.List.Current.Horas.TotalHoras4, If(rlFeriados[3].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 3)) =  0 or DayOfWeek(AddDays(Data_inicio, 3)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras3 > 0, TableRecords1.List.Current.Horas.TotalHoras3, If(rlFeriados[2].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 2)) =  0 or DayOfWeek(AddDays(Data_inicio, 2)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(TableRecords1.List.Current.Horas.TotalHoras2 > 0, TableRecords1.List.Current.Horas.TotalHoras2, If(rlFeriados[1].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 1)) =  0 or DayOfWeek(AddDays(Data_inicio, 1)) = 6, \"\", 0))","type":"Text","functions":["If","DayOfWeek","AddDays"]}
{"text":"If(AddDays(Data_inicio, 10) = Data_fim, \nIf(rlFeriados[10].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 10)) =  0 or DayOfWeek(AddDays(Data_inicio, 10)) = 6, Day(AddDays(Data_inicio, 10)), \"\"), \"\")","type":"Text","functions":["If","AddDays","DayOfWeek","Day"]}
{"text":"If(AddDays(Data_inicio, 10) = Data_fim, If(not rlFeriados[10].Boolean.Bool and DayOfWeek(AddDays(Data_inicio, 10)) <>  0 and DayOfWeek(AddDays(Data_inicio, 10)) <> 6, Day(AddDays(Data_inicio, 10)), \"\"), \"\")","type":"Text","functions":["If","AddDays","DayOfWeek","Day"]}
{"text":"If(Month(AddDays(Data_inicio, 9)) = Month(Data_inicio), \nIf(rlFeriados[9].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 9)) =  0 or DayOfWeek(AddDays(Data_inicio, 9)) = 6, Day(AddDays(Data_inicio, 9)), \"\"), \"\")","type":"Text","functions":["If","Month","AddDays","DayOfWeek","Day"]}
{"text":"If(Month(AddDays(Data_inicio, 9)) = Month(Data_inicio), If(not rlFeriados[9].Boolean.Bool and DayOfWeek(AddDays(Data_inicio, 9)) <>  0 and DayOfWeek(AddDays(Data_inicio, 9)) <> 6, Day(AddDays(Data_inicio, 9)), \"\"), \"\")","type":"Text","functions":["If","Month","AddDays","DayOfWeek","Day"]}
{"text":"If(Month( AddDays(Data_inicio, 8)) = Month(Data_inicio), \nIf(rlFeriados[8].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 8)) =  0 or DayOfWeek(AddDays(Data_inicio, 8)) = 6, Day(AddDays(Data_inicio, 8)), \"\"), \"\")","type":"Text","functions":["If","Month","AddDays","DayOfWeek","Day"]}
{"text":"If(Month( AddDays(Data_inicio, 8)) = Month(Data_inicio), If(not rlFeriados[8].Boolean.Bool and DayOfWeek(AddDays(Data_inicio, 8)) <>  0 and DayOfWeek(AddDays(Data_inicio, 8)) <> 6, Day(AddDays(Data_inicio, 8)), \"\"), \"\")","type":"Text","functions":["If","Month","AddDays","DayOfWeek","Day"]}
{"text":"If(rlFeriados[7].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 7)) =  0 or DayOfWeek(AddDays(Data_inicio, 7)) = 6, Day(AddDays(Data_inicio, 7)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[7].Boolean.Bool and DayOfWeek(AddDays(Data_inicio, 7)) <>  0 and DayOfWeek(AddDays(Data_inicio, 7)) <> 6, Day(AddDays(Data_inicio, 7)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[6].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 6)) =  0 or DayOfWeek(AddDays(Data_inicio, 6)) = 6, Day(AddDays(Data_inicio, 6)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[6].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  6)) <>  0 and DayOfWeek(AddDays(Data_inicio, 6)) <> 6, Day(AddDays(Data_inicio,  6)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[5].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 5)) =  0 or DayOfWeek(AddDays(Data_inicio, 5)) = 6, Day(AddDays(Data_inicio, 5)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[5].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  5)) <>  0 and DayOfWeek(AddDays(Data_inicio, 5)) <> 6, Day(AddDays(Data_inicio,  5)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[4].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 4)) =  0 or DayOfWeek(AddDays(Data_inicio, 4)) = 6, Day(AddDays(Data_inicio, 4)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[4].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  4)) <>  0 and DayOfWeek(AddDays(Data_inicio, 4)) <> 6, Day(AddDays(Data_inicio,  4)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[3].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 3)) =  0 or DayOfWeek(AddDays(Data_inicio, 3)) = 6, Day(AddDays(Data_inicio, 3)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[3].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  3)) <>  0 and DayOfWeek(AddDays(Data_inicio, 3)) <> 6, Day(AddDays(Data_inicio,  3)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[2].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 2)) =  0 or DayOfWeek(AddDays(Data_inicio, 2)) = 6, Day(AddDays(Data_inicio, 2)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[2].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  2)) <>  0 and DayOfWeek(AddDays(Data_inicio, 2)) <> 6, Day(AddDays(Data_inicio,  2)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[1].Boolean.Bool or DayOfWeek(AddDays(Data_inicio, 1)) =  0 or DayOfWeek(AddDays(Data_inicio, 1)) = 6, Day(AddDays(Data_inicio, 1)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(not rlFeriados[1].Boolean.Bool and DayOfWeek(AddDays(Data_inicio,  1)) <>  0 and DayOfWeek(AddDays(Data_inicio, 1)) <> 6, Day(AddDays(Data_inicio,  1)), \"\") ","type":"Text","functions":["If","DayOfWeek","AddDays","Day"]}
{"text":"If(rlFeriados[0].Boolean.Bool or DayOfWeek(Data_inicio) =  0 or DayOfWeek(Data_inicio) = 6, Day(Data_inicio), \"\") ","type":"Text","functions":["If","DayOfWeek","Day"]}
{"text":"If(not rlFeriados[0].Boolean.Bool and DayOfWeek(Data_inicio) <>  0 and DayOfWeek(Data_inicio) <> 6, Day(Data_inicio), \"\") ","type":"Text","functions":["If","DayOfWeek","Day"]}
{"text":"If(DayOfWeek(TableRecords1.List.Current.Actividades.Data) = 0, \"D\",\nIf(DayOfWeek(TableRecords1.List.Current.Actividades.Data) = 6, \"S\", \nIf(TableRecords1.List.Current.Feriados.Id <> NullIdentifier(), \"F\", \"\"))) ","type":"Text","functions":["If","DayOfWeek","NullIdentifier"]}
{"text":"DateTimeToDate(TR_Ocorrencias.List.Current.StructIdDataHora.DataHora) + NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataResponsabilidade + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataResponsabilidade,1,\",\",\".\") + \"h)\"","type":"Text","functions":["DateTimeToDate","NewLine","FormatDecimal"]}
{"text":"DateTimeToDate(TR_Ocorrencias.List.Current.StructProcuraOcorrencias.OcorrenciasData) + NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataCriacao + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataCriacao,1,\",\",\".\") + \"h)\"","type":"Text","functions":["DateTimeToDate","NewLine","FormatDecimal"]}
{"text":"DateTimeToDate(TabelaOcorrencias.List.Current.StructIdDataHora.DataHora) + \" (\" + DiffDays(DateTimeToDate(TabelaOcorrencias.List.Current.StructIdDataHora.DataHora),CurrDate()) + \")\"","type":"Text","functions":["DateTimeToDate","DiffDays","CurrDate"]}
{"text":"DateTimeToDate(TabelaOcorrencias.List.Current.Ocorrencias.Data) + \" (\" + DiffDays(DateTimeToDate(TabelaOcorrencias.List.Current.Ocorrencias.Data),CurrDate()) + \")\"","type":"Text","functions":["DateTimeToDate","DiffDays","CurrDate"]}
{"text":"If(TableRecords.List.Current.StructWith1Date.AttributeDate = NullDate(), \"\", FormatDateTime(TableRecords.List.Current.StructWith1Date.AttributeDate, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(QueryArchiveLocation.List.Current.USER_MASTER2_2.Id <> NullIdentifier(), \nQueryArchiveLocation.List.Current.USER_MASTER2_2.Name + \" em \" + DateTimeToDate(QueryArchiveLocation.List.Current.DOCUMENT_ARCHIVE_LOCATION.LastChangedDate), \"\")","type":"Text","functions":["If","NullIdentifier","DateTimeToDate"]}
{"text":"If(QueryArchiveLocation.List.Current.USER_MASTER2.Id <> NullIdentifier(), \nQueryArchiveLocation.List.Current.USER_MASTER2.Name + \" em \" + DateTimeToDate(QueryArchiveLocation.List.Current.DOCUMENT_ARCHIVE_LOCATION.CreationDate), \"\")","type":"Text","functions":["If","NullIdentifier","DateTimeToDate"]}
{"text":"\"<a href='#'><img src='\" + If(ToUpper(Substr(ListImages.List.Current.ScannerImages.Link4, Length(ListImages.List.Current.ScannerImages.Link4) - 3, Length(ListImages.List.Current.ScannerImages.Link4))) <> \"PDF\", ListImages.List.Current.ScannerImages.Link4, \"img\\AcrobatPDF_icon.jpg\") + \"' width='\" + GlobalSetting_GetImageSizePx.Value   + \"' alt='\"+ ListImages.List.Current.ScannerImages.FileName4 + \"' onclick='openWindowNoControl(\"\"\" + EncodeJavaScript(ListImages.List.Current.ScannerImages.Link4) + \"\"\");'></a>\"","type":"Text","functions":["If","ToUpper","Substr","Length","EncodeJavaScript"]}
{"text":"\"<a href='#'><img src='\" + If(ToUpper(Substr(ListImages.List.Current.ScannerImages.Link3, Length(ListImages.List.Current.ScannerImages.Link3) - 3, Length(ListImages.List.Current.ScannerImages.Link3))) <> \"PDF\", ListImages.List.Current.ScannerImages.Link3, \"img\\AcrobatPDF_icon.jpg\") + \"' width='\" + GlobalSetting_GetImageSizePx.Value   + \"' alt='\"+ ListImages.List.Current.ScannerImages.FileName3 + \"' onclick='openWindowNoControl(\"\"\" + EncodeJavaScript(ListImages.List.Current.ScannerImages.Link3) + \"\"\");'></a>\"\n\n","type":"Text","functions":["If","ToUpper","Substr","Length","EncodeJavaScript"]}
{"text":"\"<a href='#'><img src='\" + If(ToUpper(Substr(ListImages.List.Current.ScannerImages.Link2, Length(ListImages.List.Current.ScannerImages.Link2) - 3, Length(ListImages.List.Current.ScannerImages.Link2))) <> \"PDF\", ListImages.List.Current.ScannerImages.Link2, \"img\\AcrobatPDF_icon.jpg\") + \"' width='\" + GlobalSetting_GetImageSizePx.Value   + \"' alt='\"+ ListImages.List.Current.ScannerImages.FileName2 + \"' onclick='openWindowNoControl(\"\"\" + EncodeJavaScript(ListImages.List.Current.ScannerImages.Link2) + \"\"\");'></a>\"\n","type":"Text","functions":["If","ToUpper","Substr","Length","EncodeJavaScript"]}
{"text":"\"<a href='#'><img src='\" + If(ToUpper(Substr(ListImages.List.Current.ScannerImages.Link1, Length(ListImages.List.Current.ScannerImages.Link1) - 3, Length(ListImages.List.Current.ScannerImages.Link1))) <> \"PDF\",ListImages.List.Current.ScannerImages.Link1, \"img\\AcrobatPDF_icon.jpg\") + \"' width='\" + GlobalSetting_GetImageSizePx.Value   + \"' alt='\"+ ListImages.List.Current.ScannerImages.FileName1 + \"' onclick='openWindowNoControl(\"\"\" + EncodeJavaScript(ListImages.List.Current.ScannerImages.Link1) + \"\"\");'></a>\"","type":"Text","functions":["If","ToUpper","Substr","Length","EncodeJavaScript"]}
{"text":"\"<a href='#'><img src='\" + If(ToUpper(Substr(ListImages.List.Current.ScannerImages.Link1, Length(ListImages.List.Current.ScannerImages.Link1) - 3, Length(ListImages.List.Current.ScannerImages.Link1))) <> \"PDF\", ListImages.List.Current.ScannerImages.Link1, \"img\\AcrobatPDF_icon.jpg\") + \"' width='\" + GlobalSetting_GetImageSizePx.Value   + \"' alt='\"+ ListImages.List.Current.ScannerImages.FileName1 + \"' onclick='openWindowNoControl(\"\"\" + EncodeJavaScript(ListImages.List.Current.ScannerImages.Link1) + \"\"\");'></a>\"","type":"Text","functions":["If","ToUpper","Substr","Length","EncodeJavaScript"]}
{"text":"Substr(TR_Comentarios.List.Current.stRelComentariosProjectos.Comentario, 0, 30) + If(Length(TR_Comentarios.List.Current.stRelComentariosProjectos.Comentario) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If((TableRecords1.List.Current.RelatorioTrabalhoRemoto.Data = NullDate()),\"\",(Year(TableRecords1.List.Current.RelatorioTrabalhoRemoto.Data) + \"/\" + Month(TableRecords1.List.Current.RelatorioTrabalhoRemoto.Data)))","type":"Text","functions":["If","NullDate","Year","Month"]}
{"text":"If((((TableRecords4.List.CurrentRowNumber <> 0) and (Year(TableRecords4.List.Current.RelatorioTrabalhoRemoto.Data) = Year(TableRecords4.List[TableRecords4.List.CurrentRowNumber - 1].RelatorioTrabalhoRemoto.Data)) and (Month(TableRecords4.List.Current.RelatorioTrabalhoRemoto.Data) = Month(TableRecords4.List[TableRecords4.List.CurrentRowNumber - 1].RelatorioTrabalhoRemoto.Data)) and (TableRecords4.List.Current.RelatorioTrabalhoRemoto.Projecto = TableRecords4.List[TableRecords4.List.CurrentRowNumber - 1].RelatorioTrabalhoRemoto.Projecto)) or (TableRecords4.List.Current.RelatorioTrabalhoRemoto.Data = NullDate())),\"\",(Year(TableRecords4.List.Current.RelatorioTrabalhoRemoto.Data) + \"/\" + Month(TableRecords4.List.Current.RelatorioTrabalhoRemoto.Data)))","type":"Text","functions":["If","Year","Month","NullDate"]}
{"text":"If((TableRecords1.List.Current.RelatorioTemposNaoDebitados.Data = NullDate()),\"\",(Year(TableRecords1.List.Current.RelatorioTemposNaoDebitados.Data) + \"/\" + Month(TableRecords1.List.Current.RelatorioTemposNaoDebitados.Data)))","type":"Text","functions":["If","NullDate","Year","Month"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.TotalAno, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.SubTotal, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Dez, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Nov, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Out, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Set, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Ago, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Jul, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Jun, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Mai, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Abr, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Mar, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Fev, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Jan, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") \n + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"FormatDecimal(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Jan, TextToInteger(If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"1\", \"4\")), \",\", \".\") + If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.Tempos = \"Percentagem\", \"%\", \"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"If(TableRecords1.List.Current.stRelTemposTrabVsEstimados.SaldoInicial = \"\", \"\", FormatDecimal(TextToDecimal(Replace(TableRecords1.List.Current.stRelTemposTrabVsEstimados.SaldoInicial, \",\", \".\")), 4, \",\", \".\"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(Length( TableRecordsActivity.List.Current.OfferActiveStateData_WS.Description) > 40, Substr(TableRecordsActivity.List.Current.OfferActiveStateData_WS.Description,0,40)+\"...\", TableRecordsActivity.List.Current.OfferActiveStateData_WS.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(AgentContacts.AgentRecentItems.Remarks)> 300,Substr(AgentContacts.AgentRecentItems.Remarks,0,300) + \"...\",AgentContacts.AgentRecentItems.Remarks) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"TrimStart(TrimEnd(ShowRecordClubCardOwner.Record.CustomerStateData_WS.AddressLine1)) + \nIf(TrimStart(TrimEnd(ShowRecordClubCardOwner.Record.CustomerStateData_WS.AddressLine2))<>\"\",TrimStart(TrimEnd(ShowRecordClubCardOwner.Record.CustomerStateData_WS.AddressLine2)) + \", \",\"\")","type":"Text","functions":["TrimStart","TrimEnd","If"]}
{"text":"If(Length(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend)<> 0, \"$ \" + \nSubstr(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend,0,Length(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend)-2) + \n\".\" + \nSubstr(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend, Length(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend)-2, \nLength(RecordListHouseholdState.HouseholdStateData_WS.CurrentSpend)),\"\")\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"\n\nTrimStart(TrimEnd(ShowRecordOwner.Record.CustomerStateData_WS.AddressLine1)) + \nIf(TrimStart(TrimEnd(ShowRecordOwner.Record.CustomerStateData_WS.AddressLine2))<>\"\",TrimStart(TrimEnd(ShowRecordOwner.Record.CustomerStateData_WS.AddressLine2)) + \", \",\"\")","type":"Text","functions":["TrimStart","TrimEnd","If"]}
{"text":"If(Length(CurrentDay.CalendarWeekDay.CalendarSlots.Current.CalendarSlot.ShopRL.Current.CalendarShop.Observations)>30,Concat(Substr(CurrentDay.CalendarWeekDay.CalendarSlots.Current.CalendarSlot.ShopRL.Current.CalendarShop.Observations,0,30),\"...\"),CurrentDay.CalendarWeekDay.CalendarSlots.Current.CalendarSlot.ShopRL.Current.CalendarShop.Observations)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(Length(PhoneNumber)=10,Substr(PhoneNumber,0,3)+ \"-\"+Substr(PhoneNumber,3,3)+ \"-\"+Substr(PhoneNumber,6,4),PhoneNumber)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(StorePhone)=10,Substr(StorePhone,0,3) + \"-\" + Substr(StorePhone,3,3) + \"-\" + Substr(StorePhone,6,4),StorePhone)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Index(GetCustomerType.List.Current.COMMENT.Comment_Dsc,\"|\")>-1,Substr(GetCustomerType.List.Current.COMMENT.Comment_Dsc,Index(GetCustomerType.List.Current.COMMENT.Comment_Dsc,\"|\")+1,Length(GetCustomerType.List.Current.COMMENT.Comment_Dsc)-Index(GetCustomerType.List.Current.COMMENT.Comment_Dsc,\"|\")),GetCustomerType.List.Current.COMMENT.Comment_Dsc)","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"Substr(TblProductResearch.List.Current.PRODUCT_RESEARCH.Supplier_Nm,0,50)\n+If(Length(TblProductResearch.List.Current.PRODUCT_RESEARCH.Supplier_Nm)>50,\" . . .\",\"\") \n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblProductResearch.List.Current.PRODUCT_RESEARCH.Customer_Product_Dsc,0,50)\n+If(Length(TblProductResearch.List.Current.PRODUCT_RESEARCH.Customer_Product_Dsc)>50,\" . . .\",\"\") \n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblRouting.List.Current.ROUTING.Route_CC_List_Txt,0,50)\n+If(Length(TblRouting.List.Current.ROUTING.Route_CC_List_Txt)>50,\" . . .\",\"\")  \n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblRouting.List.Current.ROUTING.Route_To_List_Txt,0,50)\n+If(Length(TblRouting.List.Current.ROUTING.Route_To_List_Txt)>50,\" . . .\",\"\")  \n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblSupplier.List.Current.CBRAND_SUPPLIER.External_Id,0,50)\n+If(Length(TblSupplier.List.Current.CBRAND_SUPPLIER.External_Id)>50,\" . . .\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TbPRScript.List.Current.PRODUCT_REQUEST_SCRIPTS.Response_Script,0,50)\n+If(Length(TbPRScript.List.Current.PRODUCT_REQUEST_SCRIPTS.Response_Script)>50,\" . . .\",\"\") ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblRouting.List.Current.ROUTING.Route_CC_List_Txt,0,50)\n+If(Length(TblRouting.List.Current.ROUTING.Route_CC_List_Txt)>50,\" . . .\",\"\")  \n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TblRouting.List.Current.ROUTING.Route_To_List_Txt,0,50)\n+If(Length(TblRouting.List.Current.ROUTING.Route_To_List_Txt)>50,\" . . .\",\"\")  \n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(ShowRecordPopup.Record.SHOPPER.Extension_Additional_Nbr)>0,Concat(\"x\",ShowRecordPopup.Record.SHOPPER.Extension_Additional_Nbr),\"\")","type":"Text","functions":["If","Length","Concat"]}
{"text":"If(Length(ShowRecordPopup.Record.SHOPPER.Extension_Secondary_Nbr)>0,Concat(\"x\",ShowRecordPopup.Record.SHOPPER.Extension_Secondary_Nbr),\"\")","type":"Text","functions":["If","Length","Concat"]}
{"text":"If(Length(ShowRecordPopup.Record.SHOPPER.Extension_Primary_Nbr)>0,Concat(\"x\",ShowRecordPopup.Record.SHOPPER.Extension_Primary_Nbr),\"\")","type":"Text","functions":["If","Length","Concat"]}
{"text":"If(Length(TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nm)>30,Substr(TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nm,0,30)+\"...\",TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_QUESTION.Question_Nm)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nm) > 30 , Substr(TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nm,0,30)+\"...\", TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nbr+\"-\"+TR_Versions.List.Current.SCOREMAP_SECTION.Section_Nm)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Versions.List.Current.P_QUESTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_QUESTION.Question_Dsc) > 30, Substr(TR_Versions.List.Current.P_QUESTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_QUESTION.Question_Dsc,0,30)+\"...\", TR_Versions.List.Current.P_QUESTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_QUESTION.Question_Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Versions.List.Current.P_SURVEY_SECTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_SURVEY_SECTION.Survey_Section_Nm)>30,Substr(TR_Versions.List.Current.P_SURVEY_SECTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_SURVEY_SECTION.Survey_Section_Nm,0,29)+\"...\",TR_Versions.List.Current.P_SURVEY_SECTION.Sequence_Nbr+\"-\"+TR_Versions.List.Current.P_SURVEY_SECTION.Survey_Section_Nm)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"[\"+LR_Questions.List.Current.P_SURVEY_SECTION.Sequence_Nbr+\"-\"+LR_Questions.List.Current.P_SURVEY_SECTION.Survey_Section_Nm+\"] \"+If( Length(LR_Questions.List.Current.P_QUESTION.Question_Dsc) > 40 ,LR_Questions.List.Current.P_QUESTION.Sequence_Nbr+\"-\"+Substr(LR_Questions.List.Current.P_QUESTION.Question_Dsc,0,37)+\"...\",LR_Questions.List.Current.P_QUESTION.Sequence_Nbr+\"-\"+LR_Questions.List.Current.P_QUESTION.Question_Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(Concat(PracticeShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation,If(PracticeShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation <>\"\",\", \",\"\")+PracticeShopTable.List.Current.PAYROLL_SHOP_RECORD.Edit_Explanations),0,8)+\"...\"","type":"Text","functions":["Substr","Concat","If"]}
{"text":"Substr(Concat(TargetShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation,If(TargetShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation <>\"\",\", \",\"\")+TargetShopTable.List.Current.PAYROLL_SHOP_RECORD.Edit_Explanations),0,8)+\"...\"","type":"Text","functions":["Substr","Concat","If"]}
{"text":"Substr(Concat(SpecialShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation,If(SpecialShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation <>\"\",\", \",\"\")+SpecialShopTable.List.Current.PAYROLL_SHOP_RECORD.Edit_Explanations),0,8)+\"...\"","type":"Text","functions":["Substr","Concat","If"]}
{"text":"Substr(Concat(RegularShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation,If(RegularShopTable.List.Current.PAYROLL_SHOP_RECORD.Explanation <>\"\",\", \",\"\")+RegularShopTable.List.Current.PAYROLL_SHOP_RECORD.Edit_Explanations),0,8)+\"...\"","type":"Text","functions":["Substr","Concat","If"]}
{"text":"If (SqecRequestEdit.Record.SQEC_REQUEST.Updated_At <> NullDate(), DateTimeToDate(SqecRequestEdit.Record.SQEC_REQUEST.Updated_At), \"Not Processed\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"[\" + QuestionList.Current.P_SURVEY_SECTION.Sequence_Nbr + \" - \" + QuestionList.Current.P_SURVEY_SECTION.Survey_Section_Nm + \"] \"  + If( Length(QuestionList.Current.P_QUESTION.Question_Dsc) > 40 ,\n    \" \" + Substr(QuestionList.Current.P_QUESTION.Question_Dsc,0,37)+\"...\",\n    \" \" + QuestionList.Current.P_QUESTION.Question_Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(DestinationOptionsList.Current.M_QUESTION.Question_Dsc)>20, Substr(DestinationOptionsList.Current.M_QUESTION.Question_Dsc,0,20)+\"...\",DestinationOptionsList.Current.M_QUESTION.Question_Dsc)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(DestinationOptionsList.Current.M_SURVEY_SECTION.Survey_Section_Nm)>20, Substr(DestinationOptionsList.Current.M_SURVEY_SECTION.Survey_Section_Nm,0,20)+\"...\",DestinationOptionsList.Current.M_SURVEY_SECTION.Survey_Section_Nm)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsSurveyList.List.Current.M_SURVEY.Survey_Dsc)>50,Concat(Substr(TableRecordsSurveyList.List.Current.M_SURVEY.Survey_Dsc,0,50),\"...\"),TableRecordsSurveyList.List.Current.M_SURVEY.Survey_Dsc)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(Length(TableRecordsReminderList.List.Current.M_OPTION_REMINDER.Option_Reminder_Dsc) <= 50,TableRecordsReminderList.List.Current.M_OPTION_REMINDER.Option_Reminder_Dsc,Substr(TableRecordsReminderList.List.Current.M_OPTION_REMINDER.Option_Reminder_Dsc,0,50)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (\n    (TextToDecimal(ShopCount) <> 0)     ,(FormatDecimal((((TextToDecimal(ExpSucc) + TextToDecimal(RegSucc)) / TextToDecimal(ShopCount)) * 50),2,\".\",\",\") + \"%\")     ,(0 + \"%\")\n    )","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If (\n    (TextToDecimal(ShopCount) <> 0)     ,(FormatDecimal(((TextToDecimal(ExpSucc) / TextToDecimal(ShopCount)) * 100),2,\".\",\",\") + \"%\")     ,(0 + \"%\")\n    )","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If (\n    (TextToDecimal(ShopCount) <> 0),(FormatDecimal(((TextToDecimal(RegSucc) / TextToDecimal(ShopCount)) * 100),2,\".\",\",\") + \"%\"),0 + \"%\"\n    )","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported)<>0,(FormatDecimal((((TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.ExpSucc) + TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.RegSucc)) / TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported)) * 50),2,\".\",\",\") + \"%\"), 0 + \"%\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported)<>0,(FormatDecimal(((TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.ExpSucc) / TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported)) * 100),2,\".\",\",\") + \"%\"), 0 + \"%\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported) <> 0,(FormatDecimal(((TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.RegSucc) / TextToDecimal(TableRecords2.List.Current.R017DistrictSummary.TotalReported)) * 100),2,\".\",\",\") + \"%\"),0 + \"%\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(Length(TableRecords1.List.Current.AUDIT.CodeReference) > 25, Substr(TableRecords1.List.Current.AUDIT.CodeReference, 0, 25) + \"...\", TableRecords1.List.Current.AUDIT.CodeReference)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DayOfWeek(ListRecords1.List.Current.JQCalendar_Event.StartDate) = 1, \"<tr>\", \"\") + \n\"<td class='JQSmallCalendarDay\" + DayOfWeek(ListRecords1.List.Current.JQCalendar_Event.StartDate) + \" \" + ListRecords1.List.Current.JQCalendar_Event.ClassName + \nIf(DateTimeToDate(ListRecords1.List.Current.JQCalendar_Event.StartDate) = CurrDate(), \" JQSmallCalendarToday\", \"\") +\nIf(Month(ListRecords1.List.Current.JQCalendar_Event.StartDate) <> Month, \" JQSmallCalendarDayEmpty\", \"\") +\n\"'>\"","type":"Text","functions":["If","DayOfWeek","DateTimeToDate","CurrDate","Month"]}
{"text":"If(TableRecords3.List.Current.MGF_REQUISICAO.OBSDEVOLUCAO=\"\",\"<sem valor>\",If(Length(TableRecords3.List.Current.MGF_REQUISICAO.OBSDEVOLUCAO)>10,Substr(TableRecords3.List.Current.MGF_REQUISICAO.OBSDEVOLUCAO,0,10)+\"...\",TableRecords3.List.Current.MGF_REQUISICAO.OBSDEVOLUCAO))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords3.List.Current.MGF_REQUISICAO.NOTAS=\"\",\"<sem valor>\",If(Length(TableRecords3.List.Current.MGF_REQUISICAO.NOTAS)>10,Substr(TableRecords3.List.Current.MGF_REQUISICAO.NOTAS,0,10)+\"...\",TableRecords3.List.Current.MGF_REQUISICAO.NOTAS))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRequisicoes.List.Current.MGF_REQUISICAO.PERCURSO) > 50, Substr(TableRequisicoes.List.Current.MGF_REQUISICAO.PERCURSO,0,50) + \"...\", TableRequisicoes.List.Current.MGF_REQUISICAO.PERCURSO)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Trunc(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA)/24)>0, Trunc(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA)/24) + \" d\",\"\") +\nIf(Mod(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA),24) > 0,If(Trunc(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA)/24)>0,\" e \" +\nMod(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA),24) + \" h\",Mod(DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA),24) + \" h\"),\"\")\n","type":"Text","functions":["If","Trunc","DiffHours","Mod"]}
{"text":"If(DiffMinutes(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA) >= 60,DiffHours(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA) + \" h\",DiffMinutes(TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_INICIO,TableRequisicoes.List.Current.MGF_REQUISICAO.DATA_ENTREGA) + \" m\")","type":"Text","functions":["If","DiffMinutes","DiffHours"]}
{"text":"If(Length(TableRequisicoes.List.Current.MGF_REQUISICAO.RECUSAMOTORISTATEXT) > 10, Substr(TableRequisicoes.List.Current.MGF_REQUISICAO.RECUSAMOTORISTATEXT,0,10) + \"...\", TableRequisicoes.List.Current.MGF_REQUISICAO.RECUSAMOTORISTATEXT)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRequisicoes.List.Current.MGF_REQUISICAO.MOTORISTAMOTIVO=\"\",\"<sem valor>\",If(Length(TableRequisicoes.List.Current.MGF_REQUISICAO.MOTORISTAMOTIVO)>20,Substr(TableRequisicoes.List.Current.MGF_REQUISICAO.MOTORISTAMOTIVO,0,10)+\"...\",TableRequisicoes.List.Current.MGF_REQUISICAO.MOTORISTAMOTIVO))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableHardware.List.Current.Hardware.Description) > Site.MaxTableFieldLength),\nSubstr(TableHardware.List.Current.Hardware.Description , 0, Site.MaxTableFieldLength-3) + \"...\",TableHardware.List.Current.Hardware.Description)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableHardware.List.Current.MetaCIs.Type) > Site.MaxTableFieldLength),\nSubstr(TableHardware.List.Current.MetaCIs.Type , 0, Site.MaxTableFieldLength-3) + \"...\",TableHardware.List.Current.MetaCIs.Type)","type":"Text","functions":["If","Length","Substr"]}
{"text":"TextToInteger(If(Length(IntegerToText(TableAddress.List.Current.Address.PostalCode)) < 4,IntegerToText(TableAddress.List.Current.Address.PostalCode),Substr(IntegerToText(TableAddress.List.Current.Address.PostalCode),0,4)))","type":"Integer","functions":["TextToInteger","If","Length","IntegerToText","Substr"]}
{"text":"TextToInteger(If(Length(IntegerToText(TableAddress.List.Current.Address.PostalCode)) < 4,IntegerToText(0),Substr(IntegerToText(TableAddress.List.Current.Address.PostalCode),4,7)))","type":"Integer","functions":["TextToInteger","If","Length","IntegerToText","Substr"]}
{"text":"If ((Length(TableAddress.List.Current.Address.City) > Site.MaxTableFieldLength),\nSubstr(TableAddress.List.Current.Address.City, 0, Site.MaxTableFieldLength-3) + \"...\",TableAddress.List.Current.Address.City)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableAddress.List.Current.Address.Name) > Site.MaxTableFieldLength),\nSubstr(TableAddress.List.Current.Address.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableAddress.List.Current.Address.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableMetaCIs.List.Current.MetaCIs.Description) > Site.MaxTableFieldLength),\nSubstr(TableMetaCIs.List.Current.MetaCIs.Description, 0, Site.MaxTableFieldLength-3) + \"...\",TableMetaCIs.List.Current.MetaCIs.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSite.List.Current.SiteLocation_2.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableSite.List.Current.SiteLocation_2.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableSite.List.Current.SiteLocation_2.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSite.List.Current.Address.Name) > Site.MaxTableFieldLength),\nSubstr(TableSite.List.Current.Address.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableSite.List.Current.Address.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSite.List.Current.SiteLocation.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableSite.List.Current.SiteLocation.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableSite.List.Current.SiteLocation.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSite.List.Current.SiteLocation.Name) > Site.MaxTableFieldLength),\nSubstr(TableSite.List.Current.SiteLocation.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableSite.List.Current.SiteLocation.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableServer.List.Current.Server.Description) > Site.MaxTableFieldLength),\nSubstr(TableServer.List.Current.Server.Description, 0, Site.MaxTableFieldLength-3) + \"...\",TableServer.List.Current.Server.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableRouter.List.Current.Router_Switch.Description) > Site.MaxTableFieldLength),\nSubstr(TableRouter.List.Current.Router_Switch.Description, 0, Site.MaxTableFieldLength-3) + \"...\",TableRouter.List.Current.Router_Switch.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableRouter.List.Current.MetaCIs.Type) > Site.MaxTableFieldLength),\nSubstr(TableRouter.List.Current.MetaCIs.Type, 0, Site.MaxTableFieldLength-3) + \"...\",TableRouter.List.Current.MetaCIs.Type)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSupplier.List.Current.Supplier.CommercialName) > Site.MaxTableFieldLength),\nSubstr(TableSupplier.List.Current.Supplier.CommercialName, 0, Site.MaxTableFieldLength-3) + \"...\",TableSupplier.List.Current.Supplier.CommercialName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSupplier.List.Current.Supplier.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableSupplier.List.Current.Supplier.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableSupplier.List.Current.Supplier.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableSupplier.List.Current.Supplier.Name) > Site.MaxTableFieldLength),\nSubstr(TableSupplier.List.Current.Supplier.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableSupplier.List.Current.Supplier.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableManufacturer.List.Current.Manufacturer.CommercialName) > Site.MaxTableFieldLength),\nSubstr(TableManufacturer.List.Current.Manufacturer.CommercialName, 0, Site.MaxTableFieldLength-3) + \"...\",TableManufacturer.List.Current.Manufacturer.CommercialName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableManufacturer.List.Current.Manufacturer.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableManufacturer.List.Current.Manufacturer.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableManufacturer.List.Current.Manufacturer.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableManufacturer.List.Current.Manufacturer.Name) > Site.MaxTableFieldLength),\nSubstr(TableManufacturer.List.Current.Manufacturer.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableManufacturer.List.Current.Manufacturer.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableOrganization.List.Current.Organization.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableOrganization.List.Current.Organization.ShortName , 0, Site.MaxTableFieldLength-3) + \"...\",TableOrganization.List.Current.Organization.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableOrganization.List.Current.Organization.Name) > Site.MaxTableFieldLength),\nSubstr(TableOrganization.List.Current.Organization.Name , 0, Site.MaxTableFieldLength-3) + \"...\",TableOrganization.List.Current.Organization.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableOrganizationUnits.List.Current.Organization.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableOrganizationUnits.List.Current.Organization.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableOrganizationUnits.List.Current.Organization.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableOrganizationUnits.List.Current.OrganizationalUnit.ShortName) > Site.MaxTableFieldLength),\nSubstr(TableOrganizationUnits.List.Current.OrganizationalUnit.ShortName, 0, Site.MaxTableFieldLength-3) + \"...\",TableOrganizationUnits.List.Current.OrganizationalUnit.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If ((Length(TableOrganizationUnits.List.Current.OrganizationalUnit.Name) > Site.MaxTableFieldLength),\nSubstr(TableOrganizationUnits.List.Current.OrganizationalUnit.Name, 0, Site.MaxTableFieldLength-3) + \"...\",TableOrganizationUnits.List.Current.OrganizationalUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableAttachments.List.Current.Attachments.Description) > 70, Substr(TableAttachments.List.Current.Attachments.Description,0,67)+\"...\", TableAttachments.List.Current.Attachments.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action20)>30,Substr(TableRecords1.List[0].ClassSummary.Action20,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action20)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action19)>30,Substr(TableRecords1.List[0].ClassSummary.Action19,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action19)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action18)>30,Substr(TableRecords1.List[0].ClassSummary.Action18,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action18)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action17)>30,Substr(TableRecords1.List[0].ClassSummary.Action17,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action17)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action16)>30,Substr(TableRecords1.List[0].ClassSummary.Action16,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action16)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action15)>30,Substr(TableRecords1.List[0].ClassSummary.Action15,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action15)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action14)>30,Substr(TableRecords1.List[0].ClassSummary.Action14,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action14)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action13)>30,Substr(TableRecords1.List[0].ClassSummary.Action13,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action13)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action12)>30,Substr(TableRecords1.List[0].ClassSummary.Action12,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action12)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action11)>30,Substr(TableRecords1.List[0].ClassSummary.Action11,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action11)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action10)>30,Substr(TableRecords1.List[0].ClassSummary.Action10,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action10)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action9)>30,Substr(TableRecords1.List[0].ClassSummary.Action9,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action9)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action8)>30,Substr(TableRecords1.List[0].ClassSummary.Action8,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action8)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action7)>30,Substr(TableRecords1.List[0].ClassSummary.Action7,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action7)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action6)>30,Substr(TableRecords1.List[0].ClassSummary.Action6,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action6)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action5)>30,Substr(TableRecords1.List[0].ClassSummary.Action5,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action5)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action4)>30,Substr(TableRecords1.List[0].ClassSummary.Action4,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action4)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action3)>30,Substr(TableRecords1.List[0].ClassSummary.Action3,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action3)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action2)>30,Substr(TableRecords1.List[0].ClassSummary.Action2,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action2)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List[0].ClassSummary.Action1)>30,Substr(TableRecords1.List[0].ClassSummary.Action1,0,30)+\"...\",TableRecords1.List[0].ClassSummary.Action1)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Substr(BankTransactionsCre.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15) = \"\",\"\",If(Length(BankTransactionsCre.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES) > 14,Substr(BankTransactionsCre.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15)+\"...\",Substr(BankTransactionsCre.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15)))","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Substr(BankTransactionsDeb.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15) = \"\",\"\",If(Length(BankTransactionsDeb.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES) > 14,Substr(BankTransactionsDeb.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15)+\"...\",Substr(BankTransactionsDeb.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,15)))","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Length(ChecksTableRecords.List.Current.Checks.BankAccountName) > 11, Substr(ChecksTableRecords.List.Current.Checks.BankAccountName,0,11) + \"...\", ChecksTableRecords.List.Current.Checks.BankAccountName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ReceiptsCount <> 0,\"<b>SugestÃ£o:</b> \" + Round( ( (IntegerToDecimal(IguaisReconcil_receipts) / IntegerToDecimal(ReceiptsCount) ) * 100)) + \"%\",\"<b>SugestÃ£o:</b> 0%\")","type":"Text","functions":["If","Round","IntegerToDecimal"]}
{"text":"If(ChecksCountDesagrupados <> 0,\"<b>SugestÃ£o:</b> \" + Round( ( (IntegerToDecimal(SumChecksReconcil) / IntegerToDecimal(ChecksCountDesagrupados) ) * 100)) + \"%\",\"<b>SugestÃ£o:</b> 0%\")\n\n","type":"Text","functions":["If","Round","IntegerToDecimal"]}
{"text":"If(Length(ChecksTableRecords.List.Current.Checks.VendorName) > 11, Substr(ChecksTableRecords.List.Current.Checks.VendorName,0,11) + \"...\", ChecksTableRecords.List.Current.Checks.VendorName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ChecksTableRecords.List.Current.AP_CHECKS_ALL.BANK_ACCOUNT_NAME) > 11, Substr(ChecksTableRecords.List.Current.AP_CHECKS_ALL.BANK_ACCOUNT_NAME,0,11) + \"...\", ChecksTableRecords.List.Current.AP_CHECKS_ALL.BANK_ACCOUNT_NAME)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ChecksTableRecords.List.Current.AP_CHECKS_ALL.VENDOR_NAME) > 11, Substr(ChecksTableRecords.List.Current.AP_CHECKS_ALL.VENDOR_NAME,0,11) + \"...\", ChecksTableRecords.List.Current.AP_CHECKS_ALL.VENDOR_NAME)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Substr(BankTransactions_TR.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,13) = \"\",\"\",If(Length(BankTransactions_TR.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES) > 12,Substr(BankTransactions_TR.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,13)+\"...\",Substr(BankTransactions_TR.List.Current.CMR_BANK_TRANSACTION.OBSERVACOES,0,13)))","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(OEBSTableRecords.List.Current.Checks.Check_date <> NullDate(),\"-\"+FormatDecimal(OEBSTableRecords.List.Current.Checks.Amount,2,\",\",\".\"),\"-\") ","type":"Text","functions":["If","NullDate","FormatDecimal"]}
{"text":"If(Length(OEBSTableRecords.List.Current.Checks.BankAccountName) > 11, Substr(OEBSTableRecords.List.Current.Checks.BankAccountName,0,11) + \"...\", OEBSTableRecords.List.Current.Checks.BankAccountName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ReconciliationReceiptsViewTable.List.Current.CMR_RECONCILIATION.USERNAME) > 10, Substr(ReconciliationReceiptsViewTable.List.Current.CMR_RECONCILIATION.USERNAME,0,10) + \"...\", ReconciliationReceiptsViewTable.List.Current.CMR_RECONCILIATION.USERNAME)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ReconciliationChecksViewTable.List.Current.CMR_RECONCILIATION.USERNAME) > 10, Substr(ReconciliationChecksViewTable.List.Current.CMR_RECONCILIATION.USERNAME,0,10) + \"...\", ReconciliationChecksViewTable.List.Current.CMR_RECONCILIATION.USERNAME)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetATMDetail.List.Current.CaixaAutomatica.dtArmazem = NullDate(), \"\", DateTimeToDate(GetATMDetail.List.Current.CaixaAutomatica.dtArmazem))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":" If(GetATMDetail.List.Current.CaixaAutomatica.dtPrimIni = NullDate(), \"\", DateTimeToDate(GetATMDetail.List.Current.CaixaAutomatica.dtPrimIni))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsListATM.List.Current.CaixaAutomatica.dtUltimaRevisao=NullDate(), \"\", DateTimeToDate(TableRecordsListATM.List.Current.CaixaAutomatica.dtUltimaRevisao))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsListATM.List.Current.CaixaAutomatica.Propriedade = Site.SIBS, \" - Restam \" + (TableRecordsListATM.List.Current.CaixaAutomatica.DiasReserva - DiffDays(TableRecordsListATM.List.Current.CaixaAutomatica.dtArmazem, CurrDateTime())) + \" dias\", \"\")","type":"Text","functions":["If","DiffDays","CurrDateTime"]}
{"text":"If(TableRecordsListATM.List.Current.CaixaAutomatica.dtArmazem = NullDate(), \"\", DateTimeToDate(TableRecordsListATM.List.Current.CaixaAutomatica.dtArmazem))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(tr_CAsSemAloc.List.Current.CaixaAutomatica.dtArmazem = NullDate(), \"\", DateTimeToDate(tr_CAsSemAloc.List.Current.CaixaAutomatica.dtArmazem))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"<meta http-equiv='refresh' content='\"+If(Get_Alinhamento.List.Empty, 10, DiffSeconds(CurrDateTime(),Get_Alinhamento.List.Current.Alinhamento_Ecra.Data_Fim))+\"'>\n<body scroll='no'> \"\n\n","type":"Text","functions":["If","DiffSeconds","CurrDateTime"]}
{"text":"If(Get_Descr.List.Current.Data.Text = \"\", \"\", If(Length(Get_Descr.List.Current.Data.Text) > 30, Substr(Get_Descr.List.Current.Data.Text,0,30) + \"...\", Get_Descr.List.Current.Data.Text))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Get_Info.List.Current.RWB_RECEIPT_HEADERS.DESCR = \"\", \"\", If(Length(Get_Info.List.Current.RWB_RECEIPT_HEADERS.DESCR) > 30, Substr(Get_Info.List.Current.RWB_RECEIPT_HEADERS.DESCR,0,30) + \"...\", Get_Info.List.Current.RWB_RECEIPT_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ReceiptTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID) > 20, Substr(ReceiptTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID,0,20) + \"...\", ReceiptTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(DateTimeToText(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR = \"\", \"\", If(Length(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR) > 20, Substr(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR,0,20) + \"...\", ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.CustomerName + \" - \" + TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.TaxPayer_Id) > 20, Substr(TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.CustomerName + \" - \" + TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.TaxPayer_Id,0,20) + \"...\", TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.CustomerName + \" - \" + TransactionsToApplyTable.List.Current.ResultQueryTransaccoesPorAplicar.TaxPayer_Id)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(DateTimeToText(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.DESCR = \"\", \"\", If(Length(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.DESCR) > 20, Substr(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.DESCR,0,20) + \"...\", TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TransactionTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID) > 20, Substr(TransactionTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID,0,20) + \"...\", TransactionTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(DateTimeToText(TransactionTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(TransactionTable.List.Current.RWB_TRX_HEADERS.DESCR = \"\", \"\", If(Length(TransactionTable.List.Current.RWB_TRX_HEADERS.DESCR) > 20, Substr(TransactionTable.List.Current.RWB_TRX_HEADERS.DESCR,0,20) + \"...\", TransactionTable.List.Current.RWB_TRX_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(LinesTable.List.Current.RWB_TRX_LINES.DESCR = \"\", \"\", If(Length(LinesTable.List.Current.RWB_TRX_LINES.DESCR) > 20, Substr(LinesTable.List.Current.RWB_TRX_LINES.DESCR,0,20) + \"...\", LinesTable.List.Current.RWB_TRX_LINES.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(LinesTable.List.Current.RWB_TRX_LINES.TYPE = \"\", \"\", If(Length(LinesTable.List.Current.RWB_TRX_LINES.TYPE) > 20, Substr(LinesTable.List.Current.RWB_TRX_LINES.TYPE,0,20) + \"...\", LinesTable.List.Current.RWB_TRX_LINES.TYPE))\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(DateTimeToText(TransactionsTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionsTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR = \"\", \"N/D\", If(Length(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR) > 20, Substr(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR,0,20) + \"...\", ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ReceiptsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID) > 20, Substr(ReceiptsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID,0,20) + \"...\", ReceiptsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + ReceiptsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(DateTimeToText(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.DESCR = \"\", \"\", If(Length(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.DESCR) > 20, Substr(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.DESCR,0,20) + \"...\", ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.DESCR))\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ReceiptTypesTable.List.Current.RWB_RECEIPT_TYPES.START_DATE=NullDate(),\"<Sem Valor>\",DateTimeToDate(ReceiptTypesTable.List.Current.RWB_RECEIPT_TYPES.START_DATE))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TransactionsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID) > 20, Substr(TransactionsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID,0,20) + \"...\", TransactionsTable.List.Current.AR_CUSTOMERS.CUSTOMER_NAME + \" - \" + TransactionsTable.List.Current.AR_CUSTOMERS.TAXPAYER_ID)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TransactionsTable.List.Current.RWB_TRX_HEADERS.DESCR = \"\", \"\", If(Length(TransactionsTable.List.Current.RWB_TRX_HEADERS.DESCR) > 20, Substr(TransactionsTable.List.Current.RWB_TRX_HEADERS.DESCR,0,20) + \"...\", TransactionsTable.List.Current.RWB_TRX_HEADERS.DESCR))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.SALE_DATE) <> NullDate(), TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.SALE_DATE, \"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.CREATION_DATE) <> NullDate(), TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.CREATION_DATE, \"\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Length(TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.NAME) < 25, TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.NAME, Substr(TR_GetTransactionsByNif.List.Current.ECR_SALE_TRANSACTION.NAME, 0, 30) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<iframe src =\" + AddPersonalAreaToURLPath(URL) + \"?GroupID=\"+GroupId+\"&width=\"+ DecimalToInteger((TextToInteger(Width)/2)-20)+\"&height=\"+ DecimalToInteger(((TextToInteger(Height)/2) - 20))+\"   width='\"+Width+\"' height='\"+Height+\"' frameborder='0'>\"\n","type":"Text","functions":["AddPersonalAreaToURLPath","DecimalToInteger","TextToInteger"]}
{"text":"If(DateTimeToDate(TR_Alerts.List.Current.ALERT.End_Date) = NullDate(), \"NÃ£o expira\", DateTimeToDate(TR_Alerts.List.Current.ALERT.End_Date))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"\"Pago em \" + Day(GetPaymentByUser.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(GetPaymentByUser.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(GetPaymentByUser.List.Current.PAYMENT.PaymentDate)\n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Substr(DateTimeToText(TRMeetings.List.Current.MEETING.EndDateTime),0,Length(DateTimeToText(TRMeetings.List.Current.MEETING.EndDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRMeetings.List.Current.MEETING.StartDateTime),0,Length(DateTimeToText(TRMeetings.List.Current.MEETING.StartDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime),0,Length(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime),0,Length(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.StartDateTime)),0,Length(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.StartDateTime)))-3) ","type":"Text","functions":["Substr","TimeToText","DateTimeToTime","Length"]}
{"text":"Substr(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.EndDateTime)),0,Length(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.EndDateTime)))-3) ","type":"Text","functions":["Substr","TimeToText","DateTimeToTime","Length"]}
{"text":"Substr(DateTimeToText(TRMyResources.List.Current.RESERVE2.EndDateTime),0,Length(DateTimeToText(TRMyResources.List.Current.RESERVE2.EndDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRMyResources.List.Current.RESERVE2.StartDateTime),0,Length(DateTimeToText(TRMyResources.List.Current.RESERVE2.StartDateTime))-3) ","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime), 0, Length(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime)) - 3)\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime), 0, Length(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime)) - 3)\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Day(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetMeetingEntrevista.List.Current.RESOURCE.Name","type":"Text","functions":["Day","Month","Hour","Minute"]}
{"text":"Day(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetMeetingPAC.List.Current.RESOURCE.Name","type":"Text","functions":["Day","Month","Hour","Minute"]}
{"text":"Substr(DateTimeToText(TRReservations.List.Current.RESERVE2.EndDateTime), 0, Length(DateTimeToText(TRReservations.List.Current.RESERVE2.EndDateTime)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TRReservations.List.Current.RESERVE2.StartDateTime), 0, Length(DateTimeToText(TRReservations.List.Current.RESERVE2.StartDateTime)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If (Length(trMensagens.List.Current.USER_MASTER.Name)>50,Substr(trMensagens.List.Current.USER_MASTER.Name,0,46)+\"...\",trMensagens.List.Current.USER_MASTER.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(trMensagens.List.Current.Text_2.Value)>50,Substr(trMensagens.List.Current.Text_2.Value,0,46)+\"...\",trMensagens.List.Current.Text_2.Value)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(NumEcran = 3 and ((DiffDays(trListaRegistos.List.Current.EMPREENDIMENTO.TituloValidoAberturaDataEmis, CurrDate()) >= 90 and trListaRegistos.List.Current.EMPREENDIMENTO.EstadoClassificacaoId = Entities.ESTADOCLASSIFICACAO.Projecto) or (trListaRegistos.List.Current.EMPREENDIMENTO.EstadoClassificacaoId = Entities.ESTADOCLASSIFICACAO.Auditoria and DiffDays(trListaRegistos.List.Current.EMPREENDIMENTO.Validade, CurrDate())>0)),\"1\", \n\nIf(NumEcran = 3 and trListaRegistos.List.Current.EMPREENDIMENTO.EstadoClassificacaoId = Entities.ESTADOCLASSIFICACAO.Auditoria and (DiffDays(CurrDate(),trListaRegistos.List.Current.EMPREENDIMENTO.Validade)<150 and DiffDays(CurrDate(), trListaRegistos.List.Current.EMPREENDIMENTO.Validade)>0),\"2\",\"0\"))\n\n\n\n","type":"Text","functions":["If","DiffDays","CurrDate"]}
{"text":"If (Length(trListaRegistos.List.Current.REGISTO.Designacao)>50,Substr(trListaRegistos.List.Current.REGISTO.Designacao,0,46)+\"...\",trListaRegistos.List.Current.REGISTO.Designacao)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(trPerguntas.List.Current.PERGUNTARESPOSTA.Pergunta)>50,Substr(trPerguntas.List.Current.PERGUNTARESPOSTA.Pergunta,0,50)+\"...\",trPerguntas.List.Current.PERGUNTARESPOSTA.Pergunta)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(trEncomendaPlacas.List.Current.ENCOMENDA_PLACA.RegistoRNAATId=NullIdentifier(),\nIdentifierToInteger( trEncomendaPlacas.List.Current.ENCOMENDA_PLACA.RegistoRNTId ),\nIdentifierToInteger( trEncomendaPlacas.List.Current.ENCOMENDA_PLACA.RegistoRNAATId )\n)\n","type":"Integer","functions":["If","NullIdentifier","IdentifierToInteger"]}
{"text":"PAYMENT_RECORD.PAYMENT.LimitDate + \" (\" + If(CurrDate() = PAYMENT_RECORD.PAYMENT.LimitDate,\"Hoje\",If(CurrDate() < PAYMENT_RECORD.PAYMENT.LimitDate,\"Daqui a \",\"HÃ¡ \") + Abs(DiffDays(CurrDate(),PAYMENT_RECORD.PAYMENT.LimitDate)) + If(CurrDate() < PAYMENT_RECORD.PAYMENT.LimitDate,\" dias.\",\" dias atrÃ¡s.\")) + \")\"","type":"Text","functions":["If","CurrDate","Abs","DiffDays"]}
{"text":"If(Round(DiffDays(CurrDate(),GetUserData.List.Current.USER_EXTENDED.BirthDate) / 365) > 0,Round(DiffDays(CurrDate(),GetUserData.List.Current.USER_EXTENDED.BirthDate) / 365) + \" anos\",\"\")","type":"Text","functions":["If","Round","DiffDays","CurrDate"]}
{"text":"If (Length(trRegistos.List.Current.EMPRESA.Nome)>50,Substr(trRegistos.List.Current.EMPRESA.Nome,0,46)+\"...\",trRegistos.List.Current.EMPRESA.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(trRegistos_simples.List.Current.EMPRESA.Nome)>50,Substr(trRegistos_simples.List.Current.EMPRESA.Nome,0,46)+\"...\",trRegistos_simples.List.Current.EMPRESA.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(trRegistos_detalhes.List.Current.EMPRESA.Nome)>50,Substr(trRegistos_detalhes.List.Current.EMPRESA.Nome,0,46)+\"...\",trRegistos_detalhes.List.Current.EMPRESA.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(trRegistos_detalhes.List.Current.REGISTO.DataEstado=NullDate(),\"\",DateTimeToDate(trRegistos_detalhes.List.Current.REGISTO.DataEstado))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trRegistos_detalhes.List.Current.REGISTO.SubmetidoEm=NullDate(),\"\",DateTimeToDate(trRegistos_detalhes.List.Current.REGISTO.SubmetidoEm))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trRegistos_simples.List.Current.REGISTO.ParecerICNBDadoEm = NullDate(), \"\",\nIf(DiffDays(trRegistos_simples.List.Current.REGISTO.PedidoParecerINCBEm, trRegistos_simples.List.Current.REGISTO.ParecerICNBDadoEm) > 20,\"Alterado por TP\",\"\"))","type":"Text","functions":["If","NullDate","DiffDays"]}
{"text":"If(ListRecords2.List.Current.ACTIVIDADE.SubTipoActividadeId = NullIdentifier(),\n\"<b>\" + If( Length( ListRecords2.List.Current.ACTIVIDADE.Designacao ) > 54, Substr( ListRecords2.List.Current.ACTIVIDADE.Designacao, 0, 51) + \"...\", ListRecords2.List.Current.ACTIVIDADE.Designacao)  + \"</b>\" + NewLine(),\nIf(ListRecords2.List.Current.ACTIVIDADE.SubTipoActividadeId <> NullIdentifier(),\n\"&nbsp;&nbsp;&nbsp;\" + If( Length( ListRecords2.List.Current.ACTIVIDADE.Designacao ) > 51, Substr( ListRecords2.List.Current.ACTIVIDADE.Designacao, 0,48) + \"...\", ListRecords2.List.Current.ACTIVIDADE.Designacao) + NewLine(),\nIf( Length( ListRecords2.List.Current.ACTIVIDADE.Designacao ) > 54, Substr( ListRecords2.List.Current.ACTIVIDADE.Designacao, 0, 51) + \"...\", ListRecords2.List.Current.ACTIVIDADE.Designacao) + NewLine()\n))","type":"Text","functions":["If","NullIdentifier","Length","Substr","NewLine"]}
{"text":"If(ActividadeTipoId = Entities.ACTIVIDADE_TIPO.ActividadesAquaticas and ListRecords.List.Current.ACTIVIDADE.SubTipoActividadeId = NullIdentifier(),\n\"<b>\" + If( Length( ListRecords.List.Current.ACTIVIDADE.Designacao ) > 54, Substr( ListRecords.List.Current.ACTIVIDADE.Designacao, 0, 51) + \"...\", ListRecords.List.Current.ACTIVIDADE.Designacao)  + \"</b>\" + NewLine(),\nIf(ActividadeTipoId = Entities.ACTIVIDADE_TIPO.ActividadesAquaticas and ListRecords.List.Current.ACTIVIDADE.SubTipoActividadeId <> NullIdentifier(),\n\"&nbsp;&nbsp;&nbsp;\" + If( Length( ListRecords.List.Current.ACTIVIDADE.Designacao ) > 51, Substr( ListRecords.List.Current.ACTIVIDADE.Designacao, 0,48) + \"...\", ListRecords.List.Current.ACTIVIDADE.Designacao) + NewLine(),\nIf( Length( ListRecords.List.Current.ACTIVIDADE.Designacao ) > 54, Substr( ListRecords.List.Current.ACTIVIDADE.Designacao, 0, 51) + \"...\", ListRecords.List.Current.ACTIVIDADE.Designacao) + NewLine()\n))","type":"Text","functions":["If","NullIdentifier","Length","Substr","NewLine"]}
{"text":"If(trRegistos.List.Current.REGISTO.DataEstado=NullDate(),\"\",DateTimeToDate(trRegistos.List.Current.REGISTO.DataEstado))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Substr(TableRecords1.List.Current.ACTIVIDADE.Designacao,0,50) + If(Length(TableRecords1.List.Current.ACTIVIDADE.Designacao) > 50, \"...\", \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If (Length(TableRecords1.List.Current.EMPRESA.Nome)>50,Substr(TableRecords1.List.Current.EMPRESA.Nome,0,46)+\"...\",TableRecords1.List.Current.EMPRESA.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trRegistos_simples.List.Current.REQUERENTE.Nome)>50,Substr(trRegistos_simples.List.Current.REQUERENTE.Nome,0,46)+\"...\",trRegistos_simples.List.Current.REQUERENTE.Nome)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trRegistos_simples.List.Current.EMPRESA.Nome)>50,Substr(trRegistos_simples.List.Current.EMPRESA.Nome,0,46)+\"...\",trRegistos_simples.List.Current.EMPRESA.Nome)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(InfoRequestRecord.Record.ANALYSIS_NOTIFICATION.CreationDateTime = NullDate(), \"\", DateTimeToText(InfoRequestRecord.Record.ANALYSIS_NOTIFICATION.CreationDateTime)) ","type":"Text","functions":["If","NullDate","DateTimeToText"]}
{"text":"If(InfoRequestRecords.List.Current.ANALYSIS_NOTIFICATION.CreationDateTime = NullDate(), \"\", DateTimeToText(InfoRequestRecords.List.Current.ANALYSIS_NOTIFICATION.CreationDateTime)) ","type":"Text","functions":["If","NullDate","DateTimeToText"]}
{"text":"If(Length(ProjectInspectionsTR.List.Current.PROJECT_INSPECTION.Fundamentation) > 50,Substr(ProjectInspectionsTR.List.Current.PROJECT_INSPECTION.Fundamentation,0,49) + \"(...)\",ProjectInspectionsTR.List.Current.PROJECT_INSPECTION.Fundamentation)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(PaymentAssessementsTR.List.Current.ASSESSEMENT.AssessementText) < 50  ,PaymentAssessementsTR.List.Current.ASSESSEMENT.AssessementText  ,Substr(PaymentAssessementsTR.List.Current.ASSESSEMENT.AssessementText,0,50))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ShowRecord2.Record.INTERNSHIP_REGISTRATION.EndDate = NullDate(), \"Sem data de fim prevista\", DateTimeToDate(ShowRecord2.Record.INTERNSHIP_REGISTRATION.EndDate)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord2.Record.INTERNSHIP_REGISTRATION.StartDate = NullDate(), \"Sem data de inicio prevista\", DateTimeToDate(ShowRecord2.Record.INTERNSHIP_REGISTRATION.StartDate)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(ContractElementsTR.List.Current.ANALYSIS_CONTRACT_ELEMENTS.Reply) > 60, Substr(ContractElementsTR.List.Current.ANALYSIS_CONTRACT_ELEMENTS.Reply, 0, 60) + \"(...)\", ContractElementsTR.List.Current.ANALYSIS_CONTRACT_ELEMENTS.Reply)  ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(PhaseTR.List.Current.S_MEASURE.Description) > 100, Substr(PhaseTR.List.Current.S_MEASURE.Description, 0, 100) + \"...\", PhaseTR.List.Current.S_MEASURE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDecimal(Min(Min(GuarateesSum, 0.35*GetApprovedCalculatedIncentive.List.Current.ExecutionResumeFoundStr.Decimal1) / TextToDecimal(If(IncentiveTax > 0, IncentiveTax, 1)), Max(0.85*GetApprovedCalculatedIncentive.List.Current.ExecutionResumeFoundStr.Decimal1, 0)), 2, \".\", \",\")","type":"Text","functions":["FormatDecimal","Min","TextToDecimal","If","Max"]}
{"text":"FormatDecimal(Min(Min(GuarateesSum, 0.35*GetApprovedCalculatedIncentive.List.Current.ExecutionResumeFoundStr.Decimal1) / TextToDecimal(If(IncentiveTax > 0, IncentiveTax, 1)), Max(0.85*GetApprovedCalculatedIncentive.List.Current.ExecutionResumeFoundStr.Decimal1, 0)) * IncentiveTax, 2, \".\", \",\")","type":"Text","functions":["FormatDecimal","Min","TextToDecimal","If","Max"]}
{"text":"Min(GuarateesSum, 0.35*GetApprovedCalculatedIncentive.List.Current.ExecutionResumeFoundStr.Decimal1) / TextToDecimal(If(IncentiveTax > 0, IncentiveTax, 1))","type":"Decimal","functions":["Min","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If(GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal3 = 0, 0, GetAllExecutionFoundPresented.List.Current.ExecutionResumeFoundStr.Decimal3 * 100 / GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal3)), 2,\".\",\",\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If(GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal2 = 0, 0, GetAllExecutionFoundPresented.List.Current.ExecutionResumeFoundStr.Decimal2 * 100 / GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal2)), 2,\".\",\",\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If(GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal1 = 0, 0, GetAllExecutionFoundPresented.List.Current.ExecutionResumeFoundStr.Decimal1 * 100 / GetAllExecutionFoundApproved.List.Current.ExecutionResumeFoundStr.Decimal1)), 2,\".\",\",\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If(Length( ProjectAuditTR.List.Current.PROJECT_AUDIT.Fundamentation) > 50,Substr(ProjectAuditTR.List.Current.PROJECT_AUDIT.Fundamentation + \"(...)\",0,49),ProjectAuditTR.List.Current.PROJECT_AUDIT.Fundamentation)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length( ProjectAuditTR.List.Current.PROJECT_AUDIT.Actions) > 50,Substr(ProjectAuditTR.List.Current.PROJECT_AUDIT.Actions,0,49) + \"(...)\",ProjectAuditTR.List.Current.PROJECT_AUDIT.Actions)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetLastInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate <> NullDate(),Month(GetLastInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate) + \"-\" + Year(GetLastInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate),\"-\")","type":"Text","functions":["If","NullDate","Month","Year"]}
{"text":"If(GetFirstInvestmentClassificationDateWithoutExcepti.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate <> NullDate(),Month(GetFirstInvestmentClassificationDateWithoutExcepti.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate) + \"-\" + Year(GetFirstInvestmentClassificationDateWithoutExcepti.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate),\"-\") ","type":"Text","functions":["If","NullDate","Month","Year"]}
{"text":"If(GetFirstInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate <> NullDate(),\nMonth(GetFirstInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate) + \"-\" + Year(GetFirstInvestmentClassificationDate.List.Current.ANALYSIS_INVESTMENT_CLASSIFICATION.AcquisitionDate),\"-\") \n\n","type":"Text","functions":["If","NullDate","Month","Year"]}
{"text":"FormatDecimal((GetAnalysisProject.List.Current.ANALYSIS_PROJECT.Reward / TextToDecimal(If (GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin <> 0,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionMin,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismAux + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionAux)) * 100 ),2,\".\",\",\") + \" %\"","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(If (GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionMin <> 0,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionMin,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionAux)) /  TextToDecimal(If (GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin <> 0,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionMin,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismAux + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionAux)) * 100,2,\".\",\",\") + \" %\"","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal((TextToDecimal(If (GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin <> 0,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismAux)) / \nTextToDecimal(If (GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin <> 0,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismMin + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionMin,GetAnalysisProject.List.Current.ANALYSIS_PROJECT.TourismAux + GetAnalysisProject.List.Current.ANALYSIS_PROJECT.CredInstitutionAux))) * 100,2,\".\",\",\") + \"%\"\n","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If(DiffDays(ProjectDataR.ANALYSIS_PROJECT.TimingStartDate,ProjectDataR.ANALYSIS_PROJECT.TimingEndDate)/30 < 1,\"1\",Round(DiffDays(ProjectDataR.ANALYSIS_PROJECT.TimingStartDate,ProjectDataR.ANALYSIS_PROJECT.TimingEndDate)/30))","type":"Text","functions":["If","DiffDays","Round"]}
{"text":"IntegerToText(Hour(trDetails.List.Current.TransactionList.TransactionDate)) + \":\" + \nIntegerToText(Minute(trDetails.List.Current.TransactionList.TransactionDate)) + \":\" + \nIntegerToText(Second(trDetails.List.Current.TransactionList.TransactionDate))","type":"Text","functions":["IntegerToText","Hour","Minute","Second"]}
{"text":"If(\ntrDetails.List.Current.TransactionList.EntryDate <> NullDate(),\n\nIntegerToText(Hour(trDetails.List.Current.TransactionList.EntryDate)) + \":\" + \nIntegerToText(Minute(trDetails.List.Current.TransactionList.EntryDate)) + \":\" + \nIntegerToText(Second(trDetails.List.Current.TransactionList.EntryDate)),\n\n\"-\"\n)","type":"Text","functions":["If","NullDate","IntegerToText","Hour","Minute","Second"]}
{"text":"If(\ntrDetails.List.Current.TransactionList.EntryDate <> NullDate(),\nDateTimeToDate(trDetails.List.Current.TransactionList.EntryDate),\n\"-\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableReports.List.Current.REPORT_INSTANCE.MsgError) > 40,\nSubstr(TableReports.List.Current.REPORT_INSTANCE.MsgError ,0,40)+ \"...\",TableReports.List.Current.REPORT_INSTANCE.MsgError\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Day(GetEntrevista.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetEntrevista.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetEntrevista.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetEntrevista.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetEntrevista.List.Current.RESOURCE.Name","type":"Text","functions":["Day","Month","Hour","Minute"]}
{"text":"Day(GetPAC.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetPAC.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetPAC.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetPAC.List.Current.MEETING.StartDateTime) + \"m, na sala \" +GetPAC.List.Current.RESOURCE.Name","type":"Text","functions":["Day","Month","Hour","Minute"]}
{"text":"FormatDecimal(\n\nTextToDecimal(\nIf(\nTotalRequests > 0,\nTableRecords1.List.Current.StatSimpleList.Number / TotalRequests * 100,\n0\n)\n),\n\n2,\n\",\",\n\".\"\n) \n\n","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If(Length(TableRecords2.List.Current.ROLE.Description) > 0,\" - \", \"\") + Substr(TableRecords2.List.Current.ROLE.Description,0,70) + If(Length(TableRecords2.List.Current.ROLE.Description)>70,\" ...\", \"\")  ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableFeedback.List.Current.FEEDBACK.Message) = 0, \"- no message submitted -\",\nReplace(Replace(Replace(Replace(Substr(TableFeedback.List.Current.FEEDBACK.Message,0,30) + If(Length(TableFeedback.List.Current.FEEDBACK.Message)>30,\" ...\", \"\"), \"<br/>\", \" \"), Chr(13), \" \"), Chr(10), \" \"), Chr(9), \" \"))","type":"Text","functions":["If","Length","Replace","Substr","Chr"]}
{"text":"Replace(Replace(Replace(Replace(Substr(TableFeedback.List.Current.FEEDBACK.Message,0,30) + If(Length(TableFeedback.List.Current.FEEDBACK.Message)>30,\" ...\", \"\"), \"<br/>\", \" \"), Chr(13), \" \"), Chr(10), \" \"), Chr(9), \" \")","type":"Text","functions":["Replace","Substr","If","Length","Chr"]}
{"text":"\" '\" + Substr(GetMessage.List.Current.FEEDBACK.Message,0,20) + If(Length(GetMessage.List.Current.FEEDBACK.Message)>20,\" ...\", \"\") + \"'\"","type":"Text","functions":["Substr","If","Length"]}
{"text":"If((Abs(Round(TableRecords1.List.Current.QuadQcResult.pc2Diff * 100) / 100)) < 0.0001, 0, Round(TableRecords1.List.Current.QuadQcResult.pc2Diff * 100) / 100)","type":"Decimal","functions":["If","Abs","Round"]}
{"text":"If((Abs(Round(TableRecords1.List.Current.QuadQcResult.pc1Diff * 100) / 100)) < 0.0001, 0, Round(TableRecords1.List.Current.QuadQcResult.pc1Diff * 100) / 100)","type":"Decimal","functions":["If","Abs","Round"]}
{"text":"If(Abs(Round(TableRecords1.List.Current.CtDiffData.diff * 100) / 100) < 0.005, 0,\nRound(TableRecords1.List.Current.CtDiffData.diff * 100)/100)","type":"Decimal","functions":["If","Abs","Round"]}
{"text":"\"Pago em \" + Day(GetApplicationPayment.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(GetApplicationPayment.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(GetApplicationPayment.List.Current.PAYMENT.PaymentDate)\n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(TableRecords1.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(TableRecords1.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(TableRecords1.List.Current.PAYMENT.PaymentDate)\n","type":"Text","functions":["Day","Month","Year"]}
{"text":"If(GetMeetingInfo.List.Current.MEETING.StartDateTime = NullDate(),\"-\",Substr(GetMeetingInfo.List.Current.MEETING.StartDateTime,8,2) + \"/\" + Substr(GetMeetingInfo.List.Current.MEETING.StartDateTime,2,2) + \"/\" + Substr(GetMeetingInfo.List.Current.MEETING.StartDateTime,0,4) + \" das \" + Substr(GetMeetingInfo.List.Current.MEETING.StartDateTime,11,5) + \" Ã¡s \" + Substr(GetMeetingInfo.List.Current.MEETING.EndDateTime,11,5))\n\n","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(GetTrainerInterview.List.Current.MEETING.StartDateTime = NullDate(),\"-\",Substr(GetTrainerInterview.List.Current.MEETING.StartDateTime,8,2) + \"/\" + Substr(GetTrainerInterview.List.Current.MEETING.StartDateTime,2,2) + \"/\" + Substr(GetTrainerInterview.List.Current.MEETING.StartDateTime,0,4) + \" das \" + Substr(GetTrainerInterview.List.Current.MEETING.StartDateTime,11,5) + \" Ã¡s \" + Substr(GetTrainerInterview.List.Current.MEETING.EndDateTime,11,5))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"\"<script type=\"\"text/javascript\"\">\nvar _months=[\"+\"'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\"+\"];\nvar _weekDays=[\"+\"'Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'\"+\"];\n\nvar depDate = new Date('\"+Year(DepartEP)+\"/\"+Month(DepartEP)+\"/\"+Day(DepartEP)+\"');\nvar retDate = new Date('\"+Year(ReturnEP)+\"/\"+Month(ReturnEP)+\"/\"+Day(ReturnEP)+\"');\n\" + If (ReturnEP <> NullDate(), \"\n$q('#\"+DepartDate.Id+\"').html(_weekDays[depDate.getDay()]+', '+_months[depDate.getMonth()]+' '+depDate.getDate()+', '+depDate.getFullYear());\n$q('#\"+ReturnDate.Id+\"').html(_weekDays[retDate.getDay()]+', '+_months[retDate.getMonth()]+' '+retDate.getDate()+', '+retDate.getFullYear());\n\", \"\n$q('#\"+DepartDate2.Id+\"').html(_weekDays[depDate.getDay()]+', '+_months[depDate.getMonth()]+' '+depDate.getDate()+', '+depDate.getFullYear());\n\") + \"\n</script>\"","type":"Text","functions":["Year","Month","Day","If","NullDate"]}
{"text":"\"<td id='\"+Id+\"tabmonth\"+lrBestMonths.List.CurrentRowNumber+\"'\"+\n\" class='FareCal_Tab\"+If(Month(SelectedMonth)=Month(AddMonths(StartDate,PrepareCalendar.BestPrices.CurrentRowNumber)),\" FareCal_Tab_Selected'\",\"\")+\"'\"+\">\"\n+\"<a href='#wtmonth\"+lrBestMonths.List.CurrentRowNumber+\"'>\"\n","type":"Text","functions":["If","Month","AddMonths"]}
{"text":"\"<td id='\"+Id+\"tabmonth\"+lrBestMonths.List.CurrentRowNumber+\"'\"+\n\" class='FareCal_Tab\"+If(Month(SelectedMonth)=Month(AddMonths(StartDate,CC_GetCalendarFares.BestPrices.CurrentRowNumber)),\" FareCal_Tab_Selected'\",\"\")+\"'\"+\">\"\n+\"<a href='#wtmonth\"+lrBestMonths.List.CurrentRowNumber+\"'>\"\n","type":"Text","functions":["If","Month","AddMonths"]}
{"text":"\"<td id='tabmonth\"+lrBestMonths.List.CurrentRowNumber+\"'\"+\n\" class='FareCal_Tab\"+If(Month(SelectedMonth)=Month(AddMonths(CurrDate(),CC_GetCalendarFares.BestPrices.CurrentRowNumber)),\" FareCal_Tab_Selected'\",\"\")+\"'\"+\">\"\n+\"<a href='#wtmonth\"+lrBestMonths.List.CurrentRowNumber+\"'>\"\n","type":"Text","functions":["If","Month","AddMonths","CurrDate"]}
{"text":"If(MonthRL.BOF,\"<tr>\",\"\")+\n\"<td\" +\nIf(lrCal.List.Current.CalendarSearch.CalendarPrintDay = \"-1\" or Month(lrCal.List.Current.CalendarSearch.ContextDate) <> Month,\" class='FareCal_OtherMonth'\",\nIf(DayOfWeek(lrCal.List.Current.CalendarSearch.ContextDate)=0 or DayOfWeek(lrCal.List.Current.CalendarSearch.ContextDate)=6,\" class='FareCal_Weekend'\",\"\")) +\n\">\"\n","type":"Text","functions":["If","Month","DayOfWeek"]}
{"text":"If(Length(TableRecords1.List.Current.AIRPORTGROUP.AirportsCodes)> 30, Substr(TableRecords1.List.Current.AIRPORTGROUP.AirportsCodes,0,30)+ \"...\",TableRecords1.List.Current.AIRPORTGROUP.AirportsCodes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"\n<script type='text/javascript'>\n // initial adsense query\n google_afs_query = '\"+ EncodeJavaScript(Replace(Replace(AdSense_GetDefinitions.Definitions.AdSense.TextFormat,\"{0}\",Origin),\"{1}\",Destination))+ \"';\n \n function google_afs_request_done(google_ads)\n  {\n   /*\n    * Verify that there are actually ads to display. If not, hide the container. \n    */\n   var google_num_ads = google_ads.length;\n   if (google_num_ads <= 0)\n   {\n    return;\n   }\n\n  if ((google_num_ads <= '\"+(TotalDeals)+\"') && (document.getElementsByClassName('AdUnit_Div')[0] != null))\n  document.getElementsByClassName('AdUnit_Div')[0].hide();\n \n  if (google_num_ads > '\"+(TotalDeals + Site.Dest_GoogleAdsNumber_Bottom)+\"')\n  google_num_ads = '\"+(TotalDeals + Site.Dest_GoogleAdsNumber_Bottom)+\"';\n \n /* document.getElementsByClassName('AdUnit_Div')[0].Title = google_num_ads; */\n\n //  var wideAds = \"\"\"\";   // wide ad unit html text\n //  var wideAds2 = \"\"\"\";   // wide ad unit html text\n   var colNum = 1;\n         var showWideAds = false;\n         var showWideAds2 = false;\n\n   wideAds += '<table width=\"\"100%\"\" cellspacing=\"\"0\"\" cellpadding=\"\"0\"\" border=\"\"0\"\"><tbody>'\n\n   for(i = 0; i < google_num_ads; i++)\n   {\n   if(i>'\"+ (TotalDeals-1) +\"')\n   {\n      showWideAds = true;\n      if (colNum == 1){\n        wideAds+='<tr>';\n          wideAds+='<td class=\"\"Deals_LeftTD\"\">';\n      } else {\n          wideAds+='<td class=\"\"Deals_RightTD\"\">';\n      }\n\n      // render a wide ad\n      wideAds+='<div class=\"\"AdLink_Block\"\"><p class=\"\"AdLink_Title\"\"><a target=\"\"_blank\"\" rel=\"\"nofollow\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"AdLink_Title\"\">' + google_ads[i].line1 + '</span></a></p>' +\n        \n        '<span class=\"\"ad_text\"\">' + google_ads[i].line2 + '</span><br>' +\n        \n        '<a target=\"\"_blank\"\" rel=\"\"nofollow\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n        \n        '<span class=\"\"AdLink_Site\"\">' + google_ads[i].visible_url + '</span><br></a></div>';\n\n      wideAds+='</td>';\n      if (colNum == 2){\n        wideAds+='</tr>';\n        colNum = 1;  \n      } else {\n        colNum = 2;\n      }\n   }\n     else\n     {\n      showWideAds2 = true;\n      // render a wide ad\n      wideAds2+='<div class=\"\"AdLink_Block\"\"><p class=\"\"AdLink_Title\"\"><a target=\"\"_blank\"\" rel=\"\"nofollow\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"AdLink_Title\"\">' + google_ads[i].line1 + '</span></a></p>' +\n        \n        '<span class=\"\"ad_text\"\">' + google_ads[i].line2 + '</span><br>' +\n        \n        '<a target=\"\"_blank\"\" rel=\"\"nofollow\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n        \n        '<span class=\"\"AdLink_Site\"\">' + google_ads[i].visible_url + '</span><br></a></div>';\n\n     }\n   }\n if (colNum == 2) {\n   wideAds+='<td></td></tr>';\n }\n       wideAds+='</tbody></table>';\n\n if (showWideAds) {\n  document.getElementById(\"\"wide_ad_unit\"\").innerHTML = wideAds;\n  $q('#\"+GoogleAdsMainColWrapperId+\"').show();\n }\n\n if (showWideAds2) {\n  document.getElementById(\"\"wide_ad_unit2\"\").innerHTML = wideAds2;\n  $q('#\"+GoogleAdsSideColWrapperId+\"').show();\n }\n \n  }\n  \n  google_afs_ad = 'w\" + 100 + \"'; // specify the number of ads you are requesting\n  google_afs_channel = '\"+AdSense_GetDefinitions.Definitions.AdSense.Channel+\"';\n  google_afs_client = '\"+EncodeJavaScript(If(AdSense_GetDefinitions.Definitions.AdSense.PublisherId <> \"\",  AdSense_GetDefinitions.Definitions.AdSense.PublisherId, GetAdSenseInfo.ClientId))+\"'; // substitute your client ID\n  google_afs_adtest = '\"+If(GetAdSenseInfo.IsInTestingMode,\"on\",\"off\")+\"';\n\n  // google_afs_ie = 'utf8'; // select input encoding scheme\n  google_afs_oe = 'utf8'; // select output encoding scheme\n\n</script>\n\n\n\n<script language='JavaScript' src='http://www.google.com/afsonline/show_afs_ads.js'>\n</script>\n\"\n","type":"Text","functions":["EncodeJavaScript","Replace","If"]}
{"text":"\"\n<script type='text/javascript'>\n // initial adsense query\n google_afs_query = '\"+ EncodeJavaScript(Replace(Replace(AdSense_GetDefinitions.Definitions.AdSense.TextFormat,\"{0}\",Origin),\"{1}\",Destination))+ \"';\n \n function google_afs_request_done(google_ads)\n  {\n   /*\n    * Verify that there are actually ads to display. If not, hide the container. \n    */\n   var google_num_ads = google_ads.length;\n   if (google_num_ads <= 0) {\n    return;\n   }\n\n  if ((google_num_ads <= '\"+(TotalDeals)+\"') && (document.getElementsByClassName('AdUnit_Div')[0] != null))\n  document.getElementsByClassName('AdUnit_Div')[0].hide();\n \n \n   var colNum = 1;\n         var showWideAds = false;\n   wideAds += '<table width=\"\"100%\"\" cellspacing=\"\"0\"\" cellpadding=\"\"0\"\" border=\"\"0\"\"><tbody>';\n\n   for(i = 0; i < google_num_ads; i++)\n   {\n   if(i<'\"+ (TotalDeals) +\"')\n   {\n      showWideAds = true;\n      if (colNum == 1){\n        wideAds+='<tr>';\n        if (('\"+ (TotalDeals) +\"' > 1) && (google_num_ads > 1)) {\n            wideAds+='<td class=\"\"Deals_LeftTD\"\">';\n        } else {\n          wideAds+='<td>';\n        }\n      } else {\n          wideAds+='<td class=\"\"Deals_RightTD\"\">';\n      }\n\n      // render a wide ad\n      wideAds+='<div class=\"\"AdLink_Block\"\"><p class=\"\"AdLink_Title\"\"><a target=\"\"_blank\"\" rel=\"\"nofollow\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"AdLink_Title\"\">' + google_ads[i].line1 + '</span></a></p>' +\n        \n        '<span class=\"\"ad_text\"\">' + google_ads[i].line2 + '</span><br>' +\n        \n        '<a target=\"\"_blank\"\" rel=\"\"nofollow\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n        \n        '<span class=\"\"AdLink_Site\"\">' + google_ads[i].visible_url + '</span><br></a></div>';\n\n      wideAds+='</td>';\n      if (colNum == 2){\n        wideAds+='</tr>';\n        colNum = 1;  \n      } else {\n        colNum = 2;\n      }\n     }\n   }\n\n if (colNum == 2) {\n   wideAds+='<td></td></tr>';\n }\n       wideAds+='</tbody></table>';\n\n if (showWideAds) {\n  document.getElementById(\"\"wide_ad_unit\"\").innerHTML = wideAds;\n  $q('#\"+GoogleAdsWrapperId+\"').show();\n }\n  }\n  \n  google_afs_ad = 'w\" + 100 + \"'; // specify the number of ads you are requesting\n  google_afs_channel = '\"+AdSense_GetDefinitions.Definitions.AdSense.Channel+\"';\n  google_afs_client = '\"+EncodeJavaScript(If(AdSense_GetDefinitions.Definitions.AdSense.PublisherId <> \"\",  AdSense_GetDefinitions.Definitions.AdSense.PublisherId, GetAdSenseInfo.ClientId))+\"'; // substitute your client ID\n  google_afs_adtest = '\"+If(GetAdSenseInfo.IsInTestingMode,\"on\",\"off\")+\"';\n\n  // google_afs_ie = 'utf8'; // select input encoding scheme\n  google_afs_oe = 'utf8'; // select output encoding scheme\n\n</script>\n\n\n\n<script language='JavaScript' src='http://www.google.com/afsonline/show_afs_ads.js'>\n</script>\n\"\n","type":"Text","functions":["EncodeJavaScript","Replace","If"]}
{"text":"\"\n<script type='text/javascript'>\n // initial adsense query\n google_afs_query = '\"+ EncodeJavaScript(Replace(Replace(AdSense_GetDefinitions.Definitions.AdSense.TextFormat,\"{0}\",Origin),\"{1}\",Destination))+ \"';\n \n function google_afs_request_done(google_ads){\n   // Verify that there are actually ads to display. If not, hide the container.  \n   var google_num_ads = google_ads.length;\n   if (google_num_ads <= 0)\n   {\n    $q('#\"+AdUnitContainer.Id+\"').hide();\n    return;\n   }\n\n if (google_num_ads > '\"+(MaxAdsOnBottom + TotalDeals)+\"')\n  google_num_ads = '\"+(MaxAdsOnBottom + TotalDeals)+\"'; \n  \n   var narrowAds = \"\"\"\";   // narrow ad unit html text\n\n   for(i = 0; i < google_num_ads; i++){\n     if (google_ads[i].type==\"\"text/wide\"\"){\n      // render a wide ad\n      wideAds+='<div class=\"\"AdLink_Block\"\"><p class=\"\"AdLink_Title\"\"><a target=\"\"_blank\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"AdLink_Title\"\">' + google_ads[i].line1 + '</span></a></p>' +\n        \n        '<span class=\"\"ad_text\"\">' + google_ads[i].line2 + '</span><br>' +\n        \n        '<a target=\"\"_blank\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n        \n        '<span class=\"\"AdLink_Site\"\">' + google_ads[i].visible_url + '</span><br></a></div>';\n    }\n\n    else\n    {\n      // render a narrow ad\n      narrowAds+='<div class=\"\"adsense_ad\"\"><a target=\"\"_blank\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"ad_line1\"\">' + google_ads[i].line1 + '</span></a><br>' +\n\n        '<span class=\"\"ad_text\"\">' + google_ads[i].line2 + '</span><br>' +\n\n        '<span class=\"\"ad_text\"\">' + google_ads[i].line3 + '</span><br>' +\n\n        '<a target=\"\"_blank\"\" style=\"\"text-decoration:none\"\" onmouseover=\"\"javascript:window.status=\\'' +\n        google_ads[i].url + '\\';return true;\"\" ' +\n        'onmouseout=\"\"javascript:window.status=\\'\\';return true;\"\" ' +\n        'href=\"\"' + google_ads[i].url + '\"\">' +\n\n        '<span class=\"\"ad_url\"\">' + google_ads[i].visible_url + '</span><br><br></a></div>';\n    }\n   }\n\n document.getElementById(\"\"wide_ad_unit\"\").innerHTML = wideAds;\n \n  }\n  \n  google_afs_ad = 'w\" + TotalDeals + \"'; // specify the number of ads you are requesting\n  google_afs_channel = '\"+AdSense_GetDefinitions.Definitions.AdSense.Channel+\"';\n  google_afs_client = '\"+EncodeJavaScript(If(AdSense_GetDefinitions.Definitions.AdSense.PublisherId <> \"\",  AdSense_GetDefinitions.Definitions.AdSense.PublisherId, Site.AdSense_ClientId))+\"'; // substitute your client ID\n  google_afs_adtest = '\"+If(Site.AdSense_IsInTestingMode,\"on\",\"off\")+\"';\n\n  google_afs_oe = 'utf8'; // select output encoding scheme\n\n</script> \n\"\n+ If(RunJS,\n\"<script language='JavaScript' src='http://www.google.com/afsonline/show_afs_ads.js'></script>\n\",\"\") \n\n","type":"Text","functions":["EncodeJavaScript","Replace","If"]}
{"text":"\"<script>\nif(\"+ToLower(BooleanToText((MessageId=NullIdentifier() or  HasResponse) and\nGetMessageIfReply.Count = 0))+\n\"){\n \"+If(Receiver=-3 and ((MessageId=NullIdentifier() or  HasResponse) and not(SendEmail) and GetMessageIfReply.Count = 0),\n  \"document.getElementById('\"+Btn_Send.Id+\"').value='Imprimir';\",If(((MessageId=NullIdentifier() or  HasResponse) and\n  GetMessageIfReply.Count = 0) and not(SendEmail),\"document.getElementById('\"+Btn_Send.Id+\"').value='Enviar';\",If(SendEmail,\"document.getElementById('\"+Btn_Send.Id+\"').value='Enviar e-mail';\",\"document.getElementById('\"+Btn_Send.Id+\"').value='Enviar';\")))+\" }\n</script>\"","type":"Text","functions":["ToLower","BooleanToText","NullIdentifier","If"]}
{"text":"If(Length(AdditionalAtt_TR.List.Current.S_ADDITIONAL_CLARIFICATION_ATTACH.Name) > 100, Substr(AdditionalAtt_TR.List.Current.S_ADDITIONAL_CLARIFICATION_ATTACH.Name,0,100)+\"...\",AdditionalAtt_TR.List.Current.S_ADDITIONAL_CLARIFICATION_ATTACH.Name) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(\"<div id=\"\"@name@Container\"\" class=\"\"yui-skin-sam\"\"></div>\n<script>\nvar @name@InitFunc = function(){\n YAHOO.namespace('TZOO.calendar');  \n\n YAHOO.TZOO.calendar.skipSelect = false;\n\n function handle@name@Select(){\n  if(!YAHOO.TZOO.calendar.skipSelect){\n   var dateInput = document.getElementById('\" + InputId + \"');\n   var date = YAHOO.TZOO.calendar.@name@.getSelectedDates()[0];\n   YAHOO.TZOO.calendar.@name@.hide();\n   YAHOO.util.Event.removeListener(document,'mousedown',_onblur@name@);\n   dateInput.value = (date.getMonth()+1)+'/'+date.getDate()+'/'+(date.getFullYear());\n   dateInput.onchange();\n  }\n }\n\n YAHOO.TZOO.calendar.@name@Init = function(){\n  var navConfig = { \n   strings : { \n    month: 'Choose Month', \n    year: 'Enter Year', \n    submit: 'Ok', \n    cancel: 'Cancel', \n    invalidYear: 'Please enter a valid year' \n   }, \n   monthFormat: YAHOO.widget.Calendar.SHORT, \n   initialFocus: 'year' \n  };\n  YAHOO.TZOO.calendar.@name@ = new YAHOO.widget.CalendarGroup( '@name@', '@name@Container',\n   {PAGES:\" + Pages + \", \n   pagedate:'\" + InitalMonth + \"', \n   mindate:'\" + Month(MinDate) + \"/\" + Day(MinDate) + \"/\" + Year(MinDate) + \"', \n   maxdate:'\" + Month(MaxDate) + \"/\" + Day(MaxDate) + \"/\" + Year(MaxDate) + \"',\" + \n   If(Title <> \"\", \"title:'\" + Title + \"',\", \"\") +\n   \"close:false,\n   iframe: true,\n   width:'16em'}); \n  YAHOO.TZOO.calendar.@name@.selectEvent.subscribe(handle@name@Select, YAHOO.TZOO.calendar.@name@, true);\n  YAHOO.TZOO.calendar.@name@.render(); \n }\n\n function _onblur@name@(event){\n  var container = document.getElementById('@name@Container');\n  var elem = YAHOO.util.Event.getTarget(event);\n  for (; elem != null && elem != document && elem != container; elem = elem.parentNode)\n   ;\n  if(elem == document){\n   YAHOO.TZOO.calendar.@name@.hide();\n   YAHOO.util.Event.removeListener(document,'mousedown',_onblur@name@);\n  }\n }\n\n YAHOO.TZOO.calendar.@name@Show = function(event){\n  if(!YAHOO.TZOO.calendar.@name@) YAHOO.TZOO.calendar.@name@Init();\n  var d = document.getElementById('\" + InputId + \"').value;\n  var newDate = new Date(d);\n  \n  var maxDate = new Date(YAHOO.TZOO.calendar.@name@.cfg.config.maxdate.value);\n  var minDate = new Date(YAHOO.TZOO.calendar.@name@.cfg.config.mindate.value);\n  if( newDate > maxDate){\n   d = YAHOO.TZOO.calendar.@name@.cfg.config.maxdate.value;\n   newDate = maxDate;\n  }\n  if( newDate < minDate ){\n   d = YAHOO.TZOO.calendar.@name@.cfg.config.mindate.value;\n   newDate = minDate;\n  }\n\n  YAHOO.TZOO.calendar.skipSelect = true;\n  if ( d != '' && newDate.getDate() >= 0 ){\n   YAHOO.TZOO.calendar.@name@.select(d);\n   YAHOO.TZOO.calendar.@name@.setMonth( newDate.getMonth() );\n   YAHOO.TZOO.calendar.@name@.setYear( newDate.getFullYear() );\n  }\n  \n  YAHOO.TZOO.calendar.skipSelect = false;\n  YAHOO.TZOO.calendar.@name@.render();\n  YAHOO.TZOO.calendar.@name@.show();\n  var region = YAHOO.util.Dom.getRegion('\" + InputId + \"');\n  YAHOO.util.Dom.setXY('@name@Container', [region.left,region.bottom]);\n  YAHOO.util.Event.on(document,'mousedown',_onblur@name@);\n } \n \n YAHOO.util.Event.addListener('\" + ImgId + \"', 'click', YAHOO.TZOO.calendar.@name@Show, YAHOO.TZOO.calendar.@name@, true);\n YAHOO.util.Event.addListener('\" + InputId + \"', 'click', YAHOO.TZOO.calendar.@name@Show, YAHOO.TZOO.calendar.@name@, true);\n}\n\nif (document.addEventListener) {\n window.addEventListener('load', @name@InitFunc, false);\n} else {\n window.attachEvent('onload', @name@InitFunc);\n}\n\n</script>\", \"@name@\", Name)","type":"Text","functions":["Replace","Month","Day","Year","If"]}
{"text":"Replace(\"<div id=\"\"@name@Container\"\" class=\"\"yui-skin-sam\"\"></div>\n<script>\n YAHOO.namespace('TZOO.calendar');  \n \n YAHOO.TZOO.calendar.skipSelect = false;\n \n function handle@name@Select(){\n  if(!YAHOO.TZOO.calendar.skipSelect){\n   var dateInput = document.getElementById('\" + InputId + \"');\n   var date = YAHOO.TZOO.calendar.@name@.getSelectedDates()[0];\n   YAHOO.TZOO.calendar.@name@.hide();\n   YAHOO.util.Event.removeListener(document,'mousedown',_onblur@name@);\n   dateInput.value = (date.getMonth()+1)+'/'+date.getDate()+'/'+(date.getFullYear());\n   dateInput.onchange();\n  }\n }\n \n YAHOO.TZOO.calendar.@name@Init = function(){\n  var navConfig = { \n   strings : { \n    month: 'Choose Month', \n    year: 'Enter Year', \n    submit: 'Ok', \n    cancel: 'Cancel', \n    invalidYear: 'Please enter a valid year' \n   }, \n   monthFormat: YAHOO.widget.Calendar.SHORT, \n   initialFocus: 'year'\n  };\n  YAHOO.TZOO.calendar.@name@ = new YAHOO.widget.CalendarGroup( '@name@', '@name@Container',\n   {PAGES:\" + Pages + \", \n   pagedate:'\" + InitalMonth + \"', \n   mindate:'\" + Month(MinDate) + \"/\" + Day(MinDate) + \"/\" + Year(MinDate) + \"', \n   maxdate:'\" + Month(MaxDate) + \"/\" + Day(MaxDate) + \"/\" + Year(MaxDate) + \"',\" + \n   If(Title <> \"\", \"title:'\" + Title + \"',\", \"\") +\n   \"close:false,\n   iframe: true,\n   width:'16em', navigator: navConfig\n   }); \n  YAHOO.TZOO.calendar.@name@.selectEvent.subscribe(handle@name@Select, YAHOO.TZOO.calendar.@name@, true);\n  YAHOO.TZOO.calendar.@name@.render(); \n }\n \n function _onblur@name@(event){\n  var container = document.getElementById('@name@Container');\n  var elem = YAHOO.util.Event.getTarget(event);\n  for (; elem != null && elem != document && elem != container; elem = elem.parentNode)\n   ;\n  if(elem == document){\n   YAHOO.TZOO.calendar.@name@.hide();\n   YAHOO.util.Event.removeListener(document,'mousedown',_onblur@name@);\n  }\n }\n \n YAHOO.TZOO.calendar.@name@Show = function(event){\n  if(!YAHOO.TZOO.calendar.@name@) YAHOO.TZOO.calendar.@name@Init();\n  var d = document.getElementById('\" + InputId + \"').value;\n  var newDate = new Date(d);\n  \n  YAHOO.TZOO.calendar.skipSelect = true;\n  if ( d != '' && newDate.getDate() >= 0 ){\n   YAHOO.TZOO.calendar.@name@.select(d);\n   YAHOO.TZOO.calendar.@name@.setMonth( newDate.getMonth() );\n   YAHOO.TZOO.calendar.@name@.setYear( newDate.getFullYear() );\n  }\n  \n  YAHOO.TZOO.calendar.skipSelect = false;\n  YAHOO.TZOO.calendar.@name@.render();\n  YAHOO.TZOO.calendar.@name@.show();\n  var region = YAHOO.util.Dom.getRegion('\" + InputId + \"');\n  YAHOO.util.Dom.setXY('@name@Container', [region.left,region.bottom]);\n  YAHOO.util.Event.on(document,'mousedown',_onblur@name@);\n  \n  newCalNavEvents();\n }\n \n function newCalEventsTimed() {\n  setTimeout('newCalEvents();', 100);\n }\n \n function newCalEvents() {\n  var navLinks = YAHOO.util.Dom.getElementsByClassName('calnav', 'a', '@name@Container');\n  for(var i = 0; i < navLinks.length; i++){\n   navLinks[i].id = 'navLink' + i;\n   YAHOO.util.Event.removeListener('navLink' + i, 'click');\n   YAHOO.util.Event.addListener('navLink' + i, 'click', showMonthsMenu@name@, new Number(i) );\n  }\n }\n \n function newCalNavEventsTimed() {\n  setTimeout('newCalNavEvents();', 100);\n }\n \n function newCalNavEvents() {\n  var calElem = YAHOO.TZOO.calendar.@name@;\n  var leftArrow = YAHOO.util.Dom.getElementsByClassName(calElem.Style.CSS_NAV_LEFT, 'a', calElem.oDomContainer)[0];\n  var rightArrow = YAHOO.util.Dom.getElementsByClassName(calElem.Style.CSS_NAV_RIGHT, 'a', calElem.oDomContainer)[0];\n  leftArrow.id = 'leftArrowId';\n  rightArrow.id = 'rightArrowId';\n  YAHOO.util.Event.addListener('leftArrowId', 'click', newCalNavEventsTimed);\n  YAHOO.util.Event.addListener('rightArrowId', 'click', newCalNavEventsTimed);\n  newCalEventsTimed();\n }\n var oMenu = null;\n function showMonthsMenu@name@(event, num){\n  var linkXY = YAHOO.util.Dom.getXY('navLink' + num);\n  \n  if(oMenu) {\n   try {\n    oMenu.clearContent();\n    oMenu.destroy();\n   } catch(e) {}\n  }\n  \n  oMenu = new YAHOO.widget.Menu('navMenu', { xy:linkXY });\n  oMenu.clearContent();\n  setMonths(oMenu);\n  oMenu.render('@name@_' + num);\n  oMenu.show();\n }\n \n function setMonths(oMenu) {\n  var monthsLabels = ['January', 'February', 'March', 'April', 'May', 'June',\n     'July', 'August', 'September', 'October', 'November', 'December'];\n  \n  for(var index = 0; index < monthsLabels.length; index++) {\n   oMenu.addItem({ text: monthsLabels[index], url: 'javascript:setMonth(' + index + ');' });\n  }\n }\n \n function setMonth(num) {\n  YAHOO.TZOO.calendar.@name@.setMonth(num);\n  YAHOO.TZOO.calendar.@name@.render();\n  newCalNavEventsTimed();\n }\n \n YAHOO.util.Event.addListener('\" + ImgId + \"', 'click', YAHOO.TZOO.calendar.@name@Show, YAHOO.TZOO.calendar.@name@, true);\n YAHOO.util.Event.addListener('\" + InputId + \"', 'click', YAHOO.TZOO.calendar.@name@Show, YAHOO.TZOO.calendar.@name@, true);\n \n</script>\", \"@name@\", Name)\n","type":"Text","functions":["Replace","Month","Day","Year","If"]}
{"text":"If(Length(AuditList.List.Current.AUDIT.Description) > 25,  Substr(AuditList.List.Current.AUDIT.Description,0,25) + \"...\",\nAuditList.List.Current.AUDIT.Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( PhaseId <> NullIdentifier(), EditPhaseRecord.Record.PHASE.CreationDate, CurrDate())","type":"Date","functions":["If","NullIdentifier","CurrDate"]}
{"text":"Day(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.ActualDateToSolve) \n\n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ShowRecord1.Record.RFS.EstimatedDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.EstimatedDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.EstimatedDateToSolve) \n\n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.ReminderDate) \n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ShowRecord1.Record.RFS.DueDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.DueDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.DueDate) ","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.ActualDateToSolve) \n","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.ReminderDate) ","type":"Text","functions":["Day","Month","Year"]}
{"text":"If(TableRecordsRFS.List.Current.RFS.DueDate=NullDate(),\"\",DateTimeToDate(TableRecordsRFS.List.Current.RFS.DueDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsRFS.List.Current.RFS.RaisedDate=NullDate(),\"\",DateTimeToDate(TableRecordsRFS.List.Current.RFS.RaisedDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(List.Current.RFS.ActualDateToSolve=NullDate(),\"\",If(List.Current.STATE.ExitPoint=True,DateTimeToDate(List.Current.RFS.ActualDateToSolve),\"\"))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TextToDate(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItemExtraFields.ExtraField4)= NullDate(), \"\", TextToDate(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItemExtraFields.ExtraField4))","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivitySlaDueDate  <> NullDate() and DiffDays(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivitySlaDueDate, CurrDateTime())>0, DiffDays(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivitySlaDueDate, CurrDateTime()), \"\")","type":"Text","functions":["If","NullDate","DiffDays","CurrDateTime"]}
{"text":"If(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivityStartDate=NullDate(),\"\",DateToText(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivityStartDate))","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"If(TextToDate(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItemExtraFields.ExtraField3)= NullDate(), \"\", TextToDate(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItemExtraFields.ExtraField3))","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivitySlaDueDate =NullDate(),\"\",DateToText(Lbpm_GetUserActivities.OutInbox.Lbpm_UserInbox.UserActivities.Current.Lbpm_UserInboxItem.ActivitySlaDueDate))","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"If(Session.Activities_List.Filter.ViewAs <> NullIdentifier(), \n\"( as \" + If(Session.Activities_List.Filter.ViewAs = IntegerToIdentifier(-1), \"Team Leader\",getPermission.List.Current.PERMISSION_MASTER.Description)  + \" ) \", \"\")","type":"Text","functions":["If","NullIdentifier","IntegerToIdentifier"]}
{"text":"If(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallStartDate=tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallEndDate,\n\nSubstr(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallStartDate,0,Length(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallStartDate)-3),\n\nSubstr(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallStartDate,0,Length(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallStartDate)-3)+ \"\"+NewLine()+\nSubstr(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallEndDate,0,Length(tbrPosteponed.List.Current.INTAKE_MAIN.OutboundCallEndDate)-3))","type":"Text","functions":["If","Substr","Length","NewLine"]}
{"text":"If(ShowRecord1.Record.CORRESPONDENCE.IsEventTimeSet,Substr(ShowRecord1.Record.CORRESPONDENCE.EventTime,0, Length(ShowRecord1.Record.CORRESPONDENCE.EventTime)-3),\"\") ","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(ShowRecord1.Record.DOCUMENT.ProductionDate=NullDate(),\"\",DateTimeToDate(ShowRecord1.Record.DOCUMENT.ProductionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(IM.Record.NNINTAKE_MAIN.IsEventTimeKnow,Substr(IM.Record.NNINTAKE_MAIN.EventTime,0,Length(IM.Record.NNINTAKE_MAIN.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(IM.Record.INTAKE_MAIN.IsEventTimeKnow,Substr(IM.Record.INTAKE_MAIN.EventTime,0,Length(IM.Record.INTAKE_MAIN.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"trActAuto.List.Current.MY_TREE_ACTIVITIES.ElementName + \nIf(trActAuto.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate=NullDate(),\"\",\n\" [\" + DateTimeToDate(trActAuto.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate) + \"]\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(1=0,\nIf(trActMan.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate <> NullDate(),\"<i title='Due Date: \" + DateTimeToDate(trActMan.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate) +\"'>[\"+ DiffDays(CurrDate(),trActMan.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate)+\"]</i>\",\"\") ,\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate","DiffDays","CurrDate"]}
{"text":"trActMan.List.Current.MY_TREE_ACTIVITIES.ActionName + \nIf(trActMan.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate=NullDate(),\"\",\n\" [\" + DateTimeToDate(trActMan.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate) + \"]\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(IM.Record.MPINTAKE_MAIN.IsEventTimeKnow,Substr(IM.Record.MPINTAKE_MAIN.EventTime,0,Length(IM.Record.MPINTAKE_MAIN.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(AssignTableRecord.List.Current.Assignment.TypeOfDamage<>NullTextIdentifier(),\nIf(IdentifierToText(AssignTableRecord.List.Current.Assignment.TypeOfDamage) = \"MD\", \"Material\",\nIf(IdentifierToText(AssignTableRecord.List.Current.Assignment.TypeOfDamage) = \"GL\",\"Material (Glass)\",\nIf(IdentifierToText(AssignTableRecord.List.Current.Assignment.TypeOfDamage) = \"OS\",\"Material (OneSide)\",\n\"Bodily\"))),\"\")","type":"Text","functions":["If","NullTextIdentifier","IdentifierToText"]}
{"text":"If(AssignTableRecord.List.Current.Assignment.TypeOfHandling<>NullTextIdentifier(),\nIf(AssignTableRecord.List.Current.Assignment.TypeOfHandling=TextToIdentifier(\"L\"),\"Liability\",\"Recovery\"),\"\")","type":"Text","functions":["If","NullTextIdentifier","TextToIdentifier"]}
{"text":"If(ShowRecord1.Record.POLICY_T1.PolicyDateChange <> NullDate(), DateTimeToDate(ShowRecord1.Record.POLICY_T1.PolicyDateChange),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(\n TableRecords1.List.Current.POLICY_T1.PolicyDateChange = NullDate(),\n \"n/a\",\n DateTimeToDate(TableRecords1.List.Current.POLICY_T1.PolicyDateChange)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsDisability.List.Current.OBJECT_PERSON_DISABILITY.DateTo<> NullDate(),\nDiffDays(TableRecordsDisability.List.Current.OBJECT_PERSON_DISABILITY.DateFrom,TableRecordsDisability.List.Current.OBJECT_PERSON_DISABILITY.DateTo),\nDiffDays(TableRecordsDisability.List.Current.OBJECT_PERSON_DISABILITY.DateFrom,CurrDate()))","type":"Integer","functions":["If","NullDate","DiffDays","CurrDate"]}
{"text":"Replace(Substr(TableRecords1.List.Current.DocumentInformation.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(TableRecords1.List.Current.DocumentInformation.OutboundDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DocumentInformation.OutboundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.DocumentInformation.InboundDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DocumentInformation.InboundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.DocumentInformation.ProductionDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DocumentInformation.ProductionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"\n<script language='javascript'>\n\n\"+If(erIntakeMain.Record.MPINTAKE_MAIN.InsuranceBranchId <> IntegerToIdentifier(TextToInteger(Get_MotorCarLiability.Value)),\n\" document.getElementById('\" + tdPolicyNumberEx.Id + \"').className = 'Intake_Mandatory';\n document.getElementById('\" + tdPolicyPlateEx.Id + \"').style.display = 'none';\n document.getElementById('\" + tdPolicyPlateTx.Id + \"').style.display = 'none';\n\n \"+If(not PolicySelected,\"\n  chkNotInCar = document.getElementById('\" + chkNotInCar.Id + \"').checked;\n  rdInsured = document.getElementById('\" + rdInsured.Id + \"').checked;\n\n  if(!chkNotInCar && rdInsured)\n   document.getElementById('\" + LicencePlate.Id + \"').disabled = true;\n  else\n   document.getElementById('\" + LicencePlate.Id + \"').disabled = false;\",\"\"),\n\" \n document.getElementById('\" + tdPolicyNumberEx.Id + \"').className = 'EditRecord_Caption';\n document.getElementById('\" + tdPolicyPlateEx.Id + \"').style.display = 'block';\n document.getElementById('\" + tdPolicyPlateTx.Id + \"').style.display = 'block';\")+\n\"\n</script>\n\"","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger"]}
{"text":"If(GetIntake.List.Current.MPINTAKE_MAIN.InsuranceBranchId = IntegerToIdentifier(TextToInteger(Get_NNFire.Value)),\" - Fire\",If(GetIntake.List.Current.MPINTAKE_MAIN.InsuranceBranchId = IntegerToIdentifier(TextToInteger(Get_NNLiability.Value)),\" - Liability\",If(GetIntake.List.Current.MPINTAKE_MAIN.InsuranceBranchId = IntegerToIdentifier(TextToInteger(Get_NNTransport.Value)),\" - Transport\",\" - Travel\"))) ","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger"]}
{"text":"If(EditRecordEvent.Record.EVENT.OpenDateTime<> NullDate(),Substr(DateTimeToTime(EditRecordEvent.Record.EVENT.OpenDateTime),0,5),\"\")","type":"Text","functions":["If","NullDate","Substr","DateTimeToTime"]}
{"text":"If(EditRecordEvent.Record.EVENT.OpenDateTime<>NullDate(),DateTimeToDate(EditRecordEvent.Record.EVENT.OpenDateTime),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Replace(Substr(TableRecords1.List.Current.DOCUMENT2.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(Length(TableRecords1.List.Current.REMINDER.Remark) > 50,Substr(TableRecords1.List.Current.REMINDER.Remark,0,47) + \"...\",TableRecords1.List.Current.REMINDER.Remark)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords1.List.Current.DOCUMENT2.OutBoundDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DOCUMENT2.OutBoundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.DOCUMENT2.InBoundDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DOCUMENT2.InBoundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.DOCUMENT2.ProductionDate = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.DOCUMENT2.ProductionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(\n    Length(SettingsTR.List.Current.APP_SETTING.Description) > 50,\n    Substr(SettingsTR.List.Current.APP_SETTING.Description,0,50) + \"...\",\n    SettingsTR.List.Current.APP_SETTING.Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetComputerById.List.Current.Computer.Id = NullIdentifier(), CurrDate(), DateTimeToDate(GetComputerById.List.Current.Computer.LastUpdatedOn))","type":"Date","functions":["If","NullIdentifier","CurrDate","DateTimeToDate"]}
{"text":"If( Length(PeripheralsHistoryTable.List.Current.PeripheralsHistory.NewValue) > FieldMaxLength,\nSubstr(PeripheralsHistoryTable.List.Current.PeripheralsHistory.NewValue, 0, FieldMaxLength-3)+ \"...\", PeripheralsHistoryTable.List.Current.PeripheralsHistory.NewValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(PeripheralsHistoryTable.List.Current.PeripheralsHistory.PreviousValue) > FieldMaxLength,\nSubstr(PeripheralsHistoryTable.List.Current.PeripheralsHistory.PreviousValue, 0, FieldMaxLength-3)+ \"...\", PeripheralsHistoryTable.List.Current.PeripheralsHistory.PreviousValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.NewValue) > FieldMaxLength,\nSubstr(ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.NewValue, 0, FieldMaxLength-3)+ \"...\", ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.NewValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.PreviousValue) > FieldMaxLength,\nSubstr(ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.PreviousValue, 0, FieldMaxLength-3)+ \"...\", ComputerSystemHistoryTable.List.Current.ComputerSystemHistory.PreviousValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectTable.List.Current.Project_ListExtended.Name) <= 16,\nProjectTable.List.Current.Project_ListExtended.Name,\nSubstr(ProjectTable.List.Current.Project_ListExtended.Name, 0, 16) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"\nIf( Length(GetProjectHistories.List.Current.ProjectHistory.NewValue)>FieldMaxLength,Substr(GetProjectHistories.List.Current.ProjectHistory.NewValue,0,FieldMaxLength-3)+\"...\",GetProjectHistories.List.Current.ProjectHistory.NewValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.ProjectHistory.NewValue)>FieldMaxLength,Substr(ProjectHistoryTable.List.Current.ProjectHistory.NewValue,0,FieldMaxLength-3)+\"...\",ProjectHistoryTable.List.Current.ProjectHistory.NewValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.ProjectHistory.PreviousValue)>FieldMaxLength,Substr(ProjectHistoryTable.List.Current.ProjectHistory.PreviousValue,0,FieldMaxLength-3)+\"...\",ProjectHistoryTable.List.Current.ProjectHistory.PreviousValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.User.Name)>FieldMaxLength,Substr(ProjectHistoryTable.List.Current.User.Name,0,FieldMaxLength-3)+\"...\",ProjectHistoryTable.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.Project.ProjectName)>FieldMaxLength,Substr(ProjectHistoryTable.List.Current.Project.ProjectName,0,FieldMaxLength-3)+\"...\",ProjectHistoryTable.List.Current.Project.ProjectName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectTable.List.Current.Project_ListExtended_FistPLD.Name)<=16,ProjectTable.List.Current.Project_ListExtended_FistPLD.Name,Substr(ProjectTable.List.Current.Project_ListExtended_FistPLD.Name,0,16) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.ProjectSourcingHistory.NewValue) > FieldMaxLength,\nSubstr(ProjectHistoryTable.List.Current.ProjectSourcingHistory.NewValue, 0, FieldMaxLength-3)+ \"...\", ProjectHistoryTable.List.Current.ProjectSourcingHistory.NewValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.ProjectSourcingHistory.PreviousValue) > FieldMaxLength,\nSubstr(ProjectHistoryTable.List.Current.ProjectSourcingHistory.PreviousValue, 0, FieldMaxLength-3)+ \"...\", ProjectHistoryTable.List.Current.ProjectSourcingHistory.PreviousValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectSourcingTable.List.Current.StructProjectSourcing.ProductCategory) > 15,\nSubstr(ProjectSourcingTable.List.Current.StructProjectSourcing.ProductCategory, 0, 15-3)+ \"...\", ProjectSourcingTable.List.Current.StructProjectSourcing.ProductCategory)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectSourcingTable.List.Current.StructProjectSourcing.BG) > 15,\nSubstr(ProjectSourcingTable.List.Current.StructProjectSourcing.BG, 0, 15-3)+ \"...\", ProjectSourcingTable.List.Current.StructProjectSourcing.BG)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ProjectSourcingTable.List.Current.StructProjectSourcing.ProjectName = \"\", \"Project not selected\", If(Length(ProjectSourcingTable.List.Current.StructProjectSourcing.ProjectName) > 15,\nSubstr(ProjectSourcingTable.List.Current.StructProjectSourcing.ProjectName, 0, 15-3)+ \"...\", ProjectSourcingTable.List.Current.StructProjectSourcing.ProjectName))\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(ProjectHistoryTable.List.Current.User.Name) > FieldMaxLength,\nSubstr(ProjectHistoryTable.List.Current.User.Name, 0, FieldMaxLength-3)+ \"...\", ProjectHistoryTable.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectTable.List.Current.StructGetNextGateInformation.ProjectName) <=16, ProjectTable.List.Current.StructGetNextGateInformation.ProjectName, Substr(ProjectTable.List.Current.StructGetNextGateInformation.ProjectName, 0, 16) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(PercRecordingWithoutVCTable.List.Current.VCDataMigration.RecordingWorkTypeId <> NullTextIdentifier(), \" - \" + ToUpper(PercRecordingWithoutVCTable.List.Current.VCDataMigration.RecordingWorkTypeId), \"\")","type":"Text","functions":["If","NullTextIdentifier","ToUpper"]}
{"text":"\" \" + If(ToUpper(Trim(TR_MAV.List.Current.DuplicateCleanup_MAV.OFFSCREENROLE)) = \"TRUE\",\"off-screen\",\"on-screen\")","type":"Text","functions":["If","ToUpper","Trim"]}
{"text":"If(DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.PerformerId <> NullIdentifier(), If (DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.AlreadyDistributed <> 0, FormatDecimal(DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.AlreadyDistributed,2,\",\",\" \") + \" \" + Site.Currency, \"-\"), \"\")","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"FormatDecimal(DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.Reserved * If (DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.RoleCode <> Entities.RECORDING_MUSIC_ROLE.C, 1, If (DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.PerformerId = NullIdentifier(), VC_RoleC_Multiplier, DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.Multiplier)),2,\",\",\" \") + \" \" + Site.Currency","type":"Text","functions":["FormatDecimal","If","NullIdentifier"]}
{"text":"FormatDecimal(DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.Adjusted * If (DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.RoleCode <> Entities.RECORDING_MUSIC_ROLE.C, 1, If (DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.PerformerId = NullIdentifier(), VC_RoleC_Multiplier, DistributionTrackDetails_MusicDetails.List.Current.DistributionTrackDetails_Music.Multiplier)),2,\",\",\" \")","type":"Text","functions":["FormatDecimal","If","NullIdentifier"]}
{"text":"If(GetDistIncomeAVPlaylistById.List.Current.RECORDING_WORKTYPE.Id <> NullTextIdentifier(), \" - \" + ToUpper(GetDistIncomeAVPlaylistById.List.Current.RECORDING_WORKTYPE.Id), \"\")","type":"Text","functions":["If","NullTextIdentifier","ToUpper"]}
{"text":"If(LR_AV.List.Current.DistributionDetails_TrackDetails_AV.WorkTypeId <> NullTextIdentifier(), \" - \" + ToUpper(LR_AV.List.Current.DistributionDetails_TrackDetails_AV.WorkTypeId), \"\")","type":"Text","functions":["If","NullTextIdentifier","ToUpper"]}
{"text":"If(Length(CandidateExperienceTable.List.Current.Candidate_Experience.Description)>75,Substr(CandidateExperienceTable.List.Current.Candidate_Experience.Description,0,75)+\"...\",CandidateExperienceTable.List.Current.Candidate_Experience.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetDeclarationById.List.Current.DECLARATION_DUBBING.OriginalTitle=\"\",\"\",NewLine()+GetDeclarationById.List.Current.DECLARATION_DUBBING.OriginalTitle)+\" \" +If(GetDeclarationById.List.Current.DECLARATION_DUBBING.Language_TanslatedVersion=NullTextIdentifier(),\"\",\"(\"+GetDeclarationById.List.Current.LANGUAGE_RECORDINGS.Label+\")\")","type":"Text","functions":["If","NewLine","NullTextIdentifier"]}
{"text":"If(Length(SupplierTable.List.Current.Supplier.Description)>50,Substr(SupplierTable.List.Current.Supplier.Description,0,50)+\"...\",SupplierTable.List.Current.Supplier.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(PolicyTable.List.Current.Policy.Description)>50,Substr(PolicyTable.List.Current.Policy.Description,0,50)+\"...\",PolicyTable.List.Current.Policy.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"ToUpper(Substr(GetUserById.List.Current.Branch.Name,0,1)) + ToLower(Substr(GetUserById.List.Current.Branch.Name,1,Length(GetUserById.List.Current.Branch.Name)))","type":"Text","functions":["ToUpper","Substr","ToLower","Length"]}
{"text":"If (GetAffiliationFormById.List.Current.AFFILIATION_FORM.FiduciaryAssigTerritoID_Musi<> NullTextIdentifier(),NewLine()+ If (LanguageId = Entities.LANGUAGE.French, \"Extent PortÃ©e GÃ©ographique \", If (LanguageId = Entities.LANGUAGE.Dutch, \"Prestaties & Geografisch \", \"Territorial Extent \")) + \": \", NewLine())  ","type":"Text","functions":["If","NullTextIdentifier","NewLine"]}
{"text":"If (GetAffiliationFormById.List.Current.AFFILIATION_FORM.FiduciaryAssigTerritoID_AV <> NullTextIdentifier() and GetAffiliationFormById.List.Current.AFFILIATION_FORM.FiduciaryAssigTerritoID_Musi <> NullTextIdentifier(), NewLine(), \"\") +\nIf (GetAffiliationFormById.List.Current.AFFILIATION_FORM.FiduciaryAssigTerritoID_AV <> NullTextIdentifier(), If (LanguageId = Entities.LANGUAGE.French, \"Les prestations audiovisuelles \", If (LanguageId = Entities.LANGUAGE.Dutch, \"Audiovisuele prestaties \", \"Audiovisual Performances \")), \"\")","type":"Text","functions":["If","NullTextIdentifier","NewLine"]}
{"text":"If (GetAffiliationFormById.List.Current.AFFILIATION_FORM.FiduciaryAssigTerritoID_AV <> NullTextIdentifier(),NewLine()+ If (LanguageId = Entities.LANGUAGE.French, \"Extent PortÃ©e GÃ©ographique\", If (LanguageId = Entities.LANGUAGE.Dutch, \"Prestaties & Geografisch\", \"Territorial Extent\")) + \": \", \"\") \n","type":"Text","functions":["If","NullTextIdentifier","NewLine"]}
{"text":"If (Membership_Contracts_Music.MEMBERSHIP_CONTRACTS.FiduciaryAssignTerritorialId<> NullTextIdentifier(),NewLine()+ \"Territorial Extent: \"+Membership_Contracts_Music.FIDUCIARY_ASSIGNMENT_TERRITORIAL.Label, \"\") ","type":"Text","functions":["If","NullTextIdentifier","NewLine"]}
{"text":"If (Membership_Contracts_AV.MEMBERSHIP_CONTRACTS.Id <> NullIdentifier() and Membership_Contracts_Music.MEMBERSHIP_CONTRACTS.Id <> NullIdentifier(), NewLine(), \"\") +\nIf (Membership_Contracts_AV.MEMBERSHIP_CONTRACTS.Id <> NullIdentifier(), \"Audiovisual Performances\", \"\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If (Membership_Contracts_AV.MEMBERSHIP_CONTRACTS.FiduciaryAssignTerritorialId<> NullTextIdentifier(),NewLine()+ \"Territorial Extent: \"+Membership_Contracts_AV.FIDUCIARY_ASSIGNMENT_TERRITORIAL.Label, \"\") \n","type":"Text","functions":["If","NullTextIdentifier","NewLine"]}
{"text":"If(ShowContract = True,ToLower(GetMandateType.List.Current.MANDATEPOWER_TYPE.Label),GetMandateType.List.Current.MANDATEPOWER_TYPE.Label)+\nIf(GetMandateType.List.Current.AGENT_PERFORMERS.MandateEndDate <> NullDate() and Year(GetMandateType.List.Current.AGENT_PERFORMERS.MandateEndDate)<>9999 , \" until \" + GetMandateType.List.Current.AGENT_PERFORMERS.MandateEndDate, \"\")","type":"Text","functions":["If","ToLower","NullDate","Year"]}
{"text":"Substr(GetMembershipByPerformerId.List.Current.User.Email,Index(GetMembershipByPerformerId.List.Current.User.Email,\"@\"), Length(GetMembershipByPerformerId.List.Current.User.Email) - Index(GetMembershipByPerformerId.List.Current.User.Email,\"@\"))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(MembershipContractTable.List.Current.MEMBERSHIP_CONTRACTS.EndDate = NullDate(), \"\", \" to \" + Year(MembershipContractTable.List.Current.MEMBERSHIP_CONTRACTS.EndDate))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If (MembershipNewContractTable.List.Current.MEMBERSHIP_CONTRACTS.SubmittedDate <> NullDate(), DateTimeToDate(MembershipNewContractTable.List.Current.MEMBERSHIP_CONTRACTS.SubmittedDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetPersonById.List.Current.COUNTRY.Name <>\"\" and GetPersonById.List.Current.PERSON.BirthDate <> NullDate(), NewLine(),\"\") + GetPersonById.List.Current.COUNTRY.Name ","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"If((GetPersonById.List.Current.COUNTRY_4.Name <>\"\" or GetPersonById.List.Current.PERSON.BirthDate <> NullDate()) and GetPersonById.List.Current.GENDER.Label <> \"\", NewLine(), \"\")+GetPersonById.List.Current.GENDER.Label","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"If (MembershipContractEdit.Record.MEMBERSHIP_CONTRACTS.SubmittedDate <> NullDate(), DateTimeToDate(MembershipContractEdit.Record.MEMBERSHIP_CONTRACTS.SubmittedDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(isTodayOrTomorrow,Substr(DateTimeToTime(TaskTable.List.Current.Task.DueDate),0,5),\"\") \n\n\n\n\n\n","type":"Text","functions":["If","Substr","DateTimeToTime"]}
{"text":"If(Length(TableRecords1.List.Current.Project.Description) > 50, Substr(TableRecords1.List.Current.Project.Description, 0, 50) + \"...\", TableRecords1.List.Current.Project.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableAttachements.List.Current.Document.Description) > 50, Substr(TableAttachements.List.Current.Document.Description, 0, 50) + \"...\", TableAttachements.List.Current.Document.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.Document.Description) > 50, Substr(TableRecords1.List.Current.Document.Description, 0, 50) + \"...\", TableRecords1.List.Current.Document.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Attachments.List.Current.Document.Description) > 50, Substr(TR_Attachments.List.Current.Document.Description, 0, 50) + \"...\", TR_Attachments.List.Current.Document.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(Replace(Title, NewLine(), \" \\ \"),0,50) + If(Length(Title) > 50,\"...\",\"\")","type":"Text","functions":["Substr","Replace","NewLine","If","Length"]}
{"text":"\"Necessita de aprovaÃ§Ã£o urgente (\"+ DiffMinutes(CurrDateTime(),AddHours(GetCustomerCreditAssestments.List.Current.Customer_Credit_Assestment.RequestedAt,6)) +\" m)\"","type":"Text","functions":["DiffMinutes","CurrDateTime","AddHours"]}
{"text":"\"Necessita de aprovaÃ§Ã£o urgente (\"+ DiffMinutes(CurrDateTime(),AddHours(GetCustomerCreditAssestments.List.Current.Customer_Credit_Assestment.RequestedAt,1)) +\" m)\"","type":"Text","functions":["DiffMinutes","CurrDateTime","AddHours"]}
{"text":"If(DateTimeToDate(RecruitmentTable.List.Current.Sales_Proposal.CreatedAt) = CurrDate(), \"Aberta hoje\", \n\"Aberta hÃ¡ \" + DiffDays(RecruitmentTable.List.Current.Sales_Proposal.CreatedAt,CurrDate())\n+ If(DiffDays(RecruitmentTable.List.Current.Sales_Proposal.CreatedAt,CurrDate()) > 1, \" dias\", \" dia\"))","type":"Text","functions":["If","DateTimeToDate","CurrDate","DiffDays"]}
{"text":"\" - \" + If((Length(EmployeeTable.List.Current.Employee.FirstName)\n           +Length(EmployeeTable.List.Current.Employee.LastName)\n           +Length(EmployeeTable.List.Current.JobTitle.Name))>40, \n           \n           Substr(EmployeeTable.List.Current.JobTitle.Name,0,15)+\"...\", \n\n          EmployeeTable.List.Current.JobTitle.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName)>21, Substr(ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName,0,19)+\"...\", ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.Department.Name)>25, Substr(ListRecords.List.Current.Department.Name,0,22)+\"...\", ListRecords.List.Current.Department.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName)>16, Substr(ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName,0,13)+\"...\", ListRecords.List.Current.Employee.FirstName+\" \"+ListRecords.List.Current.Employee.LastName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.Department.Name)>20, Substr(ListRecords.List.Current.Department.Name,0,18)+\"...\", ListRecords.List.Current.Department.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\" - \" + If((Length(EmployeeTable.List.Current.User.Name)\n           +Length(EmployeeTable.List.Current.JobTitle.Name))>40, \n           \n           Substr(EmployeeTable.List.Current.JobTitle.Name,0,15)+\"...\", \n\n          EmployeeTable.List.Current.JobTitle.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.User.Name)>16, Substr(ListRecords.List.Current.User.Name,0,13)+\"...\", ListRecords.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.OrganizationUnit.Name)>20, Substr(ListRecords.List.Current.OrganizationUnit.Name,0,18)+\"...\", ListRecords.List.Current.OrganizationUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.User.Name)>21, Substr(ListRecords.List.Current.User.Name,0,19)+\"...\", ListRecords.List.Current.User.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords.List.Current.OrganizationUnit.Name)>25, Substr(ListRecords.List.Current.OrganizationUnit.Name,0,22)+\"...\", ListRecords.List.Current.OrganizationUnit.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(ListApplicationsDisabled.List.Current.Application.Name,0,30) + If(Length(ListApplicationsDisabled.List.Current.Application.Name) > 30,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ListApplicationsEnabled.List.Current.Application.Name,0,30) + If(Length(ListApplicationsEnabled.List.Current.Application.Name) > 30,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(ProductsListRecords.List.Current.Product.ProductName) > 32, Substr(ProductsListRecords.List.Current.Product.ProductName,0,31)+\"...\",ProductsListRecords.List.Current.Product.ProductName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<SCRIPT language=javascript>\nvar currDates = '\"+SelectedDates +\"';\nvar customLink = '\"+CustomLink +\"';\nvar numberOfColumns = '\"+ NumberOfColumns +\"';\nvar selectedDayColor = '\"+ SelectedDayColor +\"';\nvar forceSpecialDaysLinks = \" + If(ForceSpecialDaysLinks, \"true\",\"false\") + \";\nvar selectSelected = \" + If(SelectSelected, \"true\",\"false\") + \";\nshow_yearly_calendar(\n'WebForm1.\" + InputWidgetId + \"', \n'\" + Day(StartDate)+ \"', \n'\" + Month(StartDate)+ \"', \n'\" + Year(StartDate)+ \"',\n'\" + Site.DateFormat + \"',\n'\" + Month(MaxDate) + \"-\" + Day(MaxDate) + \"-\" + Year(MaxDate) + \"',\n'\" + Month(MinDate) + \"-\" + Day(MinDate) + \"-\" + Year(MinDate) + \"', \nspecial_days,\nfalse,\n'CalendarDiv\" + YearlyCalendarSelectMultipleDates_OLD.RuntimeId + \"'\"+ \",\n'',\n'',\n'',\n'\" + If(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\n\" + If(ShowNavigationButtons, \"true\",\"false\") \n+ \");\n</SCRIPT>\"","type":"Text","functions":["If","Day","Month","Year","NullDate"]}
{"text":"If(\nLength(TR_WorkItems.List.Current.WorkItemStatus.Name)<50,\nTR_WorkItems.List.Current.WorkItemStatus.Name, \nSubstr(TR_WorkItems.List.Current.WorkItemStatus.Name,0,50) + \"...\"\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDecimal(Round((Project_CalculateTotals.Totals.ProjectValues.Actual / Max(1,Project_CalculateTotals.Totals.ProjectValues.Expected)) * 100), 1, \",\", \".\") + \" %\"","type":"Text","functions":["FormatDecimal","Round","Max"]}
{"text":"\"Timesheet for week \" + WeekOfYear.Week + \", from \" + WeekDate + \" to \" + DateTimeToDate(AddDays(WeekDate, 6)) + If(NotMyTimeSheet, \" of \" + GetUser.List.Current.User.Name, \"\")","type":"Text","functions":["DateTimeToDate","AddDays","If"]}
{"text":"FormatDecimal(Round((TR_StoryList.List.Current.Story.ActualEffort / Max(TR_StoryList.List.Current.Story.EstimatedEffort,1) )*100), 1, \",\", \".\") + \" %\"","type":"Text","functions":["FormatDecimal","Round","Max"]}
{"text":"If(Length(AppItem.Description)<=40,\n    AppItem.Description,\n    Substr(AppItem.Description,0,40)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListModules.List.Current.ModuleDefStruct.Name)>24,Substr(ListModules.List.Current.ModuleDefStruct.Name,0,22)+\"...\",ListModules.List.Current.ModuleDefStruct.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListModules.List.Current.ModuleDefStruct.ApplicationName)>35,Substr(ListModules.List.Current.ModuleDefStruct.ApplicationName,0,33)+\"...\",ListModules.List.Current.ModuleDefStruct.ApplicationName)+\"/\"","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(FormatDecimal(ProposalGetSummary.Totals.PS_Product.Activation - Trunc(ProposalGetSummary.Totals.PS_Product.Activation),2,\",\",\".\"),2,2)\n","type":"Text","functions":["Substr","FormatDecimal","Trunc"]}
{"text":"Substr(FormatDecimal(ProposalGetSummary.Totals.PS_Product.MonthlyFee - Trunc(ProposalGetSummary.Totals.PS_Product.MonthlyFee),2,\",\",\".\"),2,2)\n","type":"Text","functions":["Substr","FormatDecimal","Trunc"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(true, '\" + InputId + \"', '\" + DropZone.Id + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(false, '\" + InputId + \"', '\" + DropZone.Id + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '\" + PopupUploadLink.Id + \"', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n\n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ Trim(headerLeft) +\"',\n                center: '\"+ Trim(headerCenter) +\"',\n                right: '\"+ Trim(headerRight) +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\",\n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n\n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\",\n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\",\n\n            editable: true,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n\n                $(\"+e_cal.Id+\").val(xDate(dFormat(start),dFormat(end),allDay));\n                $(\"+ln_notify.Id+\").click();\n                \"+CallBack_Select+\"\n            },\n\n            eventClick: function(calEvent, jsEvent, view) {\n                calEvent.ignoreTimezone=false;\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Click+\"\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Resize+\"\n            },\n\n            eventRender: function(event, element)\n            {\n                element.find('.fc-event-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool)\n                $('\"+loadingID+\"').show();\n              else\n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n            //DateEvent\n            function xDate(sdate,edate,allDay){\n                var s='DATE|';\n                s=s+0;\n                s=s+'|';\n                //s=s+calEvent.title;\n                s=s+'|';\n                if (allDay)\n                  s=s+allDay;\n                else\n                    s=s+'false';\n                s=s+'|';\n                s=s+sdate;\n                s=s+'|';\n                s=s+edate;\n                s=s+'|';\n                //s=s+calEvent.url;\n                s=s+'|';\n                s=s+'true';\n                s=s+'|';\n                //s=s+calEvent.color;\n                s=s+'|'\n                //s=s+calEvent.description;\n                return s;\n            }\n            //calEvent\n            function sCal(calEvent){\n                var s='CAL|';\n                if (calEvent.id)\n                    s=s+calEvent.id;\n                else\n                     s=s+'0';\n                s=s+'|';\n                s=s+calEvent.title;\n                s=s+'|';\n                s=s+calEvent.allDay;\n                s=s+'|';\n                s=s+dFormat(calEvent.start);\n                s=s+'|';\n                s=s+dFormat(calEvent.end);\n                s=s+'|';\n                if (calEvent.url)\n                    s=s+calEvent.url;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.editable!=null)\n                    s=s+calEvent.editable;\n                else\n                    s=s+'true';\n                s=s+'|';\n                if (calEvent.color)\n                    s=s+calEvent.color;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.description)\n                    s=s+calEvent.description;\n                else\n                    s=s+'';\n                return s;\n            }\n            // date format\n            function dFormat (xDate) {\n                now = xDate;\n                if (!now){\n                    s = '1900-01-01 00:00:00';\n                    return s;\n                }\n\n                year = '' + now.getFullYear();\n                month = '' + (now.getMonth() + 1); if (month.length == 1) { month = '0' + month; }\n                day = '' + now.getDate(); if (day.length == 1) { day = '0' + day; }\n                hour = '' + now.getHours(); if (hour.length == 1) { hour = '0' + hour; }\n                minute = '' + now.getMinutes(); if (minute.length == 1) { minute = '0' + minute; }\n                second = '' + now.getSeconds(); if (second.length == 1) { second = '0' + second; }\n                return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n            }\n\n            // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n                if(typeof curCalView.getMinMinute !== 'undefined')\n                {\n                    var startSeconds = curCalView.getMinMinute()*60;\n                    var endSeconds = curCalView.getMaxMinute()*60;\n                    var curSeconds = (curTime.getHours() * 60 * 60) + (curTime.getMinutes() * 60) + curTime.getSeconds();\n                    var percentOfDay = (curSeconds-startSeconds) / (endSeconds-startSeconds);\n                    var topLoc = Math.floor(parentDiv.height() * percentOfDay);\n                    timeline.css('top', topLoc + 'px');\n                    timelineNowptr.css('top', (topLoc-4) + 'px');\n                }\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n\n    });\n\n</script>\n\"","type":"Text","functions":["Trim","If","Day","Month","Year"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $(\"+e_cal.Id+\").val(safeJsonStringify(calEventJS));\n                $(\"+link_notify.Id+\").click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $(\"+e_cal.Id+\").val(safeJsonStringify(calEventJS));\n                $(\"+link_notify.Id+\").click();\n\n                \"+Callback_Click+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    delta:undefined,                \n                    event:undefined\n                };\n                $(\"+e_cal.Id+\").val(safeJsonStringify(calEventJS));\n                $(\"+link_notify.Id+\").click();\n\n                \"+Callback_Select+\"\n            },\n\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'POST'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n            eventRender: function(event, element)\n            {\n                element.find('.fc-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $(\"+e_cal.Id+\").val(safeJsonStringify(calEventJS));\n                $(\"+link_notify.Id+\").click();\n\n                \"+CallBack_Resize+\"\n            }\n\n        });\n\n    });\n\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"If(Length(Template_TemplateTranslationTable.List.Current.TemplateL.Text)>250, Substr(Template_TemplateTranslationTable.List.Current.TemplateL.Text, 0, 246) + \"...\", Template_TemplateTranslationTable.List.Current.TemplateL.Text)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(File.Attachment.Filename) > 18, Substr(File.Attachment.Filename, 0, 17) + \"...\", File.Attachment.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDateTime(DateTimeToTime(AddSeconds(NewTime(0,0,0),BillingLineTable.List.Current.BillingLine.Seconds)), \"HH:mm:ss\")","type":"Text","functions":["FormatDateTime","DateTimeToTime","AddSeconds","NewTime"]}
{"text":"FormatDateTime(AddSeconds(NewTime(0,0,0),TotaUsageTime.List.Current.TotaltimeloggedByToolSum), \"HH:mm:ss\") ","type":"Text","functions":["FormatDateTime","AddSeconds","NewTime"]}
{"text":"\"<script>\n    var calendarInitialized = false;\n    $(document).ready(function() {\n\n        if(calendarInitialized) return;\n\n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n        \n        \n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ Trim(headerLeft) +\"',\n                center: '\"+ Trim(headerCenter) +\"',\n                right: '\"+ Trim(headerRight) +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\",\n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n\n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\",\n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\",\n\n            editable: \" + If(editable, \"true\", \"false\") + \",\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n\n                $(\"+e_cal.Id+\").val(xDate(dFormat(start),dFormat(end),allDay));\n                $(\"+ln_notify.Id+\").click();\n                \"+CallBack_Select+\"\n            },\n\n            eventClick: function(calEvent, jsEvent, view) {\n                calEvent.ignoreTimezone=false;\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Click+\"\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n\n                $(\"+e_cal.Id+\").val(sCal(calEvent));\n                $(\"+ln_notify.Id+\").click();\n\n                \"+CallBack_Resize+\"\n            },\n\n            eventRender: function(event, element)\n            {\n                element.find('.fc-event-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool)\n                $('\"+loadingID+\"').show();\n              else\n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n            //DateEvent\n            function xDate(sdate,edate,allDay){\n                var s='DATE|';\n                s=s+0;\n                s=s+'|';\n                //s=s+calEvent.title;\n                s=s+'|';\n                if (allDay)\n                  s=s+allDay;\n                else\n                    s=s+'false';\n                s=s+'|';\n                s=s+sdate;\n                s=s+'|';\n                s=s+edate;\n                s=s+'|';\n                //s=s+calEvent.url;\n                s=s+'|';\n                s=s+'true';\n                s=s+'|';\n                //s=s+calEvent.color;\n                s=s+'|'\n                //s=s+calEvent.description;\n                return s;\n            }\n            //calEvent\n            function sCal(calEvent){\n                var s='CAL|';\n                if (calEvent.id)\n                    s=s+calEvent.id;\n                else\n                     s=s+'0';\n                s=s+'|';\n                s=s+calEvent.title;\n                s=s+'|';\n                s=s+calEvent.allDay;\n                s=s+'|';\n                s=s+dFormat(calEvent.start);\n                s=s+'|';\n                s=s+dFormat(calEvent.end);\n                s=s+'|';\n                if (calEvent.url)\n                    s=s+calEvent.url;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.editable!=null)\n                    s=s+calEvent.editable;\n                else\n                    s=s+'true';\n                s=s+'|';\n                if (calEvent.color)\n                    s=s+calEvent.color;\n                else\n                    s=s+'';\n                s=s+'|';\n                if (calEvent.description)\n                    s=s+calEvent.description;\n                else\n                    s=s+'';\n                return s;\n            }\n            // date format\n            function dFormat (xDate) {\n                now = xDate;\n                if (!now){\n                    s = '1900-01-01 00:00:00';\n                    return s;\n                }\n\n                year = '' + now.getFullYear();\n                month = '' + (now.getMonth() + 1); if (month.length == 1) { month = '0' + month; }\n                day = '' + now.getDate(); if (day.length == 1) { day = '0' + day; }\n                hour = '' + now.getHours(); if (hour.length == 1) { hour = '0' + hour; }\n                minute = '' + now.getMinutes(); if (minute.length == 1) { minute = '0' + minute; }\n                second = '' + now.getSeconds(); if (second.length == 1) { second = '0' + second; }\n                return year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;\n            }\n\n            // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n        calendarInitialized = true;\n    });\n\n</script>\n\"","type":"Text","functions":["Trim","If","Day","Month","Year"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)+3 < 0, Month(BaseDate)+3, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)+2 < 0, Month(BaseDate)+2, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)+1 < 0, Month(BaseDate)+1, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)-1 < 0, Month(BaseDate)-1, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)-2 < 0, Month(BaseDate)-2, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"Year(BaseDate) + If(Month(BaseDate)-3 < 0, Month(BaseDate)-3, 0)","type":"Integer","functions":["Year","If","Month"]}
{"text":"If(Length(GetLoanRequestDocsByLoanRequest.List.Current.Attachment.Filename) > 18, Substr(GetLoanRequestDocsByLoanRequest.List.Current.Attachment.Filename, 0, 17) + \"...\", GetLoanRequestDocsByLoanRequest.List.Current.Attachment.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LR_Messages.List.Current.Message.Subject) > 40, \nSubstr(LR_Messages.List.Current.Message.Subject, 0, 40) + \"...\", \nLR_Messages.List.Current.Message.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(RateTable.List.Current.ImportedRateValues.Id = NullIdentifier() or RateTable.List.Current.Rate.Id = NullIdentifier(), \"N/A\", FormatPercent(NewDynamicRatesList.List.Current.ImportedRateValues.Variation -1,0,Site.DecimalSeparator) )","type":"Text","functions":["If","NullIdentifier","FormatPercent"]}
{"text":"If(RateTable.List.Current.ImportedRateValues.Id = NullIdentifier(), \"N/A\", FormatDecimal(RateTable.List.Current.ImportedRateValues.NewRate, 4, Site.DecimalSeparator, Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RateTable.List.Current.ImportedRateValues.Id = NullIdentifier() or RateTable.List.Current.Rate.Id = NullIdentifier(), \"N/A\", FormatDecimal(RateTable.List.Current.ImportedRateValues.OldRate, 4, Site.DecimalSeparator, Site.GroupSeparator))","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(RateTable.List.Current.Rate.END_DATE <> NullDate(), DateToText(RateTable.List.Current.Rate.END_DATE),\"-\")","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"If(\nTaskStatusSelected = NullIdentifier() and \nTaskTypeSelected = NullIdentifier() and \nStartPeriodSelected = NullDate() and \nEndPeriodSelected = NullDate(),\n    \"Clique para adicionar filtros\", \n\n    StartPeriodSelected+\"-\"+EndPeriodSelected+\"-\"+TaskTypeSelected+\"-\"+TaskStatusSelected)","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"If(\nSelectedAbsenceStatus = NullIdentifier() and \nSelectedAbsenceType = NullIdentifier() and \nStartPeriodSelected = NullDate() and \nEndPeriodSelected = NullDate(),\n    \"Clique para adicionar filtros\", \n\n    StartPeriodSelected+\"-\"+EndPeriodSelected+\"-\"+SelectedAbsenceType+\"-\"+SelectedAbsenceStatus)","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"If(Length(XMLFileTable.List.Current.XMLFile.XMLContent) > 10, Substr(XMLFileTable.List.Current.XMLFile.XMLContent, 0, 10) + \" ...\", XMLFileTable.List.Current.XMLFile.XMLContent)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script src=\"\"//www.youtube.com/iframe_api\"\" ></script><script>\naddPlayer({id:'\" + YoutubeContainer.Id + \"', \n            videoId:'\" + EncodeJavaScript(VideoID) + \"', \n            width:\" + Width + \", \n            height:\" + Height + \",\n            quality:'\" + EncodeJavaScript(VideoQuality) + \"',\n            runtimeId:'\" + Player.RuntimeId + \"',\n            autoplay:\" + If(Autoplay, \"1\", \"0\") + \",\n            adjustSize:\" + If(AdjustToContainer,\"true\",\"false\") + \",\n            resizeContainer:'\" + ContainerId + \"',\n            \" + If(Length(EventsRegisterScript) > 0, \"eventsRegisterScript:\" + EventsRegisterScript + \",\",\"\") + \"\n            autohide:\" + Autohide + \"});</script>\"","type":"Text","functions":["EncodeJavaScript","If","Length"]}
{"text":"If(Abs(TextToInteger(TrainsRecordTable.List.Current.TrainsSchedule.convoylength))=0,1,Abs(TextToInteger(TrainsRecordTable.List.Current.TrainsSchedule.convoylength)))","type":"Decimal","functions":["If","Abs","TextToInteger"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ EncodeJavaScript(LinkOrButtonWidgetId) +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"\"<script type='text/javascript'>\n$(function() {\n    if ($('#\" + EncodeJavaScript(InputWidgetId) + \"').attr('readonly'))\n    return;\n\n    if($('.Page').hasClass('desktop')) {\n        $('#\" + EncodeJavaScript(InputWidgetId) + \"').bind('keypress', function(e) {\n            var code = e.keyCode || e.which;\n            if(code == 13) {\n                $('#\" + EncodeJavaScript(InputWidgetId) + \"').blur();\n                $('.calTriggerOut').click();\n            }\n        });\n    } else {\n        $('#\" + EncodeJavaScript(InputWidgetId) + \"').click(function(){\n            $(this).blur();\n        });\n    }\n\n    dateServer = '\" + EncodeJavaScript(GetServerDateFormat.ServerDateFormat) + \"';\n\n    \" + If(EncodeJavaScript(DisabledDates) <> \"\", \"\n        var DisabledDays = \"\"\" + EncodeJavaScript(DisabledDates) + \"\"\";\n        var DisabledArray = DisabledDays.split(\"\",\"\");\n        var DISABLED_DATES = {};\n        $.each(DisabledArray, function(i, val) {\n            DISABLED_DATES[parseInt(val.replace(/\\-/g, ''))] = true;\n        });\n    \", \"\") +\n\n    If(InitialDate <> DateToDateTime(NullDate()), \"\n        var DefaultDate = \"\"\" + InitialDate + \"\"\";\n        var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\n    \" ,\"\n        var DefaultDate = $('#\" + EncodeJavaScript(InputWidgetId) + \"').val();\n        if (DefaultDate == \"\"\"\" || DefaultDate == null) {\n            DefaultDate = CalendarSilk.getTodayDate('\" + EncodeJavaScript(DateFormat) + \"');\n        }\") + \"\n    var DefaultDateNew = CalendarSilk.convertDateToInt(DefaultDate.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"');\n\n    CalendarSilk.setup(\n    {\" +\n    If(ShowTime  = True, \"\n        showTime        :   \" + If(Show24HourFormat = True, \"true\", \"12\") + \",\",\"\") +\n    If(ShowWeekNumbers = True, \"\n        weekNumbers     :   true,\", \"\") +\n    If(EncodeJavaScript(DateFormat) <> \"\", \"\n        dateFormat      :   \"\"\" + EncodeJavaScript(DateFormat) + \"\"\",\", \"\") +\n    If(EncodeJavaScript(DisabledDates) <> \"\" or EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n        disabled        :   function(date) { \" +\n                            If(EncodeJavaScript(DisabledWeekDays) <> \"\" , \"\n                                var DisabledWeekDays = \"\"\" + EncodeJavaScript(DisabledWeekDays) + \"\"\";\n                                var DisabledWeekDaysArray = DisabledWeekDays.split(\"\",\"\");\n                                var DisabledWeekDaysArray = $.map(DisabledWeekDaysArray, function(val) {return parseInt(val)});\n                                if ($.inArray(date.getDay(), DisabledWeekDaysArray) > -1) {return true};\", \"\") +\n                            If(EncodeJavaScript(DisabledDates) <> \"\" , \"\n                                date = CalendarSilk.dateToInt(date);\n                                return date in DISABLED_DATES;\n                                \", \"\") + \"\n                            },\",\n        \"\") +\n    If(MinDate <> DateToDateTime(NullDate()), \"\n        min             :   CalendarSilk.convertDateToInt(\"\"\" + MinDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") +\n    If(MaxDate <> DateToDateTime(NullDate()), \"\n        max             :   CalendarSilk.convertDateToInt(\"\"\" + MaxDate + \"\"\",'\" + EncodeJavaScript(DateFormat) + \"'),\" ,\"\") + \"\n        fdow            :   \" + IntegerToText(FirstDay) + \",\n        animation       :   false,\n        fixed           :   true,\n        inputField      :   \"\"\" + EncodeJavaScript(InputWidgetId) + \"\"\",\n        date            :   DefaultDateNew,\n        selection       :   DefaultDateNew,\n        onTimeChange    :   function() {\n                                $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\n                            },\n        onSelect        :   function() {\n                                $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val(this.selection.print(\"\"\" + EncodeJavaScript(DateFormat) + \"\"\", \"\" ... \"\")).change();\" +\n                                If(ShowTime  <> True, \"this.hide();$('.calTriggerOut').remove()\", \"\") + \"\n                            },\n        onFocus         :   function() {\" +\n                                If(ShowTime = True, \"\n                                    if ($('#\" + EncodeJavaScript(InputWidgetId) + \"').val() !=  '\" + DateToDateTime(NullDate()) + \"') {\n                                        /*var CalInputVal = $(\"\"#\" + EncodeJavaScript(InputWidgetId) + \"\"\").val();\n                                        if (CalInputVal == \"\"\"\") {CalInputVal = '\" + CurrDateTime() + \"'};\n                                        this.selection.set(CalendarSilk.convertDateToInt(CalInputVal.substring(0,10),'\" + EncodeJavaScript(DateFormat) + \"'));*/\n                                    }\", \"\") + \"\n                                $('.Page').append('<div class=\"\"calTriggerOut\"\"></div>');\n                                $('.Calendar-topBar td, .Calendar-day-disabled').on('click', function(){ return false; });\n                                $(document).on('click','.Calendar-topCont *',function(){\n                                    $('body').click();\n                                });\n                                $(document).on('click','.calTriggerOut',function(){\n                                    $(this).remove();\n                                    $('body > .Calendar-topCont').hide();\n                                });\n                            },\n        trigger         :   \" + If(EncodeJavaScript(ButtonWidgetId) <> \"\", \"\"\"\" + EncodeJavaScript(ButtonWidgetId) + \"\"\"\",\"\"\"\" + EncodeJavaScript(InputWidgetId) + \"\"\"\") + \",\n        align           :   \"\"\"  + EncodeJavaScript(Align) + \"\"\"\n    });\n});\n</script>\"","type":"Text","functions":["EncodeJavaScript","If","DateToDateTime","NullDate","IntegerToText","CurrDateTime"]}
{"text":"If(Length(ProductTable.List.Current.Product.ProductName) > 45, Substr(ProductTable.List.Current.Product.ProductName,0,44)+\"...\",ProductTable.List.Current.Product.ProductName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TopProducts2.List.Current.ProductName) > 45, Substr(TopProducts2.List.Current.ProductName,0,44)+\"...\",TopProducts2.List.Current.ProductName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(true, '\" + InputId + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"\"<script type='text/javascript'>\n    RichWidgetsExtended_File_Upload_init(false, '\" + InputId + \"', '\" + LinkOrButtonId + \"', '\" + FileUploadButtonSpan.Id + \"', '\" + FileUploadFilesSpan.Id + \"', '\" + If(ShowProgress, FileUploadProgressBar.Id, \"\") + \"', \" + ProgressInterval + \", '\" + StartFakeNotifyWidget.Id + \"', '\" + ProgressFakeNotifyWidget.Id + \"', '\" + DoneFakeNotifyWidget.Id + \"', '\" + FailFakeNotifyWidget.Id + \"', \" + MaxFileChunkSize + \", \" + MaxFileSize + \", \" + ToLower(BooleanToText(AutoUpload)) + \", '\" + PopupUploadLink.Id + \"', '\" + GetOwnerURLPath() + \"FileUploadHandlerEntry.aspx');\n </script>\"\n","type":"Text","functions":["If","ToLower","BooleanToText","GetOwnerURLPath"]}
{"text":"If(TableRecordsProducts.List.Current.REMS_PRESCRIBER.ExpirationDate <> NullDate(),\n    DateTimeToDate(\n        TableRecordsProducts.List.Current.REMS_PRESCRIBER.ExpirationDate\n    ),\n    \"N/A\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecordsProducts.List.Current.REMS_PRESCRIBER.EffectiveDate <> NullDate(),\n    DateTimeToDate(\n        TableRecordsProducts.List.Current.REMS_PRESCRIBER.EffectiveDate\n    ),\n    \"N/A\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes\n+If(Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes) <> \"\" and Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes) <> \"\", NewLine(), \"\")\n+SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes\n+If(Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.SurgeryNotes) <> \"\" and (Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes) <> \"\" or Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes) <> \"\"), NewLine(), \"\")\n+SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.SurgeryNotes","type":"Text","functions":["If","Trim","NewLine"]}
{"text":"Substr(\nSAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes\n+If(Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes) <> \"\" and Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes) <> \"\", NewLine(), \"\")\n+SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes\n+If(Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.SurgeryNotes) <> \"\" and (Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.VAServiceNotes) <> \"\" or Trim(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes) <> \"\"), NewLine(), \"\")\n+SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.SurgeryNotes,0,8)\n+ \" ...\"","type":"Text","functions":["Substr","If","Trim","NewLine"]}
{"text":"If(Length(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer) > 30, Substr(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer,0,28) + \"...\", SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(AuditOrderTable.List.Current.AuditOrders_List.AuditOrderNotes) < 25, AuditOrderTable.List.Current.AuditOrders_List.AuditOrderNotes, Substr(AuditOrderTable.List.Current.AuditOrders_List.AuditOrderNotes,0,23) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrders.BreedDate <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrders.BreedDate) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrders.BreedDate, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Length(Label) > 12, Substr(Label,0,10) + \"...\",Label)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(LabelOld) > 12, Substr(LabelOld,0,10) + \"...\",LabelOld)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate_Old <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate_Old) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrderDifferences.BreedDate_Old, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Length(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName) > 30, Substr(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName,0,28) + \"...\", BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old) > 30, Substr(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old,0,28) + \"...\", BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth_Old) <> NullDate(), TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth_Old), \"-\")","type":"Text","functions":["If","TextToDateTime","NullDate"]}
{"text":"If(TextToDateTime(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth)) <> NullDate(), TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth), \"-\")","type":"Text","functions":["If","TextToDateTime","Trim","NullDate"]}
{"text":"If(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate) <> \"\" and TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate) <> NullDate(), GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate, \"-\")","type":"Text","functions":["If","Trim","TextToDate","NullDate"]}
{"text":"If(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate_Old) <> \"\" and TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate_Old) <> NullDate(), GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.BreedDate_Old, \"-\")","type":"Text","functions":["If","Trim","TextToDate","NullDate"]}
{"text":"If(TextToDateTime(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ProcessedDate)) <> NullDate(), TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ProcessedDate), \"-\")","type":"Text","functions":["If","TextToDateTime","Trim","NullDate"]}
{"text":"If(TextToDateTime(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ProcessedDate_Old)) <> NullDate(), TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ProcessedDate_Old), \"-\")","type":"Text","functions":["If","TextToDateTime","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreatedDate)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreatedDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreatedDate_Old)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreatedDate_Old), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.PullDate)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.PullDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.PullDate_Old)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.PullDate_Old), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ChangeDate)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ChangeDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ChangeDate_Old)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.ChangeDate_Old), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreateDate)) <> NullDate(), TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreateDate) + \" \" + TextToTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreateTime), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate","TextToTime"]}
{"text":"If(TextToDateTime(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreateDateTime_Old)) <> NullDate(), TextToDateTime(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CreateDateTime_Old), \"-\")","type":"Text","functions":["If","TextToDateTime","Trim","NullDate"]}
{"text":"If(Length(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName) > 15, Substr(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName,0,12) + \"...\", GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName_Old) > 15, Substr(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName_Old,0,12) + \"...\", GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.CustomerName_Old)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BizTalkOrdersTable.List.Current.BizTalkOrders_List.Customer) > 15, Substr(BizTalkOrdersTable.List.Current.BizTalkOrders_List.Customer,0,12) + \"...\", BizTalkOrdersTable.List.Current.BizTalkOrders_List.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SetPullDateOrdersTable.List.Current.BizTalkOrders.CustomerName) > 15, Substr(SetPullDateOrdersTable.List.Current.BizTalkOrders.CustomerName,0,12) + \"...\", SetPullDateOrdersTable.List.Current.BizTalkOrders.CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDateTime(Trim(BizTalkOrderRecord.List.Current.BizTalkOrders.ProcessedDate)) <> NullDate(), TextToDateTime(BizTalkOrderRecord.List.Current.BizTalkOrders.ProcessedDate), \"-\")","type":"Text","functions":["If","TextToDateTime","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(BizTalkOrderRecord.List.Current.BizTalkOrders.CreatedDate)) <> NullDate(), TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.CreatedDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(BizTalkOrderRecord.List.Current.BizTalkOrders.PullDate)) <> NullDate(), TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.PullDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(BizTalkOrderRecord.List.Current.BizTalkOrders.ChangeDate)) <> NullDate(), TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.ChangeDate), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate"]}
{"text":"If(TextToDate(Trim(BizTalkOrderRecord.List.Current.BizTalkOrders.CreateDate)) <> NullDate(), TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.CreateDate) + \" \" + TextToTime(BizTalkOrderRecord.List.Current.BizTalkOrders.CreateTime), \"-\")","type":"Text","functions":["If","TextToDate","Trim","NullDate","TextToTime"]}
{"text":"If(Length(BizTalkOrderRecord.List.Current.BizTalkOrders.CustomerName) > 15, Substr(BizTalkOrderRecord.List.Current.BizTalkOrders.CustomerName,0,12) + \"...\", BizTalkOrderRecord.List.Current.BizTalkOrders.CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.DeliveryDate) <> NullDate(), FormatDateTime(TextToDate(BizTalkOrderRecord.List.Current.BizTalkOrders.DeliveryDate), \"yyyy-MM-dd\"), \"-\")","type":"Text","functions":["If","TextToDate","NullDate","FormatDateTime"]}
{"text":"\" (\" + Substr(DebtorRequestList.List.Current.Description,0,30) + If(Length(DebtorRequestList.List.Current.Description) > 30, \"...\", \"\") + \")\"","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    delta:undefined,                \n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Select+\"\n            },\n\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'POST'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n            eventRender: function(event, element)\n            {\n                element.find('.fc-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            }\n\n        });\n\n    });\n\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"\"<script>\n    addPlayer({id:'\" + YoutubeContainer.Id + \"', \n                videoId:'\" + EncodeJavaScript(VideoID) + \"', \n                width:\" + Width + \", \n                height:\" + Height + \",\n                quality:'\" + EncodeJavaScript(VideoQuality) + \"',\n                runtimeId:'\" + Player.RuntimeId + \"',\n                autoplay:\" + If(Autoplay, \"1\", \"0\") + \",\n                adjustSize:\" + If(AdjustToContainer,\"true\",\"false\") + \",\n                resizeContainer:'\" + ContainerId + \"',\n                \" + If(Length(EventsRegisterScript) > 0, \"eventsRegisterScript:\" + EventsRegisterScript + \",\",\"\") + \"\n                autohide:\" + Autohide + \"});\n</script>\"","type":"Text","functions":["EncodeJavaScript","If","Length"]}
{"text":"If(Length(TableRecordsAggVendors.List.Current.DiverseSpendChart.VendorName) > 30, Substr(TableRecordsAggVendors.List.Current.DiverseSpendChart.VendorName, 0, 30) + \"...\", TableRecordsAggVendors.List.Current.DiverseSpendChart.VendorName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.MESSAGE.Subject) > 50, Substr(TableRecords1.List.Current.MESSAGE.Subject, 0, 47) + \"...\", TableRecords1.List.Current.MESSAGE.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(Hour(TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(GetMessageById.Count > 0, IntegerToText(ProfileTable.StartIndex + 1) + \" to \" + IntegerToText(Min(ProfileTable.StartIndex + ProfileTable.LineCount, GetMessageById.Count)) + \" of \" + GetMessageById.Count + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(General_edit2.Record.REQUEST.PreferenceDateCustomer_G=NullDate(),\"\",Substr(General_edit2.Record.REQUEST.PreferenceDateCustomer_G,0,10))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Customer_edit.Record.REQUEST.PreferenceDateCustomer_E=NullDate(),\"\",Substr(Customer_edit.Record.REQUEST.PreferenceDateCustomer_E,0,10))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If( Length(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate) = 8,\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,6,2) + \"-\" +\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,4,2) + \"-\" +\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,0,4) , If(TextToDate(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate ) = NullDate(),\"\", TextToDate(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate ) ) )  ","type":"Text","functions":["If","Length","Substr","TextToDate","NullDate"]}
{"text":"If( Length(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate) = 8,\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,6,2) + \"-\" +\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,4,2) + \"-\" +\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,0,4) , \nIf(TextToDate(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate )=NullDate(),\"\", TextToDate(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate )))    ","type":"Text","functions":["If","Length","Substr","TextToDate","NullDate"]}
{"text":"If( Length(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate) = 8,\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,6,2) + \"-\" +\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,4,2) + \"-\" +\n    Substr(Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,0,4) , Get3020DataForEAN_G.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate )    ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate) = 8,\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,6,2) + \"-\" +\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,4,2) + \"-\" +\n    Substr(Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate,0,4) , Get3020DataForEAN_E.List.Current.CONNECTION_CCP_HISTORY.CalculateContractStartDate )    ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Contract_show.Record.REQUEST.PreferenceDateCustomer_G=NullDate(),\"\",Substr(Contract_show.Record.REQUEST.PreferenceDateCustomer_G,0,10))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Contract_show.Record.REQUEST.PreferenceDateCustomer_E=NullDate(),\"\",Substr(Contract_show.Record.REQUEST.PreferenceDateCustomer_E,0,10))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Substr(edrMoveRequest.Record.MOVE_REQUEST.RequestReference,0,1) = \"#\", Substr(edrMoveRequest.Record.MOVE_REQUEST.RequestReference,1,Length(edrMoveRequest.Record.MOVE_REQUEST.RequestReference)-1), edrMoveRequest.Record.MOVE_REQUEST.RequestReference)","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Substr(tbrMoveRequests.List.Current.MOVE_REQUEST.RequestReference,0,1) = \"#\", Substr(tbrMoveRequests.List.Current.MOVE_REQUEST.RequestReference,1,Length(tbrMoveRequests.List.Current.MOVE_REQUEST.RequestReference)-1), tbrMoveRequests.List.Current.MOVE_REQUEST.RequestReference)","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( TRGainLossList.List.Current.GAINS_LOSSES_EXPORT.FromDate <> NullDate(),TRGainLossList.List.Current.GAINS_LOSSES_EXPORT.FromDate, \"\") + If( TRGainLossList.List.Current.GAINS_LOSSES_EXPORT.ToDate <> NullDate(),NewLine() + TRGainLossList.List.Current.GAINS_LOSSES_EXPORT.ToDate, \"\")  \n","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"If(Length(tbrRejectedMessages.List.Current.MESSAGE.Log) > 40, Substr(tbrRejectedMessages.List.Current.MESSAGE.Log, 0, 40) + \" ...\", tbrRejectedMessages.List.Current.MESSAGE.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(tblMeteringData.List.Current.METERING_DATA.SubmittedDate<>NullDate(),DateTimeToDate(tblMeteringData.List.Current.METERING_DATA.SubmittedDate),\" \")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetCount.List.Current.Int.Int  = 0,\"\",\nIntegerToText(TRYACList.StartIndex  + 1) + \" to \" + IntegerToText(Min(TRYACList.StartIndex  + TRYACList.LineCount, GetCount.List.Current.Int.Int)) + \" of \" + GetCount.List.Current.Int.Int + \" items\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetYacsQueues2.Count  = 0,\"\",\nIntegerToText(TableRecords1.StartIndex  + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex  + TableRecords1.LineCount, GetYacsQueues2.Count)) + \" of \" + GetYacsQueues2.Count + \" items\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Length(tblBatch.List.Current.BatchFiles.Log) > 40, Substr(tblBatch.List.Current.BatchFiles.Log, 0, 40) + \" ...\", tblBatch.List.Current.BatchFiles.Log)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Month(trContractProcedures.List.Current.MM_InvoiceMap.Date) < 10,\n \"0\" + Month(trContractProcedures.List.Current.MM_InvoiceMap.Date),\n Month(trContractProcedures.List.Current.MM_InvoiceMap.Date)\n) + \"/\" + \nYear(trContractProcedures.List.Current.MM_InvoiceMap.Date) ","type":"Text","functions":["If","Month","Year"]}
{"text":"If(EditRecordCRM_PRODUCT.Record.CRM_PRODUCT.EnergyTypeID = NullTextIdentifier(), \"\", \nIf(EditRecordCRM_PRODUCT.Record.CRM_PRODUCT.EnergyTypeID = TextToIdentifier(\"EL\"), Site.EMS_CRM_CurrencyPerELUnit, Site.EMS_CRM_CurrencyPerGASUnit))","type":"Text","functions":["If","NullTextIdentifier","TextToIdentifier"]}
{"text":"If(EditRecordCRM_PRODUCT.Record.CRM_PRODUCT.EnergyTypeID = NullTextIdentifier(), \"\", \nIf(EditRecordCRM_PRODUCT.Record.CRM_PRODUCT.EnergyTypeID = TextToIdentifier(\"EL\"), Site.EMS_CRM_EL_UnitType, Site.EMS_CRM_GAS_UnitType))","type":"Text","functions":["If","NullTextIdentifier","TextToIdentifier"]}
{"text":"If(TR_EAN_Supply.List.Current.CRM_CONTRACT_GRID_CONNECTION.Start_Date <> NullDate(), DateTimeToDate(TR_EAN_Supply.List.Current.CRM_CONTRACT_GRID_CONNECTION.Start_Date), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TR_EAN_Supply.List.Current.CRM_CONTRACT_GRID_CONNECTION.End_Date <> NullDate(), DateTimeToDate(TR_EAN_Supply.List.Current.CRM_CONTRACT_GRID_CONNECTION.End_Date), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(\n Year(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.StartDate) = Year(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.EndDate)\n  and Month(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.StartDate) = 1\n  and Day(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.StartDate) = 1\n  and Month(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.EndDate) = 12\n  and Day(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.EndDate) = 31,\n Year(TableRecords1.List.Current.PREPAYMENT_CONTRACTED.StartDate),\n TableRecords1.List.Current.PREPAYMENT_CONTRACTED.StartDate + \" to \" + TableRecords1.List.Current.PREPAYMENT_CONTRACTED.EndDate)","type":"Text","functions":["If","Year","Month","Day"]}
{"text":"If(EditRecordContractGC.Record.CRM_CONTRACT_GRID_CONNECTION.End_Date <> NullDate(), DateTimeToDate(EditRecordContractGC.Record.CRM_CONTRACT_GRID_CONNECTION.End_Date), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(EditRecordContractGC.Record.CRM_CONTRACT_GRID_CONNECTION.Start_Date <> NullDate(), DateTimeToDate(EditRecordContractGC.Record.CRM_CONTRACT_GRID_CONNECTION.Start_Date), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Count.List.Current.strInt.Int  = 0,\"\",\nIntegerToText(TRGridConnections.StartIndex  + 1) + \" to \" + IntegerToText(Min(TRGridConnections.StartIndex  + TRGridConnections.LineCount, Count.List.Current.strInt.Int)) + \" of \" + Count.List.Current.strInt.Int + \" items\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"\"Billing Month: \" + \nIf (\n TRRecentFiles.List.Current.BULK_INVOICE.FilterStartDate = NullDate(), \n \"-\", \n Year(TRRecentFiles.List.Current.BULK_INVOICE.FilterStartDate) + \"-\" + Month(TRRecentFiles.List.Current.BULK_INVOICE.FilterStartDate)\n)","type":"Text","functions":["If","NullDate","Year","Month"]}
{"text":"If(Volumes_Get.VolumesList.Length  > 0, IntegerToText(TblVolumesValidations.StartIndex + 1) + \" to \" + IntegerToText(Min(TblVolumesValidations.StartIndex + TblVolumesValidations.LineCount, Volumes_Get.VolumesList.Length)) + \" of \" + Volumes_Get.VolumesList.Length  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetGridConnections.List.Length   > 0, IntegerToText(TableRecords.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords.StartIndex + TableRecords.LineCount, GetGridConnections.List.Length)) + \" of \" + GetGridConnections.List.Length  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GridConnections_Get.GridConnectionsList.Length  > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GridConnections_Get.GridConnectionsList.Length)) + \" of \" + GridConnections_Get.GridConnectionsList.Length  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(Count = 0,\"\",\nIntegerToText(TR_Connections.StartIndex + 1) + \" to \" + IntegerToText(Min(TR_Connections.StartIndex + TR_Connections.LineCount, Count)) + \" of \" + Count + \" items\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"FormatText(Hour(TableRecords1.List.Current.sProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.sProfileValue.StartInterval), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(Count = 0,\"\",\nIntegerToText(tbrGridConnections.StartIndex + 1) + \" to \" + IntegerToText(Min(tbrGridConnections.StartIndex + Session.Filter_EnergyBalanceQuantities.Filter_EnergyBalanceQuantities.LineCount, Count)) + \" of \" + Count + \" items\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"\"Red: \" + If( IdentifierToText(trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(trVarianceReport.List.Current.VarianceReport.Red_InvoiceOfPeak - trVarianceReport.List.Current.VarianceReport.Red_ConsumptionOffPeak),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"If( IdentifierToText( trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", \"\", trVarianceReport.List.Current.VarianceReport.InvoiceOffPeak - trVarianceReport.List.Current.VarianceReport.ConsumptionOffpeak)),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"FormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", \"\", trVarianceReport.List.Current.VarianceReport.InvoiceOnPeak - trVarianceReport.List.Current.VarianceReport.ConsumptionOnPeak)),0,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"\"Red: \" + If( IdentifierToText(trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(trVarianceReport.List.Current.VarianceReport.Red_InvoiceOfPeak),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"If( IdentifierToText( trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", trVarianceReport.List.Current.VarianceReport.QuantityYearOffPeak_PYM, trVarianceReport.List.Current.VarianceReport.InvoiceOffPeak)),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"FormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", trVarianceReport.List.Current.VarianceReport.QuantityYearOnPeak_PYM, trVarianceReport.List.Current.VarianceReport.InvoiceOnPeak)),0,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"\"Red: \" + If(IdentifierToText(trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(trVarianceReport.List.Current.VarianceReport.Red_ConsumptionOffPeak),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"If( IdentifierToText( trVarianceReport.List.Current.VarianceReport.MeterTypeId) = \"D\",\nFormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", trVarianceReport.List.Current.VarianceReport.QuantityYearOffPeak_PYM, trVarianceReport.List.Current.VarianceReport.ConsumptionOffpeak)),0,\",\",\".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal","TextToDecimal"]}
{"text":"FormatDecimal(TextToDecimal(If(trVarianceReport.List.Current.VarianceReport.YacType = \"P\", trVarianceReport.List.Current.VarianceReport.QuantityYearOnPeak_PYM, trVarianceReport.List.Current.VarianceReport.ConsumptionOnPeak)),0,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"If(GetCount.List.Length > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCount.List.Length)) + \" of \" + GetCount.List.Length + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(GetCount.List.Current.int.int > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetCount.List.Current.int.int)) + \" of \" + GetCount.List.Current.int.int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If (TableRecords1.List.Current.GridConnection2.DateDetected <> NullDate(), DateTimeToDate(TableRecords1.List.Current.GridConnection2.DateDetected), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(EditRecord1.Record.GridConnection2.DateDetected<>NullDate(), DateTimeToDate(EditRecord1.Record.GridConnection2.DateDetected), \"(not available)\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"FormatDecimal( ( Abs(TextToDecimal(If\n (TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRHT = 0, \n  If(((TableRecords1.List.Current.ReconciliationSettlementByPeriod.VMHT -TableRecords1.List.Current.ReconciliationSettlementByPeriod.VCHT) - TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRHT) = 0, 0, 100)   ,\n  100*((TableRecords1.List.Current.ReconciliationSettlementByPeriod.VMHT -TableRecords1.List.Current.ReconciliationSettlementByPeriod.VCHT) - TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRHT) / TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRHT\n )))/2)\n+ ( Abs(TextToDecimal(If\n (TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRLT = 0, \n  If(((TableRecords1.List.Current.ReconciliationSettlementByPeriod.VMLT -TableRecords1.List.Current.ReconciliationSettlementByPeriod.VCLT) - TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRLT) = 0, 0, 100)   ,\n  100*((TableRecords1.List.Current.ReconciliationSettlementByPeriod.VMLT -TableRecords1.List.Current.ReconciliationSettlementByPeriod.VCLT) - TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRLT) / TableRecords1.List.Current.ReconciliationSettlementByPeriod.VRLT\n )))/2) ,2,\".\",\"\")","type":"Text","functions":["FormatDecimal","Abs","TextToDecimal","If"]}
{"text":"If(TableRecords1.List.Current.ReconciliationSettlementByPeriod.Year<>0,\n IntegerToText(TableRecords1.List.Current.ReconciliationSettlementByPeriod.Year) + \"-\" + FormatText(IntegerToText(TableRecords1.List.Current.ReconciliationSettlementByPeriod.Month),2,2,True,\"0\"),\n\"Total over \"+ Session.Filter_ReconciliationSettlement.Filter_ReconciliationSettlement.NumberOfMonthForTotal + \" months\")\n","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If(GetReconciliationSettlement.List.Length > 0, IntegerToText(TableRecords1.StartIndex + 1) + \" to \" + IntegerToText(Min(TableRecords1.StartIndex + TableRecords1.LineCount, GetReconciliationSettlement.List.Length)) + \" of \" + GetReconciliationSettlement.List.Length + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If(YearCalculated <> 0, IntegerToText(YearCalculated) + \"-\" + FormatText(IntegerToText(MonthCalculated), 2, 2, True, \"0\"), \"-\") ","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If (YearMetering <> 0, IntegerToText(YearMetering) + \"-\" + FormatText(IntegerToText(MonthMetering), 2, 2, True, \"0\"), \"-\") ","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If (YearMetering <> 0, IntegerToText(YearMetering) + \"-\" + FormatText(IntegerToText(MonthMetering),2,2,True,\"0\"), \"\") ","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If( GetTotalsPerGridConnection.List.CurrentRowNumber = GetTotalsPerGridConnection.List.Length -1,\nIf( TotalSlots <> 0,\nDecimalToText( Round( (TotalEstimatedSlots  * 100.0  / TotalSlots   ) * 100) / 100), \"0\"),\nIf( GetTotalsPerGridConnection.List.Current.Decimal_2.Decimal   <> 0,\nDecimalToText( Round( (GetTotalsPerGridConnection.List.Current.Decimal.Decimal  * 100.0  / GetTotalsPerGridConnection.List.Current.Decimal_2.Decimal   ) * 100) / 100), \"0\")) + \" %\"","type":"Text","functions":["If","DecimalToText","Round"]}
{"text":"FormatText(Hour(TableRecords1.List.Current.TimeSerie.Interval),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.TimeSerie.Interval),2,2,True,\"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"If(ReconciliationReportList.Length > 0, IntegerToText(ReconciliationReportTR.StartIndex + 1) + \" to \" + IntegerToText(Min(ReconciliationReportTR.StartIndex + ReconciliationReportTR.LineCount, ReconciliationReportList.Length)) + \" of \" + ReconciliationReportList.Length  + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"If (TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL <> \"Total\",\nSubstr(DateTimeToTime(TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL), 0, 5), TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL)","type":"Text","functions":["If","Substr","DateTimeToTime"]}
{"text":"FormatText(Year(ListRecords1.List.Current.Date.Date), 4, 4, True, \"0\") + \"-\" + \nFormatText(Month(ListRecords1.List.Current.Date.Date), 2, 2, True, \"0\") + \"-\" + \nFormatText(Day(ListRecords1.List.Current.Date.Date), 2, 2, True, \"0\") + \" \" + \n\nFormatText(Hour(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Year","Month","Day","Hour","Minute"]}
{"text":"FormatText(Hour(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"\"Reconciliation for Calculated Period \" + If (Year <> 0, IntegerToText(Year) + \"-\" + FormatText(IntegerToText(Month),2,2,True,\"0\"), \"\") ","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If (Year <> 0, IntegerToText(Year) + \"-\" + FormatText(IntegerToText(Month),2,2,True,\"0\"), \"\") ","type":"Text","functions":["If","IntegerToText","FormatText"]}
{"text":"If(TableRecords1.List.Current.INVOICE_PERFORMANCE.Invoice_End = NullDate(), \"\",\nDiffSeconds(\n TableRecords1.List.Current.INVOICE_PERFORMANCE.Invoice_Start,\n TableRecords1.List.Current.INVOICE_PERFORMANCE.Invoice_End)\n+ \"s\")","type":"Text","functions":["If","NullDate","DiffSeconds"]}
{"text":"If (TableRecords.List.Current.CRM_CONTRACT_GRID_CONNECTION.MeasurementType = \"M\",\n \"Telemetric\",\n \"Profiled\" \n  + If (TableRecords.List.Current.CRM_CONTRACT_GRID_CONNECTION.MeterTypeId <> NullTextIdentifier(),\n  \" (\" + If(TableRecords.List.Current.CRM_CONTRACT_GRID_CONNECTION.MeterTypeId = TextToIdentifier(\"D\"), \"Double\", \"Single\") + \"/\" \n  + TableRecords.List.Current.CRM_CONTRACT_GRID_CONNECTION.ProfiledMeteringMethod + \")\",\n  \"\"))","type":"Text","functions":["If","NullTextIdentifier","TextToIdentifier"]}
{"text":"If (srInvoice.Record.INVOICE.FirstDayMonth = NullDate(), \n \"\", \n Year(srInvoice.Record.INVOICE.FirstDayMonth) + \"-\" + Month(srInvoice.Record.INVOICE.FirstDayMonth))","type":"Text","functions":["If","NullDate","Year","Month"]}
{"text":"If(tblMeterReadings.List.Current.INVOICE_EXTENDED.PeriodExpectedBegin = NullDate(), \"\",  Year(tblMeterReadings.List.Current.INVOICE_EXTENDED.PeriodExpectedBegin)\n + \" / \"\n + Month(tblMeterReadings.List.Current.INVOICE_EXTENDED.PeriodExpectedBegin))","type":"Text","functions":["If","NullDate","Year","Month"]}
{"text":"If(GetUser.List.Current.INDIV_COLAB.dt_nasc_indiv_colab <> NullDate(),DateTimeToDate(GetUser.List.Current.INDIV_COLAB.dt_nasc_indiv_colab), \"\") ","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (IntegerToIdentifier( TextToInteger( GroupId)) <> NullIdentifier() or New, If (not New, \" - \" + EncodeHtml(GroupEditRecord.Record.GROUP.Name), \" - <I>Nova</I>\"), \"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger","NullIdentifier","EncodeHtml"]}
{"text":"\"Is Running Since: \" + GetTimerSettingsLedgerFile_PreCheck.List.Current.Cyclic_Job_Shared.Is_Running_Since +\n\" (\" + \nIf(DiffMinutes(GetTimerSettingsLedgerFile_PreCheck.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) = 0,\n DiffSeconds(GetTimerSettingsLedgerFile_PreCheck.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) + \"sec)\",\n DiffMinutes(GetTimerSettingsLedgerFile_PreCheck.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) + \"min)\"\n)","type":"Text","functions":["If","DiffMinutes","CurrDateTime","DiffSeconds"]}
{"text":"\"Is Running Since: \" + GetTimerSettings__LedgerFile_Create.List.Current.Cyclic_Job_Shared.Is_Running_Since +\n\" (\" + \nIf(DiffMinutes(GetTimerSettings__LedgerFile_Create.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) = 0,\n DiffSeconds(GetTimerSettings__LedgerFile_Create.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) + \"sec)\",\n DiffMinutes(GetTimerSettings__LedgerFile_Create.List.Current.Cyclic_Job_Shared.Is_Running_Since, CurrDateTime()) + \"min)\"\n)","type":"Text","functions":["If","DiffMinutes","CurrDateTime","DiffSeconds"]}
{"text":"If(Count = 0,\"\",\nIntegerToText(TRIssueList.StartIndex + 1) + \" to \" + IntegerToText(Min(TRIssueList.StartIndex + TRIssueList.LineCount, Count)) + \" of \" + Count + \" \")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"FormatDecimal(TableInvoiceValues.List.Current.GridFeeInvoiceMsg.Qty - \nTextToDecimal( If(TableInvoiceValues.List.Current.GridFeeType.RelatesTo =\"PEAK_ACHIEVED\" and\nTableInvoiceValues.List.Current.GridFeeType.Type = \"D\" and\nTableInvoiceValues.List.Current.GridOperator.E1_Parameter1 <> 0 and\nTableInvoiceValues.List.Current.GridOperator.E1_Parameter2 <> 0 and\nTableInvoiceValues.List.Current.GridOperator.E1_Parameter3 <> 0,\nFormatDecimal(\n(TableInvoiceValues.List.Current.GridOperator.E1_Parameter1 +(TableInvoiceValues.List.Current.GridOperator.E1_Parameter2 /\n(TableInvoiceValues.List.Current.GridOperator.E1_Parameter3 + TableInvoiceValues.List.Current.GridFeeInvoiceMsg.ConsumpValue))) * TableInvoiceValues.List.Current.GridFeeInvoiceMsg.ConsumpValue ,2,\".\",\"\"),\nFormatDecimal(TableInvoiceValues.List.Current.GridFeeInvoiceMsg.ConsumpValue,2,\".\",\"\") \n)\n) ,2,\".\",\"\")","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"Substr(FormatDateTime(TRPost.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(TRPost.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)","type":"Text","functions":["Substr","FormatDateTime","Length"]}
{"text":"Substr(FormatDateTime(AQryTopics.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(AQryTopics.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)","type":"Text","functions":["Substr","FormatDateTime","Length"]}
{"text":"Substr(FormatDateTime(TRPosts.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(TRPosts.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)","type":"Text","functions":["Substr","FormatDateTime","Length"]}
{"text":"If (TableRecords1.List.Current.st_Status_Report.InvoiceDate  = NullDate(), \"\", DateTimeToDate(TableRecords1.List.Current.st_Status_Report.InvoiceDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetTitle.List.Current.LIVROS.isbn_livro = \"[sem dados]\" or TrimStart(TrimEnd(GetTitle.List.Current.LIVROS.isbn_livro)) = \"\", \"\", GetTitle.List.Current.LIVROS.isbn_livro)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(GetTitle.List.Current.LIVROS.isbn_livro = \"[sem dados]\" or TrimStart(TrimEnd(GetTitle.List.Current.LIVROS.isbn_livro)) = \"\", \"\", \"ISBN:\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(tblBooks.List.Current.BOOK_SUMMARY.DataPublicacao = NullDate(),\"\",DateTimeToDate(tblBooks.List.Current.BOOK_SUMMARY.DataPublicacao))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (CfgNodeId <> NullIdentifier(), EncodeHtml(CfgNode.Record.CONFIG_NODE.Label), \"<I>Novo</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"Substr(\nDateTimeToText(\nTR_History.List.Current.ACTIVITY_ANUAL_SUMMARY_HISTORY.TimeStamp\n),\n0,\nLength(\nDateTimeToText(\nTR_History.List.Current.ACTIVITY_ANUAL_SUMMARY_HISTORY.TimeStamp\n))-3)\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TR_History.List.Current.GROUP_HISTORY.TimeStamp),0,Length(DateTimeToText(TR_History.List.Current.GROUP_HISTORY.TimeStamp))-3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TableRecords1.List.Current.GROUP_HISTORY.TimeStamp),0,Length(DateTimeToText(TableRecords1.List.Current.GROUP_HISTORY.TimeStamp))-3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(If(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityEndDate = NullDate(), \"\", TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityEndDate),0,Length(If(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityEndDate = NullDate(), \"\", TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityEndDate)) - 3)","type":"Text","functions":["Substr","If","NullDate","Length"]}
{"text":"Substr(DateTimeToText(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityStartDate),0,Length(DateTimeToText(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityStartDate)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(Index(ToLower(TableRecords.List.Current.StructRelatedDocumentsForTable.RelationName), \"antecedente\") < 0,\n\nIf(TableRecords.List.Current.StructRelatedDocumentsForTable.DocumentId  = DocumentId, \nTableRecords.List.Current.StructRelatedDocumentsForTable.RelationName, TableRecords.List.Current.StructRelatedDocumentsForTable.ReverseRelationName),\n\nIf(TableRecords.List.Current.StructRelatedDocumentsForTable.DocumentDate  >= TableRecords.List.Current.StructRelatedDocumentsForTable.RelDocDate,\nIf(TableRecords.List.Current.StructRelatedDocumentsForTable.DocumentId  = DocumentId, TableRecords.List.Current.StructRelatedDocumentsForTable.RelationName,\nTableRecords.List.Current.StructRelatedDocumentsForTable.ReverseRelationName),\n\nIf(TableRecords.List.Current.StructRelatedDocumentsForTable.RelDocID  = DocumentId, TableRecords.List.Current.StructRelatedDocumentsForTable.RelationName,\nTableRecords.List.Current.StructRelatedDocumentsForTable.ReverseRelationName)\n)) ","type":"Text","functions":["If","Index","ToLower"]}
{"text":"Substr(DateTimeToText(TableRecords3.List.Current.FILE_DATA.CreatedDateTime),0,Length(DateTimeToText(TableRecords3.List.Current.FILE_DATA.CreatedDateTime)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"\"- GetDOCUMENT.current.DOCUMENT.DispatchDepartment=\" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.DispatchDepartment) + \n\"- GetDOCUMENT.current.DOCUMENT.DispatchCD=\" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.DispatchCD) + \n\"DEBUG INFORMATION --> \" + \"OutputControl = [\" + HandleDispatchVisibility.OutputControl  + \"] [\" + EditRecord.Record.STATE.Code + \"]\" + \"SelectedResponsibleName=[\" + SelectedResponsibleName + \"] - DocumentNature=\" + DocumentNature + \" - DocumentNatureId =\" + IntegerToText(EditRecord.Record.DOCUMENT.DocumentNatureId)  + \" - IdInterno =\" + IntegerToText(IDInterno) + \n\" - IDentrada=\" + IntegerToText(IDentrada) + \n\"IsPostBack =\" + BooleanToText(IsPostBack)  + \n\"GetDOCUMENT.current.DOCUMENT.Id  = NullIdentifier() =\" + BooleanToText(GetDOCUMENT.List.Current.DOCUMENT.Id   = NullIdentifier())  + \n\"- DocumentId=\" + IntegerToText(DocumentId) + \n\" - GetDOCUMENT.current.DOCUMENT.Id = \" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.Id) + \n\" - GetDOCUMENT.current.DOCUMENT.Priority=\" + GetDOCUMENT.List.Current.DOCUMENT.Priority + \"<br>\" + \nDebugMessage + \" - NewDocument = \" + BooleanToText(NewDocument) + \n\" - NewClassificationSelected = [\" + NewClassificationSelected + \"]\" + \"<br>\"","type":"Text","functions":["IntegerToText","BooleanToText","NullIdentifier"]}
{"text":"\n\nSubstr(If(TR_History.List.Current.Lbpm_HistoryItem.ActivityEndDate = NullDate(), \"\", TR_History.List.Current.Lbpm_HistoryItem.ActivityEndDate),0,Length(If(TR_History.List.Current.Lbpm_HistoryItem.ActivityEndDate = NullDate(), \"\", TR_History.List.Current.Lbpm_HistoryItem.ActivityEndDate)) - 3) ","type":"Text","functions":["Substr","If","NullDate","Length"]}
{"text":"Substr(DateTimeToText(TR_History.List.Current.Lbpm_HistoryItem.ActivityStartDate),0,Length(DateTimeToText(TR_History.List.Current.Lbpm_HistoryItem.ActivityStartDate)) - 3) \n\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(Index(ToLower(TableRecords.List.Current.DOCUMENT_RELATION_TYPE.Name), \"antecedente\") < 0,\n\nIf(TableRecords.List.Current.DOCUMENT_RELATION.Document1 = DocumentId, \nTableRecords.List.Current.DOCUMENT_RELATION_TYPE.Name, TableRecords.List.Current.DOCUMENT_RELATION_TYPE.ReverseRelationName),\n\nIf(TableRecords.List.Current.DOCUMENT.DocumentDate >= TableRecords.List.Current.DOCUMENT_2.DocumentDate,\nIf(TableRecords.List.Current.DOCUMENT_RELATION.Document1 = DocumentId, TableRecords.List.Current.DOCUMENT_RELATION_TYPE.Name,\nTableRecords.List.Current.DOCUMENT_RELATION_TYPE.ReverseRelationName),\n\nIf(TableRecords.List.Current.DOCUMENT_RELATION.Document2 = DocumentId, TableRecords.List.Current.DOCUMENT_RELATION_TYPE.Name,\nTableRecords.List.Current.DOCUMENT_RELATION_TYPE.ReverseRelationName)\n))","type":"Text","functions":["If","Index","ToLower"]}
{"text":"Substr(DateTimeToText(TR_Files.List.Current.FILE_DATA.CreatedDateTime),0,Length(DateTimeToText(TR_Files.List.Current.FILE_DATA.CreatedDateTime)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(URL2RetDir <> \"\" or Length(TrimStart(TrimEnd(URL2Return))) > 0, \" | \", \"\")","type":"Text","functions":["If","Length","TrimStart","TrimEnd"]}
{"text":"Substr(DateTimeToText(TableRecordsINCUMP_PE_HIST.List.Current.AN_INCUMP_PE_HISTORY.InsertedAt\n),0,Length(DateTimeToText(TableRecordsINCUMP_PE_HIST.List.Current.AN_INCUMP_PE_HISTORY.InsertedAt\n))-3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TableRecordsINCUMP_ZA_HISTORY.List.Current.AN_INCUMP_ZA_HISTORY.InsertedAt\n),0,Length(DateTimeToText(TableRecordsINCUMP_ZA_HISTORY.List.Current.AN_INCUMP_ZA_HISTORY.InsertedAt\n))-3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(Length(TempRelationTableRecords.List.Current.DIPLOMAS.sumario_diploma) > 200, Substr(TempRelationTableRecords.List.Current.DIPLOMAS.sumario_diploma, 0, 195) + \"(...)\", TempRelationTableRecords.List.Current.DIPLOMAS.sumario_diploma)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Index(ToLower( GetAmbito.List.Current.AMBITOS_DIPLOMAS.desig_ambito_diploma), \"nacional\") >= 0, \"*\", \"\")","type":"Text","functions":["If","Index","ToLower"]}
{"text":"\"<SCRIPT language=javascript>\nshow_yearly_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',special_days,false,'CalendarDiv\" + YearlyCalendar.RuntimeId + \"'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\" + If(ShowNavigationButtons, \"true\",\"false\") + \",\" + If(IsSpecialDayPredominant, \"true\",\"false\")   + \");</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"\"<SCRIPT language=javascript>\nshow_calendar('WebForm1.wt\" + InputWidgetName +\n\"',document.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),document.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),document.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),'YYYY-MM-DD','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',special_days,false,'CalendarDiv\" + YearlyCalendar.RuntimeId + \"'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))\n+\"',\"+ If(IsSpecialDayPredominant, \"true\",\"false\")  +\");</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"If(ListRecords1.List.Current.ISSUE.Last_Modified=NullDate(),\"\",DateTimeToDate(ListRecords1.List.Current.ISSUE.Last_Modified)  + \" - \") ","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"TrimStart(TrimEnd(\nIf(tblExemp.List.Current.WS_WATER_SOURCE.Designation<>\"\", tblExemp.List.Current.WS_WATER_SOURCE.Designation, \ntblExemp.List.Current.WS_PREDEFINED_WATER_SOURCE.Description + If (tblExemp.List.Current.WS_WATER_SOURCE.EGCode <> \"\", \" (\" + tblExemp.List.Current.WS_WATER_SOURCE.EGCode  + \")\", \"\"))))","type":"Text","functions":["TrimStart","TrimEnd","If"]}
{"text":"If(sr_ProcessPD.Record.Struct_PD_Details.DataErsar <> NullDate(),FormatDateTime(sr_ProcessPD.Record.Struct_PD_Details.DataErsar, \"yyyy-MM-dd\"),\"-\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(sr_ProcessPD.Record.Struct_PD_Details.DataEG <> NullDate(),FormatDateTime(sr_ProcessPD.Record.Struct_PD_Details.DataEG, \"yyyy-MM-dd\"), \"-\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(TableRecordsHistory.List.Current.GDG_HISTORY_ITEM.ActivityStatus = \"O\", \"\", Substr(DateTimeToText(TableRecordsHistory.List.Current.GDG_HISTORY_ITEM.ActivityEndDate),0,Length(DateTimeToText(TableRecordsHistory.List.Current.GDG_HISTORY_ITEM.ActivityEndDate)) - 3))\n\n","type":"Text","functions":["If","Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(TR_History.List.Current.PROCESS_HISTORY.Timestamp),0,Length(DateTimeToText(TR_History.List.Current.PROCESS_HISTORY.Timestamp)) - 3)","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If(ShowRecord2.Record.PROCESS_CRT.Id = NullIdentifier() or ShowRecord2.Record.PROCESS_CRT.StartingDate = NullDate(), \"\", ShowRecord2.Record.PROCESS_CRT.StartingDate)","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"If(ShowRecord1.Record.EP_OFFER2.ValidThruDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_OFFER2.ValidThruDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord1.Record.EP_OFFER2.DeliveryDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_OFFER2.DeliveryDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ShowRecord1.Record.EP_AUCTION2.ExpectedDeliveryDate <> NullDate(), DateTimeToDate(ShowRecord1.Record.EP_AUCTION2.ExpectedDeliveryDate), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(tblDecretos.List.Current.DIPLOMAS.dt_diploma = NullDate() or tblDecretos.List.Current.DIPLOMAS.dt_diploma = #1999-01-01#, \"n/d\", Substr(tblDecretos.List.Current.DIPLOMAS.dt_diploma,0, Index(tblDecretos.List.Current.DIPLOMAS.dt_diploma,\" \")))","type":"Text","functions":["If","NullDate","Substr","Index"]}
{"text":"Substr(DateTimeToText(trHistorico.List.Current.PCQA_History.InsertedAt),0,Length(DateTimeToText(trHistorico.List.Current.PCQA_History.InsertedAt))-3)\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"Substr(DateTimeToText(trHistorico.List.Current.PCQA_CLONE_History.InsertedAt),0,Length(DateTimeToText(trHistorico.List.Current.PCQA_CLONE_History.InsertedAt))-3)\n","type":"Text","functions":["Substr","DateTimeToText","Length"]}
{"text":"If( Length(RecentItemsList.List.Current.RecentItem.Label) > MaxLabelLength,\n    Substr(RecentItemsList.List.Current.RecentItem.Label, 0,\n           MaxLabelLength-3) + \"...\",\n    RecentItemsList.List.Current.RecentItem.Label\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TRMatchedApplications.List.Current.DCApplicationInfo.ApplicationCreatedOn= NullDate(),\"\",DateTimeToDate(TRMatchedApplications.List.Current.DCApplicationInfo.ApplicationCreatedOn))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TRApplication.List.Current.DCApplicationInfo.ApplicationCreatedOn= NullDate(),\"\",DateTimeToDate(TRApplication.List.Current.DCApplicationInfo.ApplicationCreatedOn))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(GetApplicationById.List.Current.BaseApplication.SubmittedOn= NullDate(),\"Unknown Date\",DateTimeToDate(GetApplicationById.List.Current.BaseApplication.SubmittedOn))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Trim(CustomerAddressList.Current.CustomerAddress.CUSTOMER_NAME) + If( Length(CustomerAddressList.Current.CustomerAddress.IPLA_CODE) > 0,\"-\" + Trim(CustomerAddressList.Current.CustomerAddress.IPLA_CODE),\"\") + NewLine() + \nTrim(CustomerAddressList.Current.CustomerAddress.ADDRESS_LINE_1)  + NewLine() + \nIf(Length(CustomerAddressList.Current.CustomerAddress.ADDRESS_LINE_2) > 0,Trim(CustomerAddressList.Current.CustomerAddress.ADDRESS_LINE_2)  + NewLine(),\"\") +\nTrim(CustomerAddressList.Current.CustomerAddress.CITY_NAME)+ \", \" + Trim(CustomerAddressList.Current.CustomerAddress.STATE_NAME) + \" \" + Trim(CustomerAddressList.Current.CustomerAddress.POST_CODE) + NewLine() +\nTrim(CustomerAddressList.Current.CustomerAddress.ISO_COUNTRY_CODE) + NewLine() + \nTrim(currContact.PRF_CONTACT.PHONE_NUMBER) + NewLine() + NewLine() + \nTrim(currContact.PRF_CONTACT.EMAIL)\n","type":"Text","functions":["Trim","If","Length","NewLine"]}
{"text":"CustomerAddressList.Current.CustomerAddress.CUSTOMER_NAME + If( Length(CustomerAddressList.Current.CustomerAddress.IPLA_CODE) > 0,\"-\" + Trim(CustomerAddressList.Current.CustomerAddress.IPLA_CODE),\"\") + NewLine() + \nCustomerAddressList.Current.CustomerAddress.ADDRESS_LINE_1  + \" \" + CustomerAddressList.Current.CustomerAddress.ADDRESS_LINE_2 + NewLine() + \nCustomerAddressList.Current.CustomerAddress.CITY_NAME + \", \" + CustomerAddressList.Current.CustomerAddress.STATE_CODE + \" \" + CustomerAddressList.Current.CustomerAddress.POST_CODE + \", \" + CustomerAddressList.Current.CustomerAddress.COUNTRY_NAME\n\n","type":"Text","functions":["If","Length","Trim","NewLine"]}
{"text":"Trim(currContact.PRF_CONTACT.EMAIL) + NewLine() + \nIf(currContact.PRF_CONTACT.WWID > 0,Trim(currContact.PRF_CONTACT.WWID) + NewLine(), \"\") +\nTrim(currContact.PRF_CONTACT.PHONE_NUMBER)\n","type":"Text","functions":["Trim","NewLine","If"]}
{"text":"If(GetContactByID.Contact.PRF_CONTACT.FIRST_NAME <> \"\", GetContactByID.Contact.PRF_CONTACT.FIRST_NAME + \" \", \"\") +\nIf(GetContactByID.Contact.PRF_CONTACT.LAST_NAME <> \"\", GetContactByID.Contact.PRF_CONTACT.LAST_NAME + \" \", \"\") + If(ShowCMFId and GetContactByID.Customer.PRF_CUSTOMER.CUSTOMER_ID <> NullIdentifier(), \"(\" + GetContactByID.Customer.PRF_CUSTOMER.CUSTOMER_CODE + \")\", \"\") + NewLine()","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"\"<script type=\"\"text/javascript\"\">\nosjs(function() {\n    var theInputWidgetId = osjs('#'+'\"+InputWidgetId+\"');\n    var promptDateFormat = '\"+Replace(ToUpper(DateFormat),\"YY\",\"YYYY\")+\"'\n    if(theInputWidgetId.attr('readonly')) {\n        return;\n    }\n    else {\n        setPrompt('\"+InputWidgetId+\"', promptDateFormat);\n        osjs.datepicker.setDefaults({ dateFormat: '\"+ DateFormat +\"' });\n        theInputWidgetId.datepicker({\n            \"+\n            If(EnableWeekend = False,\"beforeShowDay: $.datepicker.noWeekends,\", \"\")            \n            +\"             \n            showWeek: true,            \n            beforeShow: function(input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\n            onChangeMonthYear: function(year, month, input){ Clear(theInputWidgetId); setPrompt('\"+InputWidgetId+\"', promptDateFormat); }, \n            onSelect: function(date) { osjs(theInputWidgetId).change(); setPrompt('\"+InputWidgetId+\"', promptDateFormat); },\"+           \n            If(MinDateConfig<>\"\",\" minDate: '\"+MinDateConfig+\"', \",\"\")+\n            If(MaxDateConfig<>\"\",\" maxDate: '\"+MaxDateConfig+\"', \",\"\")+\n            If(NumberOfMonths<>0,\" numberOfMonths: \"+NumberOfMonths+\", \",\"\")+\n            If(ShowIcon,\" showOn: \"+If(OnlyIcon,\"'button',\",\"'both',\")+\"\n                                 buttonImage: '/SAM_Theme/img/Datepicker_IconCalendar.png',\n                                 buttonText: 'Select a Date'\",\"\")+\"\n        });\n    }\n    \"+ If(EnableInput,\"\",\"\n    theInputWidgetId.attr('readonly','true')\")+\"\n});\n\n</script>\"","type":"Text","functions":["Replace","ToUpper","If"]}
{"text":"If(IntegerToIdentifier(CurrentStatus.RequestProductStatusId.STATUS_ID) = Entities.LKP_STATUS.REQUESTED, 0 + \" Approved\" ,If((Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger( CurReqProd_Status ) and  (Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger( Entities.LKP_STATUS.APPROVED ) or Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger( Entities.LKP_STATUS.ORDERED )  )  ) or (ShowIPLAErrors and (Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID <> IdentifierToInteger(Entities.LKP_STATUS.CANCELLED)))  , GetGlobalApprovedSum.List.Current.Integer.val + \" Approved\",If(not ShowIPLAErrors and Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger(Entities.LKP_STATUS.ON_HOLD_IPLA) , \"On Hold\", If(Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger(Entities.LKP_STATUS.REJECTED), \"Rejected\" , If(Reject_Canceled_OnHold_Commited_Order.RequestProductProductId.STATUS_ID = IdentifierToInteger(Entities.LKP_STATUS.CANCELLED), \"Cancelled\" ,\"\")))\n) )","type":"Text","functions":["If","IntegerToIdentifier","IdentifierToInteger"]}
{"text":"Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE)","type":"Text","functions":["Month","Day","Year"]}
{"text":"Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE)","type":"Text","functions":["Month","Day","Year"]}
{"text":"Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \" \" + Hour(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \":\" + Minute(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \":\" + Second(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE)","type":"Text","functions":["Month","Day","Year","Hour","Minute","Second"]}
{"text":"If(DateTimeToDate(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE)= TextToDate(\"1900-01-01\"),\"\", Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) + \"/\" +Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) )","type":"Text","functions":["If","DateTimeToDate","TextToDate","Month","Day","Year"]}
{"text":"If(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE = NullDate(), \"\", Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.CONFIRM_DELIVERY_DATE) )","type":"Text","functions":["If","NullDate","Month","Day","Year"]}
{"text":"If(Length(GridTR.List.Current.Strain.Name)>20,Substr(GridTR.List.Current.Strain.Name,0,17)+\"...\",GridTR.List.Current.Strain.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ColonySummaryReportTable2.List.Current.Strain.Name)>20,Substr(ColonySummaryReportTable2.List.Current.Strain.Name,0,17)+\"...\",ColonySummaryReportTable2.List.Current.Strain.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ColonySummaryReportTable.List.Current.Strain.Name)>20,Substr(ColonySummaryReportTable.List.Current.Strain.Name,0,17)+\"...\",ColonySummaryReportTable.List.Current.Strain.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(CageReportItemTable.List.Current.Strain.Name)>20,Substr(CageReportItemTable.List.Current.Strain.Name,0,17)+\"...\",CageReportItemTable.List.Current.Strain.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TextToTrim) <= CharactersToShow,TextToTrim,Substr(TextToTrim,0,CharactersToShow) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(BaseHandlingCostsTable.List.Current.Client.Id = NullIdentifier(),\"-\",\nBaseHandlingCostsTable.List.Current.Client.InternalId + \" - \" + \nIf(Trim(BaseHandlingCostsTable.List.Current.Client.Title) = \"\",\"\",BaseHandlingCostsTable.List.Current.Client.Title) + \" \" +\nBaseHandlingCostsTable.List.Current.Client.FirstNames + \" \" +\nBaseHandlingCostsTable.List.Current.Client.LastNames)","type":"Text","functions":["If","NullIdentifier","Trim"]}
{"text":"If(Length(CommentTemplateTable.List.Current.CommentTemplate.Comment)<100,CommentTemplateTable.List.Current.CommentTemplate.Comment,Substr(CommentTemplateTable.List.Current.CommentTemplate.Comment,0,100)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(RetainReasonTable.List.Current.RetainReason.Description<>\"\",\nIf(Length(RetainReasonTable.List.Current.RetainReason.Description)<100,RetainReasonTable.List.Current.RetainReason.Description,Substr(RetainReasonTable.List.Current.RetainReason.Description,0,100)+\"...\"),\"-\")\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(BackToRevisionReasonTable.List.Current.BackToRevisionReason.Description<>\"\",\nIf(Length(BackToRevisionReasonTable.List.Current.BackToRevisionReason.Description)<100,BackToRevisionReasonTable.List.Current.BackToRevisionReason.Description,Substr(BackToRevisionReasonTable.List.Current.BackToRevisionReason.Description,0,100)+\"...\"),\"-\")\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(VerificationReasonTable.List.Current.VerificationReason.Description<>\"\",\nIf(Length(VerificationReasonTable.List.Current.VerificationReason.Description)<100,VerificationReasonTable.List.Current.VerificationReason.Description,Substr(VerificationReasonTable.List.Current.VerificationReason.Description,0,100)+\"...\"),\"-\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DestructionReasonTable.List.Current.DestructionReason.Description<>\"\",\nIf(Length(DestructionReasonTable.List.Current.DestructionReason.Description)<100,DestructionReasonTable.List.Current.DestructionReason.Description,Substr(DestructionReasonTable.List.Current.DestructionReason.Description,0,100)+\"...\"),\"-\")\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Session.Filter_HomePage.Calendar_Filters.EndDateTo <> NullDate(), FormatDateTime(Session.Filter_HomePage.Calendar_Filters.EndDateTo, \"yyyyMMdd\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(Session.Filter_HomePage.Calendar_Filters.EndDateFrom <> NullDate(), FormatDateTime(Session.Filter_HomePage.Calendar_Filters.EndDateFrom, \"yyyyMMdd\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(Session.Filter_HomePage.Calendar_Filters.StartDateTo <> NullDate(), FormatDateTime(Session.Filter_HomePage.Calendar_Filters.StartDateTo, \"yyyyMMdd\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(Session.Filter_HomePage.Calendar_Filters.StartDateFrom <> NullDate(), FormatDateTime(Session.Filter_HomePage.Calendar_Filters.StartDateFrom, \"yyyyMMdd\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n    \n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ headerLeft +\"',\n                center: '\"+ headerCenter +\"',\n                right: '\"+ headerRight +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\", \n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n            \n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\", \n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\", \n\n            editable: true,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: true,\n            selectHelper: true,\n            select: function(start, end, allDay)\n            {\n                alert( start + ' ' + end)\n            },    \n\n            eventClick: function(calEvent, jsEvent, view) {\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n\n            eventDrop: function(calEvent,dayDelta,minuteDelta,allDay,revertFunc) {\n                if (!confirm('Are you sure about this change?')) {\n                    revertFunc();\n                }\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n\n            eventResize: function(calEvent,dayDelta,minuteDelta,revertFunc) {\n                if (!confirm('is this okay?')) {\n                    revertFunc();\n                }\n                alert( calEvent.start + ' ' + calEvent.end)\n            },\n/* **************************************************************************************\nhttp://stackoverflow.com/questions/8813454/fullcalendar-current-time-line-on-week-view-and-day-view\n*************************************************************************************** */\n            viewDisplay: function(view) {\n                window.clearInterval(timelineInterval);\n                timelineInterval = window.setInterval(setTimeline, 10000);\n                try {\n                    setTimeline();\n                } catch(err) { }\n            },\n\n            loading: function(bool) {\n              if (bool) \n                $('\"+loadingID+\"').show();\n              else \n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n         \n        // Is used for Current Time START\n            function setTimeline() {\n                var curTime = new Date();\n                if (curTime.getHours() == 0 && curTime.getMinutes() <= 5) // Because I am calling this function every 5 minutes\n                {// the day has changed\n                    var todayElem = $('.fc-today');\n                    todayElem.removeClass('fc-today');\n                    todayElem.removeClass('fc-state-highlight');\n\n                    todayElem.next().addClass('fc-today');\n                    todayElem.next().addClass('fc-state-highlight');\n                }\n\n                var parentDiv = $('.fc-agenda-slots:visible').parent();\n                var timeline = parentDiv.children('.timeline');\n                var timelineNowptr = parentDiv.children('.timelineNowptr');\n\n                if (timeline.length == 0) { //if timeline isn't there, add it\n                    timeline = $('<hr>').addClass('timeline');\n                    parentDiv.prepend(timeline);\n\n                    timelineNowptr = $('<span>').addClass('timelineNowptr');\n                    parentDiv.prepend(timelineNowptr);\n                }\n\n                var curCalView = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('getView');\n                if (curCalView.visStart < curTime && curCalView.visEnd > curTime) {\n                    timeline.show();\n                    timelineNowptr.show();\n                } else {\n                    timeline.hide();\n                    timelineNowptr.hide();\n                }\n\n                var startSeconds = curCalView.getMinMinute()*60;\n                var endSeconds = curCalView.getMaxMinute()*60;\n                var curSeconds = (curTime.getHours() * 60 * 60) + (curTime.getMinutes() * 60) + curTime.getSeconds();\n                var percentOfDay = (curSeconds-startSeconds) / (endSeconds-startSeconds);\n                var topLoc = Math.floor(parentDiv.height() * percentOfDay);\n                timeline.css('top', topLoc + 'px');\n                timelineNowptr.css('top', (topLoc-4) + 'px');\n\n                if (curCalView.name == 'agendaWeek') { //week view, don't want the timeline to go the whole way across\n                    var dayCol = $('.fc-today:visible');\n                    if (dayCol.position() != null) {\n                        var left = dayCol.position().left + 1;\n                        var width = dayCol.width();\n                        timeline.css({\n                            left: left + 'px',\n                            width: width + 'px'\n                        });\n                    }\n                }\n            }\n            // Is used for Current Time END\n\n    });\n\n</script>\n\"","type":"Text","functions":["If","Day","Month","Year"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n    \n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm:ss' ;\n\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ headerLeft +\"',\n                center: '\"+ headerCenter +\"',\n                right: '\"+ headerRight +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\", \n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n            \n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"d { '&#8212;' d MMM yyyy}\"\",    // 7 - 13 Sep 2009\n                        day: 'dddd, d MMM yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd d-M', // Mon 14-7\n                        day: 'dddd d-M'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\", \n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\", \n\n            editable: false,\n            events: \"+ Events + \",\n\n            /* ***************************************************************************************\n                selectable:true will enable user to select datetime slot\n                selectHelper will add helpers for selectable.\n            *************************************************************************************** */\n            selectable: false,\n            selectHelper: false,\n            loading: function(bool) {\n              if (bool) \n                $('\"+loadingID+\"').show();\n              else \n                $('\"+loadingID+\"').hide();\n            }\n\n        });\n         \n        \n    });\n\n</script>\n\"","type":"Text","functions":["If","Day","Month","Year"]}
{"text":"If(OperationTable.List.Current.Operation.ClientId<> NullIdentifier(),(If(OperationTable.List.Current.Client.Title<>\"\",OperationTable.List.Current.Client.Title +\" \",\"\")+\nOperationTable.List.Current.Client.FirstNames+ \" \" + NewLine() + \nOperationTable.List.Current.Client.LastNames),\"-\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"\" \" + If(DiffDays(OperationCommentsListRecords.List.Current.OperationComments.CreatedOn,CurrDateTime())<1,\"at\",\"on\") + \" \"","type":"Text","functions":["If","DiffDays","CurrDateTime"]}
{"text":"If(OperationTable.List.Current.Operation.ClientId<> NullIdentifier(),\nOperationTable.List.Current.Client.InternalId,\"-\") + \" - \" + If(OperationTable.List.Current.Operation.ClientId<> NullIdentifier(),(If(OperationTable.List.Current.Client.Title<>\"\",OperationTable.List.Current.Client.Title +\" \",\"\")+\nOperationTable.List.Current.Client.FirstNames+NewLine()+\nOperationTable.List.Current.Client.LastNames),\"-\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(OperationsPreAlertadas.List.Current.Operation.ClientId<> NullIdentifier(),\nOperationsPreAlertadas.List.Current.Client.InternalId,\"-\") + \" - \" + If(OperationsPreAlertadas.List.Current.Operation.ClientId<> NullIdentifier(),(If(OperationsPreAlertadas.List.Current.Client.Title<>\"\",OperationsPreAlertadas.List.Current.Client.Title +\" \",\"\")+\nOperationsPreAlertadas.List.Current.Client.FirstNames+NewLine()+\nOperationsPreAlertadas.List.Current.Client.LastNames),\"-\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(ShippingAddress_Show.Record.Address.AddressLine1 <> \"\",\nShippingAddress_Show.Record.Address.AddressLine1 + NewLine() +\nIf(Trim(ShippingAddress_Show.Record.Address.InternalNumber) = \"\",\n    ShippingAddress_Show.Record.Address.ExternalNumber,\n    ShippingAddress_Show.Record.Address.InternalNumber + \", \" + ShippingAddress_Show.Record.Address.ExternalNumber) + NewLine() +\nShippingAddress_Show.Record.Address.AddressLine2 + \", \" + ShippingAddress_Show.Record.Address.PostalCode + NewLine() +\nShippingAddress_Show.Record.Address.City + \", \" + ShippingAddress_Show.Record.Address.State + NewLine() +\nShippingAddress_Show.Record.Country.Name,\"-\")","type":"Text","functions":["If","NewLine","Trim"]}
{"text":"\" \"+Round(DiffDays(OperationEntryDate,CurrDateTime())/7,0)","type":"Text","functions":["Round","DiffDays","CurrDateTime"]}
{"text":"If(PendingAddressVerificationTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(PendingAddressVerificationTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsRetainedTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsRetainedTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsNotNotifiedTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsNotNotifiedTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"AddressShow.Record.Address.AddressLine1 + NewLine() +\nIf(Trim(AddressShow.Record.Address.InternalNumber) = \"\",\n    AddressShow.Record.Address.ExternalNumber,\n    AddressShow.Record.Address.InternalNumber + \", \" + AddressShow.Record.Address.ExternalNumber) + NewLine() +\nAddressShow.Record.Address.AddressLine2 + \", \" + AddressShow.Record.Address.PostalCode + NewLine() +\nAddressShow.Record.Address.City + \", \" + AddressShow.Record.Address.State + NewLine() +\nAddressShow.Record.Country.Name","type":"Text","functions":["NewLine","If","Trim"]}
{"text":"If(OperationsPendingChargeTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsPendingChargeTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(PayedNotOperatedReturnTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(PayedNotOperatedReturnTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsConcentradas.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsConcentradas.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsMarkedToDestoyTable.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsMarkedToDestoyTable.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"DiffDays(MailingShow2.Record.Operation.CreatedOn,CurrDate())+If(DiffDays(MailingShow2.Record.Operation.CreatedOn,CurrDate())=1,\" \" + \"Day\",\" \" + \"Days\")","type":"Text","functions":["DiffDays","CurrDate","If"]}
{"text":"DiffDays(OperationShow_Package.Record.Operation.CreatedOn,CurrDate())+If(DiffDays(OperationShow_Package.Record.Operation.CreatedOn,CurrDate()) = 1,\" Day\",\" Days\")","type":"Text","functions":["DiffDays","CurrDate","If"]}
{"text":"OperationShow_Details.Record.DeliveryAddress.AddressLine1+NewLine()+\nIf(Trim(OperationShow_Details.Record.DeliveryAddress.InternalNumber) = \"\",\n    OperationShow_Details.Record.DeliveryAddress.ExternalNumber,\n    OperationShow_Details.Record.DeliveryAddress.InternalNumber + \", \" + OperationShow_Details.Record.DeliveryAddress.ExternalNumber) + NewLine() +\nOperationShow_Details.Record.DeliveryAddress.AddressLine2 + \", \" + OperationShow_Details.Record.DeliveryAddress.PostalCode + NewLine() +\nOperationShow_Details.Record.DeliveryAddress.City + \", \" + OperationShow_Details.Record.DeliveryAddress.State + NewLine() +\nOperationShow_Details.Record.DeliveryCountry.Name","type":"Text","functions":["NewLine","If","Trim"]}
{"text":"OperationShow_Details.Record.CustomerAddress.AddressLine1+NewLine()+\nIf(Trim(OperationShow_Details.Record.CustomerAddress.InternalNumber) = \"\",\n    OperationShow_Details.Record.CustomerAddress.ExternalNumber,\n    OperationShow_Details.Record.CustomerAddress.InternalNumber + \", \" + OperationShow_Details.Record.CustomerAddress.ExternalNumber) + NewLine() +\nOperationShow_Details.Record.CustomerAddress.AddressLine2 + \", \" + OperationShow_Details.Record.CustomerAddress.PostalCode + NewLine() +\nOperationShow_Details.Record.CustomerAddress.City + \", \" + OperationShow_Details.Record.CustomerAddress.State + NewLine() +\nOperationShow_Details.Record.ClientCountry.Name","type":"Text","functions":["NewLine","If","Trim"]}
{"text":"If(OperationsWaitingInvoice.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsWaitingInvoice.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsPendingWaybill.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsPendingWaybill.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(OperationsInReview.List.Current.OperationTotalDetails.Id = NullIdentifier(),\"-\",Round(OperationsInReview.List.Current.OperationTotalDetails.Weight,2) + \" \" + \"Kg\")","type":"Text","functions":["If","NullIdentifier","Round"]}
{"text":"If(User_DetailsADGet.UserRequestApprovalRC.UserApprovals.StartDate <> NullDate(), FormatDateTime(User_DetailsADGet.UserRequestApprovalRC.UserApprovals.StartDate, \"dd MMMM yyyy\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(GetRequestById.List.Current.UserRequestGeneralInformation.StartDate <> NullDate(), FormatDateTime(GetRequestById.List.Current.UserRequestGeneralInformation.StartDate, \"dd MMMM yyyy\"), \"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(StagingCorrectionHistoryTable.List.Current.StagingBatchImportHistory.ProcessEnd = NullDate(), \n    DiffSeconds(StagingCorrectionHistoryTable.List.Current.StagingBatchImportHistory.ProcessStart, CurrDateTime()) + \" (running)\",\n    DiffSeconds(StagingCorrectionHistoryTable.List.Current.StagingBatchImportHistory.ProcessStart, StagingCorrectionHistoryTable.List.Current.StagingBatchImportHistory.ProcessEnd))","type":"Text","functions":["If","NullDate","DiffSeconds","CurrDateTime"]}
{"text":"If(ImportHistoryTable.List.Current.ImportHistory.EndReconcileDate = #1900-01-01 00:00:00#, \n    DiffSeconds(ImportHistoryTable.List.Current.ImportHistory.StartReconcileDate, CurrDateTime()) + \" (running)\", \n    DiffSeconds(ImportHistoryTable.List.Current.ImportHistory.StartReconcileDate, ImportHistoryTable.List.Current.ImportHistory.EndReconcileDate))","type":"Text","functions":["If","DiffSeconds","CurrDateTime"]}
{"text":"If(ImportHistoryTable.List.Current.ImportHistory.EndImportDate = #1900-01-01 00:00:00#, \n    DiffSeconds(ImportHistoryTable.List.Current.ImportHistory.StartImportDate, CurrDateTime()) + \" (running)\", \n    DiffSeconds(ImportHistoryTable.List.Current.ImportHistory.StartImportDate, ImportHistoryTable.List.Current.ImportHistory.EndImportDate))","type":"Text","functions":["If","DiffSeconds","CurrDateTime"]}
{"text":"\"<script>\n\n    $(document).ready(function() {\n    \n        var date = new Date();\n        var d = date.getDate();\n        var m = date.getMonth();\n        var y = date.getFullYear();\n        var timelineInterval ; /* for timeline */\n        var DateFormatString = 'yyyy-MM-dd HH:mm' ;\n\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n    \n            theme: false,\n            ignoreTimezone: false,\n            header: {\n                left: '\"+ headerLeft +\"',\n                center: '\"+ headerCenter +\"',\n                right: '\"+ headerRight +\"'\n            },\n            buttonText:\"+ buttonText +\",\n            defaultView:'\"+ defaultView +\"',\n            weekNumbers:\"+ If(weekNumbers,\"true\",\"false\") +\", \n\n            date:\"+ Day(startDate) +\",\n            month:\"+ (Month(startDate)-1) +\",\n            year:\"+ Year(startDate) +\",\n            \n            axisFormat: 'H:mm',\n\n            timeFormat: 'H:mm{-H:mm }',\n\n            titleFormat:{\n                        month: 'MMMM yyyy',                     // September 2009\n                        week: \"\"MMM d['&#8218;' yyyy]{ '&#8211;'[ MMM] d'&#8218;' yyyy}\"\",// Sep 7 - 13, 2009\n                        day: 'dddd, MMM d yyyy'                 // Tuesday, 8 Sep, 2009\n                        },\n            columnFormat:{\n                        month: 'ddd',    // Mon\n                        week: 'ddd M/d', // Mon 14-7\n                        day: 'dddd M/d'  // Monday 14-7\n                        },\n\n            allDaySlot:\"+ If(allDaySlots,\"true\",\"false\") +\", \n            allDayText:'\"+ allDayText +\"',\n            slotMinutes:\"+ slotMinutes +\",\n            snapMinutes:\"+ snapMinutes +\",\n            firstHour:\"+ firstHour +\",\n            minTime:\"+ minTime +\",\n            maxTime:\"+ maxTime +\",\n            slotEventOverlap:\"+ If(slotEventOverlap,\"true\",\"false\") +\",\n\n            monthNames:[\"+ monthNames +\"],\n            monthNamesShort:[\"+ monthNamesShort +\"],\n\n            dayNames:[\"+ dayNames +\"],\n            dayNamesShort:[\"+ dayNamesShort +\"],\n\n            allDayDefault:\"+ If(allDayDefault,\"true\",\"false\") +\", \n\n            editable: false,\n            events: \"+ Events + \",\n\n            selectable: false,\n            selectHelper: false,\n            loading: function(bool) {\n              if (bool) \n                $('\"+loadingID+\"').show();\n              else \n                $('\"+loadingID+\"').hide();\n            },\n    \n\n        // EventRender that will be used to show infomation on the Calendar\n        eventRender: function (event, element) {\n        element.attr('href', 'javascript:void(0);'); //disable the event href\n        element.click(function() {\n        \n        //Information about the Event thet will show on the popup\n           if(event.description!='') {\n                 $('#eventDescription').html('<div class=\"\"bold ThemeGrid_Width3\"\">Description: </div>'); \n                 $('#eventDescription').append('<div class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.description.replace(/\\r\\n/g,'<br>')); \n                 $('#eventDescription').append('</div>');\n            }\n            else { $('#eventDescription').html('');\n            }\n\n           if(event.location!='') {\n                 $('#eventLocation').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Location: </div>');\n                 $('#eventLocation').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.location);\n                 $('#eventLocation').append('</div>');\n            }\n            else { $('#eventLocation').html('');\n            }\n\n            if(event.city!='') {\n                 $('#eventCity').html('<div  class=\"\"bold ThemeGrid_Width3\"\">City: </div>');\n                 $('#eventCity').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.city);\n                 $('#eventCity').append('</div>');\n            }\n            else { $('#eventCity').html('');\n            }\n\n            if(event.state!='') {\n                 $('#eventState').html('<div  class=\"\"bold ThemeGrid_Width3\"\">State: </div>');\n                 $('#eventState').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.state);\n                 $('#eventState').append('</div>');\n            }\n            else { $('#eventState').html('');\n            }\n\n           if(event.customerType!='') {\n                 $('#eventCustomerType').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Customer Type: </div>');\n                 $('#eventCustomerType').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.customerType);\n                 $('#eventCustomerType').append('</div>');\n            }\n            else { $('#eventCustomerType').html('');\n            }\n\n            if(event.exhibit!='') {\n                 $('#eventExhibit').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Exhibit: </div>');\n                 $('#eventExhibit').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.exhibit);\n                 $('#eventExhibit').append('</div>');\n            }\n            else { $('#eventExhibit').html('');\n            }\n\n            if(event.exhibithours!='') {\n                 $('#eventExhibitHours').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Exhibit Hours: </div>');\n                 $('#eventExhibitHours').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.exhibithours.replace(/\\r\\n/g,'<br>'));\n                 $('#eventExhibitHours').append('</div>');\n            }\n            else { $('#eventExhibitHours').html('');\n            }\n\n            if(event.promotionalsymposium!='') {\n                 $('#eventPromotionalSymposium').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Promotional Symposium: </div>');\n                 $('#eventPromotionalSymposium').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.promotionalsymposium);\n                 $('#eventPromotionalSymposium').append('</div>');\n            }\n            else { $('#eventPromotionalSymposium').html('');\n            }\n\n            if(event.promotionalsymposiuminfo!='') {\n                 $('#eventPromotionalSymposiumInfo').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Promotional Symposium Info: </div>');\n                 $('#eventPromotionalSymposiumInfo').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.promotionalsymposiuminfo.replace(/\\r\\n/g,'<br>'));\n                 $('#eventPromotionalSymposiumInfo').append('</div>');\n            }\n            else { $('#eventPromotionalSymposiumInfo').html('');\n            }\n            \n            $('#eventIsExhibitorBadgeNeeded').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Is this an Exhibit Floor pass? </div>');\n            $('#eventIsExhibitorBadgeNeeded').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.isexhibitorbadgeneeded);\n            $('#eventIsExhibitorBadgeNeeded').append('</div>');\n\n            $('#eventIsFullRegistrationBadgeNeed').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Is A Full Registration Badge Need? </div>');\n            $('#eventIsFullRegistrationBadgeNeed').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.isfullregistrationbadgeneed);\n            $('#eventIsFullRegistrationBadgeNeed').append('</div>');\n\n            $('#eventConferenceCoordinator').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Conference Coordinator: </div>');\n            $('#eventConferenceCoordinator').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+event.conferencecoordinator);\n            $('#eventConferenceCoordinator').append('</div>');\n           \n            if(event.startDate!='01/01/1900 00:00:00') {\n                 $('#eventStartDate').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Start Date: </div>');\n                 $('#eventStartDate').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.startDate);\n                 $('#eventStartDate').append('</div>');\n            }\n            else { $('#eventStartDate').html(''); \n            }\n\n           if(event.endDate!='01/01/1900 00:00:00') {\n                 $('#eventEndDate').html('<div  class=\"\"bold ThemeGrid_Width3\"\">End Date: </div>');\n                 $('#eventEndDate').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.endDate);\n                 $('#eventEndDate').append('</div>');\n            }\n            else { $('#eventEndDate').html('');\n            }\n            \n            if(event.registrationdeadline!='01/01/1900 00:00:00') {\n                 $('#eventRegistrationDeadline').html('<div  class=\"\"bold ThemeGrid_Width3\"\">Registration Deadline : </div>');\n                 $('#eventRegistrationDeadline').append('<div  class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.registrationdeadline);\n                 $('#eventRegistrationDeadline').append('</div>');\n            }\n            else { $('#eventRegistrationDeadline').html(''); \n            }\n\n            if(event.conferencenotes!='') {\n                 $('#eventConferenceNotes').html('<div class=\"\"bold ThemeGrid_Width3\"\">Notes: </div>'); \n                 $('#eventConferenceNotes').append('<div class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.conferencenotes.replace(/\\r\\n/g,'<br>')); \n                 $('#eventConferenceNotes').append('</div>');\n            }\n            else { $('#eventConferenceNotes').html('');\n            }\n\n            if(event.conferencelink!='') {\n                 $('#eventConferenceLink').html('<div class=\"\"bold ThemeGrid_Width3\"\">Conference Link: </div>'); \n                 $('#eventConferenceLink').append('<div class=\"\"ThemeGrid_Width9 ThemeGrid_MarginGutter\"\">'+ event.conferencelink); \n                 $('#eventConferenceLink').append('</div>');\n            }\n            else { $('#eventConferenceLink').html('');\n            }\n\n\n        //Buttons that will show on the popup\n            var d1 = new Date (event.CompareStart);\n            var d2 = new Date (event.Now);\n\n            if(event.IsMKTSpecialist!='False')\n            {\n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                              'Edit Conference': function() {window.location = event.urlConferenceEdit;},\n                                              'Show Attendees': function() {window.location = event.urlConferenceAttendees;},\n                                              'Close': function() { $(this).dialog('close'); }\n                                                  }\n                                       });\n            }\n            else if(d1 < d2 )\n            {\n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                                 'Show Attendees': function() {window.location = event.urlShowConferenceAttendees;},\n                                                 'Close': function() { $(this).dialog('close'); }\n                                                  }\n                                       });\n            }\n\n            else if(event.url=='#' && event.conferenceStatus!='SignUp' && event.conferenceStatus!='Reject' && event.conferenceStatus!='SubmitForApproval' && event.conferenceStatus!='Waitlist')\n            {\n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                              'Request Approval': function() {window.location = event.urlRequestApproval;},\n                                              'Show Attendees': function() {window.location = event.urlShowConferenceAttendees;},\n                                              'Close': function() { $(this).dialog('close'); }\n                                                  }\n                                       });\n            }\n            else if(event.url=='#' && (event.conferenceStatus=='SignUp' || event.conferenceStatus=='Approve'))\n            {\n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                              'Cancel Registration': function() {if(confirm(\"\"Are you sure you want to cancel this registration?\"\")){window.location = event.urlConferenceCancel;}},\n                                              'Show Attendees': function() {window.location = event.urlShowConferenceAttendees;},\n                                              'Close': function() { $(this).dialog('close'); }\n                                                  }\n                                       });\n            }\n            else if(event.conferenceStatus=='Draft' )\n            { \n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                                'Register': function() {window.location = event.url;},\n                                                'Will Not Attend': function() {if(confirm(\"\"Are you sure you don't want to attend this conference?\"\")){window.location = event.urlConferenceCancel;}},\n                                                'Show Attendees': function() {window.location = event.urlShowConferenceAttendees;},\n                                                'Close': function() { $(this).dialog('close'); }\n                                                  }\n                                       });\n\n            }\n            else\n            {\n                $('#eventContent').dialog({ modal: true, resizable: true, title: event.title, \n                                        buttons: {\n                                                 'Show Attendees': function() {window.location = event.urlShowConferenceAttendees;},\n                                                 'Close': function() { $(this).dialog('close'); }\n                                                 }\n                                       });\n            }\n\n                 });\n            }\n      });\n});\n\n</script>\n\"","type":"Text","functions":["If","Day","Month","Year"]}
{"text":"\" (\" + If(GetCDAByMasterId.List.Current.CDASearchSimple.DepartmentName = \"\", \"E\", GetCDAByMasterId.List.Current.CDASearchSimple.DepartmentName + \", e\") + If(GetCDAByMasterId.List.Current.CDASearchSimple.SignedDate = NullDate(), \"\", \"ffective \" + GetCDAByMasterId.List.Current.CDASearchSimple.SignedDate) +\nIf(GetCDAByMasterId.List.Current.CDASearchSimple.ExpiryDate = NullDate(), \"\", \", \" + \n    If(GetCDAByMasterId.List.Current.CDASearchSimple.ExpiryDate < CurrDate(),\"expired\",\"expires\") + \" on \" + GetCDAByMasterId.List.Current.CDASearchSimple.ExpiryDate) + \")\"","type":"Text","functions":["If","NullDate","CurrDate"]}
{"text":"If(CDALine.CDASearchSimple.DepartmentName = \"\", \"E\", CDALine.CDASearchSimple.DepartmentName + \", e\") + If(CDALine.CDASearchSimple.SignedDate = NullDate(), \"\", \"ffective \" + CDALine.CDASearchSimple.SignedDate) +\nIf(CDALine.CDASearchSimple.ExpiryDate = NullDate(), \"\", \", \" + \n    If(CDALine.CDASearchSimple.ExpiryDate < CurrDate(),\"expired\",\"expires\") + \" on \" + CDALine.CDASearchSimple.ExpiryDate)","type":"Text","functions":["If","NullDate","CurrDate"]}
{"text":"Substr(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,Index(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,\"{\",0,False,True)+1,Length(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId)-Index(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,\"{\",0,False,True)-2)\n","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(GetRequestById.List.Current.Request.DateRequired < CurrDate() and GetRequestById.List.Current.Request.RequestStatusId <> Entities.RequestStatus.Completed, \"(\" + DiffDays(GetRequestById.List.Current.Request.DateRequired,CurrDate()) + \" days ago)\",\"\")","type":"Text","functions":["If","CurrDate","DiffDays"]}
{"text":"If(Length(ActionTable.List.Current.Action.Activity) < 25, ActionTable.List.Current.Action.Activity, Substr(ActionTable.List.Current.Action.Activity, 0, 25) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GetActionById.List.Current.Action.Activity) < 30, GetActionById.List.Current.Action.Activity, Substr(GetActionById.List.Current.Action.Activity, 0, 30) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(ChangesTable.List.Current.DigestLogQuery.ActionActivity,0,25) + \nIf( Length(ChangesTable.List.Current.DigestLogQuery.ActionActivity)>25, \"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ActionsTable.List.Current.DigestActionsQuery.ActionName,0,25) + \nIf( Length(ActionsTable.List.Current.DigestActionsQuery.ActionName)>25, \"...\",\"\") ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ActionTable.List.Current.SearchActionResult.Notes, 0, 25) + If(Length(ActionTable.List.Current.SearchActionResult.Notes) < 25, \"\", \"...\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ActionTable.List.Current.SearchActionResult.Activity, 0, 25) + If(Length(ActionTable.List.Current.SearchActionResult.Activity) < 25, \"\", \"...\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"Action '\" + Substr(DocumentTable.List.Current.SearchDocumentResult.Activity, 0, 25) + If(Length(DocumentTable.List.Current.SearchDocumentResult.Activity) < 25, \"\", \"...\") + \"'\"","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ActionTable.List.Current.Action.Activity, 0, 25) + If(Length(ActionTable.List.Current.Action.Activity) < 25, \"\", \"...\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"\nSubstr(GetActionById.List.Current.Action.Activity, 0, 25) + If(Length(GetActionById.List.Current.Action.Activity) < 25, \"\", \"...\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(GetLogById.List.Current.Log.Description) < 55, GetLogById.List.Current.Log.Description, Substr(GetLogById.List.Current.Log.Description, 0, 55) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(StrategyPostTable.List.Current.StrategyPost.ExecutiveSummary) > 200, Substr(StrategyPostTable.List.Current.StrategyPost.ExecutiveSummary, 0, 200) + \" ...\", StrategyPostTable.List.Current.StrategyPost.ExecutiveSummary)","type":"Text","functions":["If","Length","Substr"]}
{"text":"GetPublicationContentById.List.Current.PublicationContent.JournalName + \". \" + \nIf(GetPublicationContentById.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(GetPublicationContentById.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(GetPublicationContentById.List.Current.PublicationContent.City= \"\", \"\", \" - \" + GetPublicationContentById.List.Current.PublicationContent.City + \"; \" ) + \nIf(GetPublicationContentById.List.Current.PublicationContent.State = \"\",\"\", GetPublicationContentById.List.Current.PublicationContent.State + \"; \") + If(GetPublicationContentById.List.Current.PublicationContent.Country= \"\",\"\", GetPublicationContentById.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"PublicationTable.List.Current.PublicationContent.JournalName + \". \" + \nIf(PublicationTable.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(PublicationTable.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(PublicationTable.List.Current.PublicationContent.City= \"\", \"\", \" - \" + PublicationTable.List.Current.PublicationContent.City + \"; \" ) + \nIf(PublicationTable.List.Current.PublicationContent.State = \"\",\"\", PublicationTable.List.Current.PublicationContent.State + \"; \") + If(PublicationTable.List.Current.PublicationContent.Country= \"\",\"\", PublicationTable.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(Length(ContentsLR.List.Current.Category.Name)>20,Substr(ContentsLR.List.Current.Category.Name,0,17) + (\n\"...\"),ContentsLR.List.Current.Category.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"PublicationLR.List.Current.PublicationContent.JournalName + \". \" + \nIf(PublicationLR.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(PublicationLR.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(PublicationLR.List.Current.PublicationContent.City= \"\", \"\", \" - \" + PublicationLR.List.Current.PublicationContent.City + \"; \" ) + \nIf(PublicationLR.List.Current.PublicationContent.State = \"\",\"\", PublicationLR.List.Current.PublicationContent.State + \"; \") + If(PublicationLR.List.Current.PublicationContent.Country= \"\",\"\", PublicationLR.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"LatestPublicationsLR2.List.Current.PublicationContent.JournalName + \". \" + \nIf(LatestPublicationsLR2.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(LatestPublicationsLR2.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(LatestPublicationsLR2.List.Current.PublicationContent.City= \"\", \"\", \" - \" + LatestPublicationsLR2.List.Current.PublicationContent.City + \"; \" ) + \nIf(LatestPublicationsLR2.List.Current.PublicationContent.State = \"\",\"\", LatestPublicationsLR2.List.Current.PublicationContent.State + \"; \") + If(LatestPublicationsLR2.List.Current.PublicationContent.Country= \"\",\"\", LatestPublicationsLR2.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"FeaturedPublicationsLR2.List.Current.PublicationContent.JournalName + \". \" + \nIf(GetPublicationContentById.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(FeaturedPublicationsLR2.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(FeaturedPublicationsLR2.List.Current.PublicationContent.City= \"\", \"\", \" - \" + FeaturedPublicationsLR2.List.Current.PublicationContent.City + \"; \" ) + \nIf(FeaturedPublicationsLR2.List.Current.PublicationContent.State = \"\",\"\", FeaturedPublicationsLR2.List.Current.PublicationContent.State + \"; \") + If(FeaturedPublicationsLR2.List.Current.PublicationContent.Country= \"\",\"\", FeaturedPublicationsLR2.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"PublicationContentTable.List.Current.PublicationContent.JournalName + \". \" + \nIf(PublicationContentTable.List.Current.PublicationContent.CitationDate = NullDate(), \"\", FormatDateTime(PublicationContentTable.List.Current.PublicationContent.CitationDate, \"MMMM yyyy\"))\n+ If(PublicationContentTable.List.Current.PublicationContent.City= \"\", \"\", \" - \" + PublicationContentTable.List.Current.PublicationContent.City + \"; \" ) + \nIf(PublicationContentTable.List.Current.PublicationContent.State = \"\",\"\", PublicationContentTable.List.Current.PublicationContent.State + \"; \") + If(PublicationContentTable.List.Current.PublicationContent.Country= \"\",\"\", PublicationContentTable.List.Current.PublicationContent.Country)\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"FormatDecimal(Round(TextToDecimal(CurrWeekSalesTR.List.Current.DrillDown_CurrWeekSales.TEB),2),2,\".\",\",\")","type":"Text","functions":["FormatDecimal","Round","TextToDecimal"]}
{"text":"FormatDecimal(Round(TextToDecimal(CurrWeekSalesTR.List.Current.DrillDown_CurrWeekSales.TEB),2),2,\".\",\",\")\n","type":"Text","functions":["FormatDecimal","Round","TextToDecimal"]}
{"text":"Substr(ListRecords1.List.Current.HotReads_Alert.Post, 0, 30) + If(Length(ListRecords1.List.Current.HotReads_Alert.Post) > 30, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(DAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.WORK_DESCRIPTION + \" \" +\nDAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.FUNCTION_DESCRIPTION) > 300, \nSubstr(DAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.WORK_DESCRIPTION + \" \" +\nDAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.FUNCTION_DESCRIPTION,0,300) + \" ...\",\nDAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.WORK_DESCRIPTION + \" \" +\nDAL_Request_Get.RequestFunction.VacanciesFunction.Vacancy.OS_VACANCIES.FUNCTION_DESCRIPTION)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(OsCandidateMainEdit.Record.OS_CANDIDATES.SPOUSE_BIRTH_DATE=NullDate(),CurrDate(),OsCandidateMainEdit.Record.OS_CANDIDATES.SPOUSE_BIRTH_DATE)","type":"Date","functions":["If","NullDate","CurrDate"]}
{"text":"If(OsCandidateMainEdit.Record.OS_CANDIDATES.BIRTH_DATE=NullDate(),CurrDate(),OsCandidateMainEdit.Record.OS_CANDIDATES.BIRTH_DATE)","type":"Date","functions":["If","NullDate","CurrDate"]}
{"text":"If(OsCandidateMainEdit.Record.OS_CANDIDATES.REQUEST_UNSUBSCRIBE_DATE=NullDate(),CurrDate(),OsCandidateMainEdit.Record.OS_CANDIDATES.REQUEST_UNSUBSCRIBE_DATE)","type":"Date","functions":["If","NullDate","CurrDate"]}
{"text":"If(OsCandidateMainEdit.Record.OS_CANDIDATES.PERMIT_PERSONAL_DATE=NullDate(),CurrDate(),OsCandidateMainEdit.Record.OS_CANDIDATES.PERMIT_PERSONAL_DATE)","type":"Date","functions":["If","NullDate","CurrDate"]}
{"text":"Substr(Replace(GetErrorLog.List.Current.LogErrorDetail.Message,Chr(10),\"\"),0,90)","type":"Text","functions":["Substr","Replace","Chr"]}
{"text":"\" Send (last sent: \" + If(GetPoolById.List.Current.Pool.LastWebServiceCall = NullDate(), \"\", Substr(GetPoolById.List.Current.Pool.LastWebServiceCall,0,16)) + \")\"","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.Account.Industry) > 100, Substr(TableRecords1.List.Current.Account.Industry,0,100) + \"...\", TableRecords1.List.Current.Account.Industry)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(InspectionPropertyTable.List.Current.Inspection.LastModifiedOn = NullDate(), \"\", DateTimeToDate(InspectionPropertyTable.List.Current.Inspection.LastModifiedOn))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(\"Ward \" + RoomREC.Room.WardName)<19, \n    \"Ward \" + RoomREC.Room.WardName, Substr(\"Ward \" + RoomREC.Room.WardName,0,18)+\"(...)\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToDateValidate(PersonTR.List.Current.PersonInfo.BirthDate), \n    TextToDate(PersonTR.List.Current.PersonInfo.BirthDate), \n    NullDate()\n)","type":"Date","functions":["If","TextToDateValidate","TextToDate","NullDate"]}
{"text":"Trim(PersonTR.List.Current.PersonInfo.EFirstName) + \" \" + If(Length(PersonTR.List.Current.PersonInfo.ESecondName) > 0, Trim(PersonTR.List.Current.PersonInfo.ESecondName) + \" \", \"\") + If(Length(PersonTR.List.Current.PersonInfo.EThirdName) > 0, Trim(PersonTR.List.Current.PersonInfo.EThirdName) + \" \", \"\") + Trim(PersonTR.List.Current.PersonInfo.EFourthName)","type":"Text","functions":["Trim","If","Length"]}
{"text":"If(PatientTR.List.Current.Patients.IsConfidential,\n    PatientTR.List.Current.Patients.ConfidentialName,\n    Trim(PatientTR.List.Current.Patients.FirstName) + \" \" + If(Length(PatientTR.List.Current.Patients.MiddleNames) > 0, Trim(PatientTR.List.Current.Patients.MiddleNames) + \" \", \"\") + Trim(PatientTR.List.Current.Patients.LastName)\n)","type":"Text","functions":["If","Trim","Length"]}
{"text":"If(Length(InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.FirstName+\" \"+\n\" \"+InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.LastName)<18, InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.FirstName+\" \"+\n\" \"+InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.LastName,Substr(InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.FirstName+\" \"+\n\" \"+InvoiceLR.List.Current.InvoicesToExport.Patient.Patient.LastName,0,15)+\"(...)\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(rSignature.stSignature.Date = NullDate(), \" \", If(Day(rSignature.stSignature.Date) < 10, \"0\", \"\") + Day(rSignature.stSignature.Date))","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rSignature.stSignature.Date = NullDate(), \"\", If(Month(rSignature.stSignature.Date) < 10, \"0\", \"\") + Month(rSignature.stSignature.Date))","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rSignature.stSignature.Date = NullDate(), \" \", Year(rSignature.stSignature.Date))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If( rlReport.Current.stLAB1.SpecimenDateTime <> NullDate(),\n    Substr(rlReport.Current.stLAB1.SpecimenDateTime,0,Length(rlReport.Current.stLAB1.SpecimenDateTime)-3) ,\n    \"\")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[14].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[14].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[14].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[13].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[13].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[13].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[12].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[12].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[12].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[11].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[11].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[11].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[10].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[10].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[10].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[9].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[9].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[9].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[8].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[8].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[8].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[7].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[7].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[7].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[6].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[6].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[6].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[5].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[5].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[5].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[4].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[4].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[4].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[3].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[3].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[3].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[2].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[2].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[2].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[1].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[1].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[1].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[0].ReconciliationMedicine.LastDoseDateTime <> NullDate(),\nSubstr(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[0].ReconciliationMedicine.LastDoseDateTime,0,Length(rlMRL1.Current.stMRL1.ReconciliationMedicineRL[0].ReconciliationMedicine.LastDoseDateTime)-3) ,\" \")\n\n ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rHeaderLeft.stHeaderLeft.DateAdmin = NullDate(), \" \", If(Day(rHeaderLeft.stHeaderLeft.DateAdmin) < 10, \"0\", \"\") + Day(rHeaderLeft.stHeaderLeft.DateAdmin))","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rHeaderLeft.stHeaderLeft.DateAdmin = NullDate(), \" \", If(Month(rHeaderLeft.stHeaderLeft.DateAdmin) < 10, \"0\", \"\") + Month(rHeaderLeft.stHeaderLeft.DateAdmin))","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rHeaderLeft.stHeaderLeft.DateAdmin = NullDate(), \" \", Substr(Year(rHeaderLeft.stHeaderLeft.DateAdmin), 2, 2))","type":"Text","functions":["If","NullDate","Substr","Year"]}
{"text":"If( NurseNotes.Length > 9,\n    Substr(NurseNotes[9].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 8,\n    Substr(NurseNotes[8].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 7,\n    Substr(NurseNotes[7].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 6,\n    Substr(NurseNotes[6].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 5,\n    Substr(NurseNotes[5].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 4,\n    Substr(NurseNotes[4].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 3,\n    Substr(NurseNotes[3].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 2,\n    Substr(NurseNotes[2].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 1,\n    Substr(NurseNotes[1].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 0,\n    Substr(NurseNotes[0].stNurseNotes.Time,0,Length(NurseNotes[0].stNurseNotes.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(rlSickLeave.Current.stSickLeave.DischargeDate <> NullDate(),If(Day(rlSickLeave.Current.stSickLeave.DischargeDate)<10,\"0\",\"\")+Day(rlSickLeave.Current.stSickLeave.DischargeDate),\" \")","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rlSickLeave.Current.stSickLeave.DischargeDate <> NullDate(),If(Month(rlSickLeave.Current.stSickLeave.DischargeDate)<10,\"0\",\"\")+Month(rlSickLeave.Current.stSickLeave.DischargeDate),\" \")","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rlSickLeave.Current.stSickLeave.DischargeDate <> NullDate(),Year(rlSickLeave.Current.stSickLeave.DischargeDate),\" \")\n\n","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If(rlSickLeave.Current.stSickLeave.AdmissionDate <> NullDate(),If(Day(rlSickLeave.Current.stSickLeave.AdmissionDate)<10,\"0\",\"\")+Day(rlSickLeave.Current.stSickLeave.AdmissionDate),\" \")","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rlSickLeave.Current.stSickLeave.AdmissionDate <> NullDate(),\n    If(Month(rlSickLeave.Current.stSickLeave.AdmissionDate)<10,\"0\",\"\")+Month(rlSickLeave.Current.stSickLeave.AdmissionDate),\" \")","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rlSickLeave.Current.stSickLeave.AdmissionDate <> NullDate(),Year(rlSickLeave.Current.stSickLeave.AdmissionDate),\" \")","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If(rlReport.Current.stMR13.Date = NullDate(), \" \", If(Day(rlReport.Current.stMR13.Date) < 10, \"0\", \"\") + Day(rlReport.Current.stMR13.Date))","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rlReport.Current.stMR13.Date = NullDate(), \" \", If(Month(rlReport.Current.stMR13.Date) < 10, \"0\", \"\") + Month(rlReport.Current.stMR13.Date))","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rlReport.Current.stMR13.Date = NullDate(), \" \", Year(rlReport.Current.stMR13.Date))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If(RegularDateToAdminister.Length >= 16,If( RegularDateToAdminister[15].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[15].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 15,If( RegularDateToAdminister[14].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[14].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 14,If( RegularDateToAdminister[13].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[13].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 13,If( RegularDateToAdminister[12].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[12].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 12,If( RegularDateToAdminister[11].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[11].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 11,If( RegularDateToAdminister[10].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[10].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 10,If( RegularDateToAdminister[9].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[9].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 9,If( RegularDateToAdminister[8].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[8].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 8,If( RegularDateToAdminister[7].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[7].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 7,If( RegularDateToAdminister[6].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[6].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 6,If( RegularDateToAdminister[5].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[5].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 5,If( RegularDateToAdminister[4].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[4].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 4,If( RegularDateToAdminister[3].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[3].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 3,If( RegularDateToAdminister[2].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[2].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 2,If( RegularDateToAdminister[1].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[1].RegularDateToAdminister.Date),\n    \"\"),\"\")\n\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(RegularDateToAdminister.Length >= 1,If( RegularDateToAdminister[0].RegularDateToAdminister.Date <> NullDate(),\n    Day(RegularDateToAdminister[0].RegularDateToAdminister.Date),\n    \"\"),\"\")\n","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If( NurseNotes.Length > 24,\n    Substr(NurseNotes[24].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 23,\n    Substr(NurseNotes[23].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 22,\n    Substr(NurseNotes[22].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 21,\n    Substr(NurseNotes[21].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 20,\n    Substr(NurseNotes[20].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 19,\n    Substr(NurseNotes[19].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 18,\n    Substr(NurseNotes[18].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 17,\n    Substr(NurseNotes[17].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 16,\n    Substr(NurseNotes[16].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 15,\n    Substr(NurseNotes[15].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 14,\n    Substr(NurseNotes[14].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 13,\n    Substr(NurseNotes[13].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 12,\n    Substr(NurseNotes[12].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 11,\n    Substr(NurseNotes[11].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 10,\n    Substr(NurseNotes[10].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 9,\n    Substr(NurseNotes[9].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 8,\n    Substr(NurseNotes[8].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 7,\n    Substr(NurseNotes[7].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 6,\n    Substr(NurseNotes[6].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 5,\n    Substr(NurseNotes[5].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 4,\n    Substr(NurseNotes[4].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 3,\n    Substr(NurseNotes[3].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 2,\n    Substr(NurseNotes[2].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 1,\n    Substr(NurseNotes[1].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If( NurseNotes.Length > 0,\n    Substr(NurseNotes[0].stNR2A_Observations.Time,0,Length(NurseNotes[0].stNR2A_Observations.Time)-3)  ,\n    \" \")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[14].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [14].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [14].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [14].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [14].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[13].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [13].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [13].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [13].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [13].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[12].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [12].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [12].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [12].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [12].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[11].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [11].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [11].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [11].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [11].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[10].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [10].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [10].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [10].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [10].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[9].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [9].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [9].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [9].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [9].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[8].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [8].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [8].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [8].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [8].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[7].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\nIf(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [7].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\nSubstr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [7].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [7].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\"X\"),\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[6].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [6].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [6].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [6].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [6].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[5].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [5].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [5].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [5].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [5].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[4].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [4].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [4].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [4].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [4].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[3].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [3].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [3].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [3].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [3].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[2].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [2].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [2].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [2].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [2].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[1].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [1].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [1].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [1].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [1].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") ","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs[0].stPrescriptionOnceOnlyDrugs.Date <> NullDate(),\n    If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [0].stPrescriptionOnceOnlyDrugs.GivenTime <> \"\",\n    Substr(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs             [0].stPrescriptionOnceOnlyDrugs.GivenTime,0,Length                (rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs        [0].stPrescriptionOnceOnlyDrugs.GivenTime)-3),\n        If(rlReport.Current.stFormPrescriptions.stPrescriptionOnceOnlyDrugs           [0].stPrescriptionOnceOnlyDrugs.TreatmentItemStatusDC,\n        \"X\",\"\")),\n\"\") \n\n","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rlReport.Current.stFormPrescriptions.UpdatedOn <> NullDate(),\nSubstr(rlReport.Current.stFormPrescriptions.UpdatedOn,0,Length(rlReport.Current.stFormPrescriptions.UpdatedOn)-3),\"\")","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(rHeaderLeft.stHeaderLeft.DateAdmin = NullDate(), \" \", Year(rHeaderLeft.stHeaderLeft.DateAdmin))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"If(rlReport.Current.stMR3.Date = NullDate(), \" \", If(Day(rlReport.Current.stMR3.Date) < 10, \"0\", \"\") + Day(rlReport.Current.stMR3.Date))","type":"Text","functions":["If","NullDate","Day"]}
{"text":"If(rlReport.Current.stMR3.Date = NullDate(), \" \", If(Month(rlReport.Current.stMR3.Date) < 10, \"0\", \"\") + Month(rlReport.Current.stMR3.Date))","type":"Text","functions":["If","NullDate","Month"]}
{"text":"If(rlReport.Current.stMR3.Date = NullDate(), \" \", Substr(Year(rlReport.Current.stMR3.Date), 2, 2))","type":"Text","functions":["If","NullDate","Substr","Year"]}
{"text":"If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Moderate, \"Medium\"+\" \", If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Minor, \"Minor\"+\" \", If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Major, \"Major\"+\" \", \"All\"+\" \"))) + \nIf(FilterRoomId = NullIdentifier(), \"surgeries\", If(FilterRoomId = FilterRoomIdEmpty, \"surgeries without room\", \"surgeries in room\"+\" \"+ RoomBlocksRL.Current.RoomBlocks.RoomName))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(Length(Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.LastNameAR)) > 0, Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.LastNameAR) + \" \", \"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.MiddleNamesAR)) > 0, Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.MiddleNamesAR) + \" \", \"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.MiddleNames)) > 0, \" \" + Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.MiddleNames), \"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.LastName)) > 0, \" \" + Trim(AppointmentsLR.List.Current.STR_ScheduleListItem.LastName), \"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(PatientLR.List.Current.Patient.IsConfidential,\n    PatientLR.List.Current.Patient.ConfidentialName,\n    Trim(PatientLR.List.Current.Patient.FirstName) + \" \" + If(Length(PatientLR.List.Current.Patient.MiddleNames) > 0, Trim(PatientLR.List.Current.Patient.MiddleNames) + \" \", \"\") + Trim(PatientLR.List.Current.Patient.LastName)\n)","type":"Text","functions":["If","Trim","Length"]}
{"text":"If(TrimEnd(TrimStart(IdentificationId)) = \"\", \"-\", IdentificationId)","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(TrimEnd(TrimStart(MobileNumber)) = \"\", \"-\", TrimEnd(TrimStart(MobileNumber)))","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"\"Since: \"+ NewLine() + If(ListRecords1.List.Current.LASTSTATUSCHANGE.DateTime = NullDate(), \"Ever\", ListRecords1.List.Current.LASTSTATUSCHANGE.DateTime)","type":"Text","functions":["NewLine","If","NullDate"]}
{"text":"If(Length(IncomingMessageTable.List.Current.IncomingMessage.ErrorDetail) > 30,\nSubstr(\nIncomingMessageTable.List.Current.IncomingMessage.ErrorDetail,\n0,30) + \"...\", \"\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(PatientTR.List.Current.Patients.IsConfidential,\n    PatientTR.List.Current.Patients.ConfidentialName,\n    Trim(PatientTR.List.Current.Patients.FirstName) + \" \" + If(Length(PatientTR.List.Current.Patients.MiddleNames) > 0, Trim(PatientTR.List.Current.Patients.MiddleNames) + \" \", \"\") + Trim(PatientTR.List.Current.Patients.LastName))","type":"Text","functions":["If","Trim","Length"]}
{"text":"If(Length(DepartmentsLR.List.Current.DepartmentName.Name) <= 35, \n    DepartmentsLR.List.Current.DepartmentName.Name,\n    Substr(DepartmentsLR.List.Current.DepartmentName.Name,0,32) + \"...\"\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Trim(Description)) > 0, \" - \" + Trim(Description), \"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"\"<fieldset id=\"\"\" + ElementId + \"\"\" class=\"\"\" + CssClasses + \"\"\">\" + If(Length(Trim(Legend)) > 0, \"<legend>\" + Trim(Legend) + \"</legend>\" ,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(AvailabilityTR.List.Current.AvailabilityList.LocationName) > If(AvailabilityTR.List.Current.AvailabilityList.Classification <> \"\", 20, 25), Substr(AvailabilityTR.List.Current.AvailabilityList.LocationName, 0, If(AvailabilityTR.List.Current.AvailabilityList.Classification <> \"\", 17, 22)) + \"...\", AvailabilityTR.List.Current.AvailabilityList.LocationName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Classification - \" + If(Length(AvailabilityList.Current.AvailabilityList.Classification) > 10, Substr(AvailabilityTR.List.Current.AvailabilityList.Classification, 0, 7) + \"...\", AvailabilityTR.List.Current.AvailabilityList.Classification)","type":"Text","functions":["If","Length","Substr"]}
{"text":"NewDate(Year(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))), Month(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))), Day(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))))","type":"Date","functions":["NewDate","Year","AddDays","Round","Month","Day"]}
{"text":"If(GetPlannedAdmissionByPatientId.PlannedAdmissionRec.PlannedAdmission.Date <> NullDate(),\nDateTimeToDate(GetPlannedAdmissionByPatientId.PlannedAdmissionRec.PlannedAdmission.Date), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(AvailabilityTR.List.Current.ProcedureAvailability.LocationName) > If(AvailabilityTR.List.Current.ProcedureAvailability.Classification <> \"\", 20, 25), Substr(AvailabilityTR.List.Current.ProcedureAvailability.LocationName, 0, If(AvailabilityTR.List.Current.ProcedureAvailability.Classification <> \"\", 17, 22)) + \"...\", AvailabilityTR.List.Current.ProcedureAvailability.LocationName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"From \" + DoctorGroupsAgendaTR.List.Current.ResourceGroupRecurrence_Unit.DateFrom + If(DoctorGroupsAgendaTR.List.Current.ResourceGroupRecurrence_Unit.DateTo <> NullDate(), NewLine() + \"To \" + DoctorGroupsAgendaTR.List.Current.ResourceGroupRecurrence_Unit.DateTo,\"\")","type":"Text","functions":["If","NullDate","NewLine"]}
{"text":"If(EditedResourceGroupsTable.List.Current.StartDateTime <> NullDate(),\"Started: \"+ DateTimeToTime(EditedResourceGroupsTable.List.Current.StartDateTime),\"\") ","type":"Text","functions":["If","NullDate","DateTimeToTime"]}
{"text":"If(Length(ListRTemplates.List.Current.AsposeTemplateVersion.FileName) > 20, Substr(ListRTemplates.List.Current.AsposeTemplateVersion.FileName,0,18) + \"...\", ListRTemplates.List.Current.AsposeTemplateVersion.FileName)\n+ \" (\" + ListRTemplates.List.Current.Locale.Id + \")\"","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(CurrDateTime() >= TemplateVersionTable.List.Current.TemplateVersion.ActiveFrom and TemplateVersionTable.List.Current.TemplateVersion.ActiveFrom <> NullDate() and (CurrDateTime() <= TemplateVersionTable.List.Current.TemplateVersion.ActiveTo or TemplateVersionTable.List.Current.TemplateVersion.ActiveTo = NullDate()),\n    If(TemplateVersionTable.List.Current.TemplateVersion.ActiveTo <> NullDate(), TemplateVersionTable.List.Current.TemplateVersion.ActiveTo, \"-\"),\n    If(TemplateVersionTable.List.Current.TemplateVersion.ActiveTo <> TemplateVersionTable.List.Current.TemplateVersion.ActiveFrom and TemplateVersionTable.List.Current.TemplateVersion.ActiveTo <> NullDate(),\n        TemplateVersionTable.List.Current.TemplateVersion.ActiveTo,\n        \"-\")\n)","type":"Text","functions":["If","CurrDateTime","NullDate"]}
{"text":"\" \" + If(Hour(TimeLeft)>0,Hour(TimeLeft)+\"h \"+ Minute(TimeLeft), Minute(TimeLeft)) + \" \"","type":"Text","functions":["If","Hour","Minute"]}
{"text":"\" \" + If(Hour(TimeLeft)>0,Hour(TimeLeft)+\"h \"+ Minute(TimeLeft), Minute(TimeLeft)) +\" \"","type":"Text","functions":["If","Hour","Minute"]}
{"text":"ToUpper(Symptoms.List.Current.SymptomSide.Label + If(Trim(Symptoms.List.Current.SymptomSide.Label) <> \"\",\" \",\"\")) + ToUpper(Symptoms.List.Current.Symptom.Name)","type":"Text","functions":["ToUpper","If","Trim"]}
{"text":"DateTimeToTime(\n    AddSeconds(NewDateTime(0,0,0,0,0,0), DiffSeconds(MigrationRunTable.List.Current.MigrationRun.StartDateTime,\n    MigrationRunTable.List.Current.MigrationRun.EndDateTime))\n)","type":"Time","functions":["DateTimeToTime","AddSeconds","NewDateTime","DiffSeconds"]}
{"text":"DateTimeToTime(\n    AddSeconds(NewDateTime(0,0,0,0,0,0), DiffSeconds(MigrationRunTable.List.Current.MigrationRun.StartDateTime,\n    CurrDateTime()))\n)","type":"Time","functions":["DateTimeToTime","AddSeconds","NewDateTime","DiffSeconds","CurrDateTime"]}
{"text":"If(Length(VitalSignsIntraOTLR2.List.Current.STR_IntraVitalSigns.VitalSignName) > 6, Substr(VitalSignsIntraOTLR2.List.Current.STR_IntraVitalSigns.VitalSignName, 0, 6) + \".\", VitalSignsIntraOTLR2.List.Current.STR_IntraVitalSigns.VitalSignName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"ToUpper(Examinations.List.Current.Sign.Name + If(Trim(Examinations.List.Current.SignSide.Label) <> \"\",\" (\" + Examinations.List.Current.SignSide.Label + \")\", \"\") + If(Examinations.List.Current.PatientSigns.IsRecurrent, \" Recurrent\",\"\"))","type":"Text","functions":["ToUpper","If","Trim"]}
{"text":"If(Length(PrefetchPathTable.List.Current.PrefetchPath.Path) > 60, Substr(PrefetchPathTable.List.Current.PrefetchPath.Path,0,60)+\"...\",PrefetchPathTable.List.Current.PrefetchPath.Path)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetServiceOrderByOrderId.List.Current.Slot.Date = CurrDate(),\n\"Today\",\nDay(GetServiceOrderByOrderId.List.Current.Slot.Date))\n","type":"Text","functions":["If","CurrDate","Day"]}
{"text":" If(\n    DiffDays(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn,\n        If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n           GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n           GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    )=0,\n    If(\n        DiffHours(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn,\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n            )\n    )<> 0,\n        DiffHours(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn,\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    ) + \" \"+\"Hours\",\n        DiffMinutes(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn,\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n            )\n        ) + \" \"+\"Minutes\"\n    )  ,\n    DiffDays(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn,\n        If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n            GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n            GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    )+ \" \"+\"Days\"\n)\n","type":"Text","functions":["If","DiffDays","NullDate","DiffHours","DiffMinutes"]}
{"text":" If(\n    DiffDays(If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n        If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n           GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n           GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    )=0,\n    If(\n        DiffHours(If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n            )\n    )<> 0,\n        DiffHours(If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    ) + \" \"+\"Hours\",\n        DiffMinutes(If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n            If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n                GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n            )\n        ) + \" \"+\"Minutes\"\n    )  ,\n    DiffDays(If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n        If(GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn <> NullDate(),\n            GetServiceOrderByOrderId.List.Current.Hospitalization.MedicalDischargedOn,\n            GetServiceOrderByOrderId.List.Current.Hospitalization.DischargedOn\n        )\n    )+ \" \"+\"Days\"\n)\n","type":"Text","functions":["If","DiffDays","NullDate","DiffHours","DiffMinutes"]}
{"text":"If(GetServiceOrderByOrderId.List.Current.Hospitalization.StateId = Entities.HospitalizationState.Planned,\n    Day(GetServiceOrderByOrderId.List.Current.Hospitalization.PlannedAdmissionOn),\n    Day(If(GetServiceOrderByOrderId.List.Current.Hospitalization.AdmittedOn= NullDate(),\n                If(GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn = NullDate(),\n                    GetServiceOrderByOrderId.List.Current.Hospitalization.CreatedOn,\n                    GetServiceOrderByOrderId.List.Current.Hospitalization.HospitalizedOn),\n                GetServiceOrderByOrderId.List.Current.Hospitalization.AdmittedOn) \n            )\n        )\n","type":"Integer","functions":["If","Day","NullDate"]}
{"text":"If(DateTimeToDate(GetServiceOrderByOrderId.List.Current.MedicalRecordAddendum.CreatedOn) = CurrDate(),\n\"Today\",\nDay(GetServiceOrderByOrderId.List.Current.MedicalRecordAddendum.CreatedOn))\n","type":"Text","functions":["If","DateTimeToDate","CurrDate","Day"]}
{"text":"If(GetTreatmentItemById.List.Current.TreatmentItem.PrescribedMethodId = Entities.PrescriptionMethod.DrugUnit or GetTreatmentItemById.List.Current.TreatmentItem.PrescribedMethodId = NullTextIdentifier(),\n    If(GetTreatmentItemById.List.Current.TimeLineTreatmentItem.DrugUnitId <> NullIdentifier(), \n        GetTreatmentItemById.List.Current.TimeLineTreatmentItem.DrugUnitInternalName, \n        GetTreatmentItemById.List.Current.TreatmentItem.AdhocMedicine),\n    If(GetTreatmentItemById.List.Current.TreatmentItem.PrescribedMethodId = Entities.PrescriptionMethod.Drug,\n        GetTreatmentItemById.List.Current.TimeLineTreatmentItem.DrugTradeName,\n        If(GetTreatmentItemById.List.Current.TreatmentItem.PrescribedMethodId = Entities.PrescriptionMethod.ActivePrinciple,\n            GetTreatmentItemById.List.Current.TimeLineTreatmentItem.ActivePrincipleName,\n            GetTreatmentItemById.List.Current.TreatmentItem.AdhocMedicine\n        )\n    )\n)","type":"Text","functions":["If","NullTextIdentifier","NullIdentifier"]}
{"text":"If(PatientTR.List.Current.PatientInTransitDetails.IsConfidential,\n    PatientTR.List.Current.PatientInTransitDetails.ConfidentialName,\n    Trim(PatientTR.List.Current.PatientInTransitDetails.FirstName) + \" \" + If(Length(PatientTR.List.Current.PatientInTransitDetails.MiddleNames) > 0, Trim(PatientTR.List.Current.PatientInTransitDetails.MiddleNames) + \" \", \"\") + Trim(PatientTR.List.Current.PatientInTransitDetails.LastName)\n)","type":"Text","functions":["If","Trim","Length"]}
{"text":"If(HospitalizationTable.List.Current.Patient.IsConfidential,\n    HospitalizationTable.List.Current.Patient.ConfidentialName,\n    Trim(HospitalizationTable.List.Current.Patient.FirstName) + \" \" + If(Length(HospitalizationTable.List.Current.Patient.MiddleNames) > 0, Trim(HospitalizationTable.List.Current.Patient.MiddleNames) + \" \", \"\") + Trim(HospitalizationTable.List.Current.Patient.LastName)\n)","type":"Text","functions":["If","Trim","Length"]}
{"text":"If(Length(GetDiagnosis.List.Current.HospitalizationDiagnosis.Diagnosis) > 50,Substr(GetDiagnosis.List.Current.HospitalizationDiagnosis.Diagnosis,0,38) + \" (...)\",GetDiagnosis.List.Current.HospitalizationDiagnosis.Diagnosis)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.StartDate,CurrDateTime()) > 0,\n    If(DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.StartDate,CurrDateTime()) = 1,\n        \"(1 day ago)\",\n        \"(\" + DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.StartDate,CurrDateTime()) + \" days ago\"+\")\"),\n    \"\")","type":"Text","functions":["If","DiffDays","CurrDateTime"]}
{"text":"If(DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.ReturnDate,CurrDateTime()) > 0,\n    If(DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.ReturnDate,CurrDateTime()) = 1,\n        \"(1 day ago)\",\n        \"(\" + DiffDays(HospitalizationCheckIsOutOnPass.OutOnPassDetail.OutOnPassDetails.ReturnDate,CurrDateTime()) + \" days ago\"+\")\"),\n    \"\")","type":"Text","functions":["If","DiffDays","CurrDateTime"]}
{"text":"If(Length(FirstOtherDiagnosis) > 50,Substr(FirstOtherDiagnosis,0,38) + \" (...)\",FirstOtherDiagnosis)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(primaryDiagnosys) > 50,Substr(primaryDiagnosys,0,38) + \" (...)\",primaryDiagnosys)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Trim(InpatientsTR.List.Current.InpatientListItem.FirstName) + \" \" + If(Length(InpatientsTR.List.Current.InpatientListItem.MiddleNames) > 0, Trim(InpatientsTR.List.Current.InpatientListItem.MiddleNames) + \" \", \"\") + Trim(InpatientsTR.List.Current.InpatientListItem.LastName)","type":"Text","functions":["Trim","If","Length"]}
{"text":"If(GetHospitalization.List.Current.Hospitalization.HospitalizedOn = CurrDate(),\"OPD\",If(GetActiveAppointment.List.Current.Article.Id <> NullIdentifier(), GetActiveAppointment.List.Current.Article.Name + \" - Today\", \"OPD\"))","type":"Text","functions":["If","CurrDate","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Moderate, \"Medium \", If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Minor, \"Minor \", If(IntegerToIdentifier(FilterSeverityType) = Entities.OperationSeverityType.Major, \"Major \", \"All \"))) + \nIf(FilterRoomId = NullIdentifier(), \"surgeries\", If(FilterRoomId = FilterRoomIdEmpty, \"surgeries without room\", \"surgeries in room \"+ RoomBlocksRL.Current.RoomBlocks.RoomName))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"Trim(Trim(AppointmentsLR.List.Current.ScheduleListItem.FirstName) + \" \" + If(Length(AppointmentsLR.List.Current.ScheduleListItem.MiddleNames) > 0, Trim(AppointmentsLR.List.Current.ScheduleListItem.MiddleNames) + \" \", \"\") + Trim(AppointmentsLR.List.Current.ScheduleListItem.LastName))","type":"Text","functions":["Trim","If","Length"]}
{"text":"If(CurrDate() = DateTimeToDate(VitalSignsRL.Current.VitalSignMeasures.DateTime),\"\",DateTimeToDate(VitalSignsRL.Current.VitalSignMeasures.DateTime)) ","type":"Text","functions":["If","CurrDate","DateTimeToDate"]}
{"text":"\"Classification - \" + If(Length(AvailabilityList.Current.AvailabilityList.Classification) > 30, Substr(AvailabilityTR.List.Current.AvailabilityList.Classification, 0, 27) + \"...\", AvailabilityTR.List.Current.AvailabilityList.Classification)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UnidentifiedNamePart1 + UnidentifiedNamePart2) > 0, \" \", \"\") + Trim(UnidentifiedNamePart2)","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(UnidentifiedNamePart2 + UnidentifiedNamePart3) > 0, \" \", \"\") + Trim(UnidentifiedNamePart3)","type":"Text","functions":["If","Length","Trim"]}
{"text":"Replace(MessageLogTable.List.Current.MessageLog.Message, Chr(13), NewLine())","type":"Text","functions":["Replace","Chr","NewLine"]}
{"text":"If(Length(RL_OrderItems.List.Current.ItemNumber + \"-\" + RL_OrderItems.List.Current.ProductId + \" \" + RL_OrderItems.List.Current.Quantity + \"\" + RL_OrderItems.List.Current.Unit) > 35, RL_OrderItems.List.Current.ItemNumber + \"-\" + RL_OrderItems.List.Current.ProductId + NewLine() + RL_OrderItems.List.Current.Quantity + \" \" + RL_OrderItems.List.Current.Unit, RL_OrderItems.List.Current.ItemNumber + \"-\" + RL_OrderItems.List.Current.ProductId + \" \" + RL_OrderItems.List.Current.Quantity + \"\" + RL_OrderItems.List.Current.Unit)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,6), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,5), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,4), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,3), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,2), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"Substr(FormatDateTime(AddDays(StartDate,1), \"dd MMMM\"),0,6)","type":"Text","functions":["Substr","FormatDateTime","AddDays"]}
{"text":"If(DiffMinutes=0,\"Just Now\",If (DiffMinutes>=60,Trunc((DiffMinutes/60))+\"h\",\"\")+If(DiffMinutes>=60 and Mod(DiffMinutes,60)>0,\" \",\"\")+If(Mod(DiffMinutes,60)>0,Mod(DiffMinutes,60)+If(DiffMinutes>=60,\"m\",\" min\"),\"\"))","type":"Text","functions":["If","Trunc","Mod"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(ShowRecordAudit.Record.AUDIT_EVENT.Duration)/1000-60*Trunc(ShowRecordAudit.Record.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(ShowRecordAudit.Record.AUDIT_EVENT.Duration)/1000-60*Trunc(ShowRecordAudit.Record.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT_EVENT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT_EVENT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")","type":"Text","functions":["FormatText","FormatDecimal","IntegerToDecimal","Trunc"]}
{"text":"If(Length(AuditList.List.Current.AUDIT_EVENT.Description) > 25,  Substr(AuditList.List.Current.AUDIT_EVENT.Description,0,25) + \"...\",\nAuditList.List.Current.AUDIT_EVENT.Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(Substr(DocumentsTable.List.Current.DocumentInformation.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(DocumentsTable.List.Current.DocumentInformation.OutboundDate = NullDate(), \"\", DateTimeToDate(DocumentsTable.List.Current.DocumentInformation.OutboundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DocumentsTable.List.Current.DocumentInformation.InboundDate = NullDate(), \"\", DateTimeToDate(DocumentsTable.List.Current.DocumentInformation.InboundDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DocumentsTable.List.Current.DocumentInformation.ProductionDate = NullDate(), \"\", DateTimeToDate(DocumentsTable.List.Current.DocumentInformation.ProductionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(tbrPosteponed.List.Current.OutboundIntakes.CallStartDate=tbrPosteponed.List.Current.OutboundIntakes.CallEndDate,\n\nSubstr(tbrPosteponed.List.Current.OutboundIntakes.CallStartDate,0,Length(tbrPosteponed.List.Current.OutboundIntakes.CallStartDate)-3),\n\nSubstr(tbrPosteponed.List.Current.OutboundIntakes.CallStartDate,0,Length(tbrPosteponed.List.Current.OutboundIntakes.CallStartDate)-3)+ \"\"+NewLine()+\nSubstr(tbrPosteponed.List.Current.OutboundIntakes.CallEndDate,0,Length(tbrPosteponed.List.Current.OutboundIntakes.CallEndDate)-3))","type":"Text","functions":["If","Substr","Length","NewLine"]}
{"text":"If(Index(tbrPaperFileRetrievalActivities.List.Current.ActivityFind_PaperFileRetrievalActivities.FileNumber,\"[\")=-1,\ntbrPaperFileRetrievalActivities.List.Current.ActivityFind_PaperFileRetrievalActivities.FileNumber,\nSubstr(tbrPaperFileRetrievalActivities.List.Current.ActivityFind_PaperFileRetrievalActivities.FileNumber,0,Index(tbrPaperFileRetrievalActivities.List.Current.ActivityFind_PaperFileRetrievalActivities.FileNumber,\"[\")))\n\n","type":"Text","functions":["If","Index","Substr"]}
{"text":"If(tbrDocumentActivities.List.Current.ActivityFind_EmailActivities.StartDate = NullDate(),\n    \"-\",\n    DateTimeToDate(tbrDocumentActivities.List.Current.ActivityFind_EmailActivities.StartDate)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(tbrDocuments.List.Current.DOCUMENT.Remarks)<=29,tbrDocuments.List.Current.DOCUMENT.Remarks,Substr(tbrDocuments.List.Current.DOCUMENT.Remarks,0,26)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(tbrDocuments.List.Current.DocIo_DocContent.Name)<=Length(tbrDocuments.List.Current.DOCUMENT.Number)+7,tbrDocuments.List.Current.DocIo_DocContent.Name,\nSubstr(tbrDocuments.List.Current.DocIo_DocContent.Name,0,Length(tbrDocuments.List.Current.DOCUMENT.Number)+4)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DocumentTable.List.Current.DocIo_DocContent.Name)<=Length(DocumentTable.List.Current.DOCUMENT.Number)+7,DocumentTable.List.Current.DocIo_DocContent.Name,\nSubstr(DocumentTable.List.Current.DocIo_DocContent.Name,0,Length(DocumentTable.List.Current.DOCUMENT.Number)+4)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (DocumentTable.List.BOF,\"Email Body (PDF)\",If(Length(DocumentTable.List.Current.DocIo_DocContent.Name)<=Length(DocumentTable.List.Current.DOCUMENT.Number)+7,DocumentTable.List.Current.DocIo_DocContent.Name,\nSubstr(DocumentTable.List.Current.DocIo_DocContent.Name,0,Length(DocumentTable.List.Current.DOCUMENT.Number)+4)+\"...\"))\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DocumentTable.List.Current.DOCUMENT.Remarks)<=29,DocumentTable.List.Current.DOCUMENT.Remarks,Substr(DocumentTable.List.Current.DOCUMENT.Remarks,0,26)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<div id='divProdView' style='display:\" + If(EditRecord1.Record.DOCUMENT.DocumentDirectionId = TextToIdentifier(\"IO\") or EditRecord1.Record.DOCUMENT.DocumentDirectionId =NullTextIdentifier(), \"inline\",\"none\") +  \"'>\"","type":"Text","functions":["If","TextToIdentifier","NullTextIdentifier"]}
{"text":"DecimalToInteger(If( TextToInteger(WeeklyUsageTable.List.Current.WeeklyUsageResult.WebHits) > 0, \nRound(TextToInteger(WeeklyUsageTable.List.Current.WeeklyUsageResult.SlowWebHits)* 100 / TextToInteger(WeeklyUsageTable.List.Current.WeeklyUsageResult.WebHits),0),0)\n)\n","type":"Integer","functions":["DecimalToInteger","If","TextToInteger","Round"]}
{"text":"DecimalToInteger(If( TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.ExtensionCalls) > 0, \nRound(TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.SlowExtensionCalls)* 100 / TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.ExtensionCalls),0),0)\n)\n","type":"Integer","functions":["DecimalToInteger","If","TextToInteger","Round"]}
{"text":"DecimalToInteger(If( TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.TimerRuns) > 0, \nRound(TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.SlowTimerRuns)* 100 / TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.TimerRuns),0),0)\n)\n","type":"Integer","functions":["DecimalToInteger","If","TextToInteger","Round"]}
{"text":"DecimalToInteger(If( TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.WebHits) > 0, \nRound(TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.SlowWebHits)* 100 / TextToInteger(DailyUsageTable.List.Current.DailyUsageResult.WebHits),0),0)\n)\n","type":"Integer","functions":["DecimalToInteger","If","TextToInteger","Round"]}
{"text":"Replace(Substr(Documents.List.Current.Folder_Document_List.DocumentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"Replace(\n\tEncodeHtml(\n\t\tIf(\n\t\t\tLength(TableTextSections.List.Current.TEXTSECTION.Content) > 100, \n\t\t\tSubstr(TableTextSections.List.Current.TEXTSECTION.Content,0,97) + \"...\", \n\t\t\tTableTextSections.List.Current.TEXTSECTION.Content\n\t\t)\n\t),\n\t\"<br/>\", \" \"\n)","type":"Text","functions":["Replace","EncodeHtml","If","Length","Substr"]}
{"text":"If(ShowDates.Record.SUBFILE_DOWNPAYMENT.DateReceived = NullDate(), \"\", DateTimeToDate(ShowDates.Record.SUBFILE_DOWNPAYMENT.DateReceived))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Replace(Substr(Documents.List.Current.ArchiveDocument_Information.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(True)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(Length(EntityUboLogTable.List.Current.ENTITY_UBO_LOG.Remarks) > 50,\n    Substr(EntityUboLogTable.List.Current.ENTITY_UBO_LOG.Remarks, 0, 47) + \"...\",\n    EntityUboLogTable.List.Current.ENTITY_UBO_LOG.Remarks\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SanctionEntityTable.List.Current.SANCTION_FILE_IMPORT_STATE.Code = Entities.SANCTION_FILE_IMPORT_STATE.Importing,\n    \"Running since: \" + SanctionEntityTable.List.Current.SANCTION_FILE.LastImportDate + \" (\" + DiffSeconds(SanctionEntityTable.List.Current.SANCTION_FILE.LastImportDate, CurrDateTime()) + \"sec)\",\n    If(Length(SanctionEntityTable.List.Current.SANCTION_FILE.Message) > 80,\n        Substr(SanctionEntityTable.List.Current.SANCTION_FILE.Message, 0, 77) + \"...\",\n        SanctionEntityTable.List.Current.SANCTION_FILE.Message\n    )\n)","type":"Text","functions":["If","DiffSeconds","CurrDateTime","Length","Substr"]}
{"text":"If(Length(MessageTable.List.Current.MESSAGE.Log) > 50,\n    Substr(MessageTable.List.Current.MESSAGE.Log, 0, 47) + \"...\",\n    MessageTable.List.Current.MESSAGE.Log\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BatchProcesShow.Record.BATCH_PROCESS.Log) > 250,\n    Substr(BatchProcesShow.Record.BATCH_PROCESS.Log, 0, 247) + \"...\",\n    BatchProcesShow.Record.BATCH_PROCESS.Log\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessageShow2.Record.MESSAGE.Log) > 250,\n    Substr(MessageShow2.Record.MESSAGE.Log, 0, 247) + \"...\",\n    MessageShow2.Record.MESSAGE.Log\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(tbrPendingMessages.List.Current.MESSAGE.SentReceivedOn = NullDate(),\n    \"\",\n    DateTimeToDate(tbrPendingMessages.List.Current.MESSAGE.SentReceivedOn)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"shrConvention.Record.DamageManagementInformation.Barema +\nIf(R_PredefinedCase.Lookup.Description = \"\",\n    \"\",\n    \" - \" +\n        If(Length(R_PredefinedCase.Lookup.Description) > 50,\n            Substr(R_PredefinedCase.Lookup.Description, 0, 47) + \"...\",\n            R_PredefinedCase.Lookup.Description\n        )\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"shrConvention.Record.DamageManagementInformation.Barema +\nIf(Aux_GetPredefinedCaseByCode.R_PredefinedCase.Lookup.Description = \"\",\n    \"\",\n    \" - \" +\n        If(Length(Aux_GetPredefinedCaseByCode.R_PredefinedCase.Lookup.Description) > 50,\n            Substr(Aux_GetPredefinedCaseByCode.R_PredefinedCase.Lookup.Description, 0, 47) + \"...\",\n            Aux_GetPredefinedCaseByCode.R_PredefinedCase.Lookup.Description\n        )\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ShowRecord1.Record.Z_PREDEFINED_CASE.Id = NullIdentifier(),\n\t\"-\",\n\tShowRecord1.Record.Z_PREDEFINED_CASE.Code + \"-\" +\n\t\tIf(Length(ShowRecord1.Record.Z_PREDEFINED_CASE.Label_1) > 125,\n\t\t\tSubstr(ShowRecord1.Record.Z_PREDEFINED_CASE.Label_1, 0, 125) + \"...\",\n\t\t\tShowRecord1.Record.Z_PREDEFINED_CASE.Label_1\n\t\t)\n)","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If(ShowRecord1.Record.SUBFILE.Id <> NullIdentifier(),\n    ShowRecord1.Record.SUBFILE.SubFileNumber + \" [\" + Substr(ShowRecord1.Record.SUBFILE.Type, 0, 1) + \"]\",\n    If(ShowRecord1.Record.FILE.Id <> NullIdentifier(),\n        ShowRecord1.Record.FILE.FileNumber + \" [\" + Substr(ShowRecord1.Record.FILE.CompanyRole, 0, 1) + \"]\",\n        ShowRecord1.Record.EVENT.EventDate\n    )\n)","type":"Text","functions":["If","NullIdentifier","Substr"]}
{"text":"If( Length(tbrDocuments.List.Current.ProcessNewCorrespondence_List.Remarks) <= 29,\n    tbrDocuments.List.Current.ProcessNewCorrespondence_List.Remarks,\n    Substr(tbrDocuments.List.Current.ProcessNewCorrespondence_List.Remarks, 0, 26) + \"...\"\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length( tbrDocuments.List.Current.DocIo_DocContent.Name ) <= Length( tbrDocuments.List.Current.ProcessNewCorrespondence_List.DocumentNumber ) + 7,\n    tbrDocuments.List.Current.DocIo_DocContent.Name,\n    Substr(\n        tbrDocuments.List.Current.DocIo_DocContent.Name,\n        0,\n        Length(tbrDocuments.List.Current.ProcessNewCorrespondence_List.DocumentNumber) + 4\n    ) + \"...\"\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(Substr(Documents.List.Current.Document_List.DocumentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(Length(Reminders.List.Current.REMINDER.Remark) > 50,Substr(Reminders.List.Current.REMINDER.Remark,0,47) + \"...\",Reminders.List.Current.REMINDER.Remark)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TableRecords1.List.Current.TELEPHONE_NOTE.RegisteredOn = NullDate(), \"\", TimeToText(DateTimeToTime(TableRecords1.List.Current.TELEPHONE_NOTE.RegisteredOn)))","type":"Text","functions":["If","NullDate","TimeToText","DateTimeToTime"]}
{"text":"If(TableRecords1.List.Current.TELEPHONE_NOTE.RegisteredOn = NullDate(), \"\", DateToText(DateTimeToDate(TableRecords1.List.Current.TELEPHONE_NOTE.RegisteredOn)))","type":"Text","functions":["If","NullDate","DateToText","DateTimeToDate"]}
{"text":"Replace(Substr(DocsTable.List.Current.EM_Document_Information.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(Length(CorrespondenceTable.List.Current.CORRESPONDENCE_LOG.ErrorDescription)>50,Substr(CorrespondenceTable.List.Current.CORRESPONDENCE_LOG.ErrorDescription,0,47)+\"...\",CorrespondenceTable.List.Current.CORRESPONDENCE_LOG.ErrorDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(tbrAccounts.List.Current.OCCURRENCE_LOGGING.Comments = \"\",\n    \"-\",\n    If(Length(tbrAccounts.List.Current.OCCURRENCE_LOGGING.Comments) > 40,\n        Substr(tbrAccounts.List.Current.OCCURRENCE_LOGGING.Comments, 0, 37) + \" (...)\",\n        tbrAccounts.List.Current.OCCURRENCE_LOGGING.Comments\n    )\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(EmailTemplateCategoryTable.List.Current.EMAIL_TEMPLATE_CATEGORY.Description) > 25,\n    Substr(EmailTemplateCategoryTable.List.Current.EMAIL_TEMPLATE_CATEGORY.Description, 0, 22) + \"...\",\n    EmailTemplateCategoryTable.List.Current.EMAIL_TEMPLATE_CATEGORY.Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( tbrFunds.List.Current.EM_FundRequest.PaidAmount <> 0 and\n    tbrFunds.List.Current.DateTime.DateTime <> NullDate(),\n        DateTimeToDate(tbrFunds.List.Current.DateTime.DateTime),\n        \"\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(lstrLOCFundRequests.List.Current.FUND_REQUEST.PaymentDate = NullDate(),\n    \"\",\n    \" (\" + DateTimeToDate(lstrLOCFundRequests.List.Current.FUND_REQUEST.PaymentDate) + \")\" \n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(lstrECSFundRequests.List.Current.FUND_REQUEST_2.PaymentDate = NullDate(),\n    \"\",\n    \" (\" + DateTimeToDate(lstrECSFundRequests.List.Current.FUND_REQUEST_2.PaymentDate) + \")\" \n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(lstrECSFundRequests.List.Current.FUND_REQUEST.PaymentDate = NullDate(),\n    \"\",\n    \" (\" + DateTimeToDate(lstrECSFundRequests.List.Current.FUND_REQUEST.PaymentDate) + \")\" \n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"trActMan2.List.Current.MY_TREE_ACTIVITIES.ActionName + \nIf(trActMan2.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate=NullDate(),\"\",\n\" [\" + DateTimeToDate(trActMan2.List.Current.MY_TREE_ACTIVITIES.ActivitySLADueDate) + \"]\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(IM2.Record.MPINTAKE_MAIN.IsEventTimeKnow,Substr(IM2.Record.MPINTAKE_MAIN.EventTime,0,Length(IM2.Record.MPINTAKE_MAIN.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(IM.Record.ARGINTAKE_MAIN.IsEventTimeKnow,Substr(IM.Record.ARGINTAKE_MAIN.EventTime,0,Length(IM.Record.ARGINTAKE_MAIN.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"WaitActivitiesTable.List.Current.BPMTreeActivities.ElementDescription +\nIf(WaitActivitiesTable.List.Current.BPMTreeActivities.DueDate = NullDate(),\n    \"\",\n    \" [\" + DateTimeToDate(WaitActivitiesTable.List.Current.BPMTreeActivities.DueDate) + \"]\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"HumanActivitiesTable.List.Current.BPMTreeActivities.ActivityName +\nIf(HumanActivitiesTable.List.Current.BPMTreeActivities.DueDate = NullDate(),\n    \"\",\n    \" [\" + DateTimeToDate(HumanActivitiesTable.List.Current.BPMTreeActivities.DueDate) + \"]\"\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Replace(Substr(FraudDocs.List.Current.FraudDocuments.ContentDescription,0,30),NewLine(),\" \") ","type":"Text","functions":["Replace","Substr","NewLine"]}
{"text":"If(Length(tr_Events.List.Current.HistoryListRec.ExtraField) > 20,\n        Substr(tr_Events.List.Current.HistoryListRec.ExtraField,0, 17)+\"...\",\n        tr_Events.List.Current.HistoryListRec.ExtraField)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Trim(edrEvent.Record.ISDEvent.AssignmentNumber) = \"\", \"Not calculated yet\", Substr(edrEvent.Record.ISDEvent.AssignmentNumber,Length(edrEvent.Record.ISDEvent.AssignmentNumber)-13,13))","type":"Text","functions":["If","Trim","Substr","Length"]}
{"text":"If(Length(TblMissionList.List.Current.INFX_MISSION.Comments) > 50, Substr(TblMissionList.List.Current.INFX_MISSION.Comments, 0, 50) + \"...\", TblMissionList.List.Current.INFX_MISSION.Comments)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Log.Log.Log_Description) > 30,\n    Substr(Log.Log.Log_Description, 0, 27) + \"...\",\n    Log.Log.Log_Description\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(FileMessages.List.Current.REASON.DESCRIPTION)>50,Substr(FileMessages.List.Current.REASON.DESCRIPTION,0,47)+\"...\",FileMessages.List.Current.REASON.DESCRIPTION)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(FileMessages.List.Current.ACTION.DESCRIPTION)>50,Substr(FileMessages.List.Current.ACTION.DESCRIPTION,0,47)+\"...\",FileMessages.List.Current.ACTION.DESCRIPTION)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(FileMessages.List.Current.ACTION2.DESCRIPTION)>50,Substr(FileMessages.List.Current.ACTION2.DESCRIPTION,0,47)+\"...\",FileMessages.List.Current.ACTION2.DESCRIPTION)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(WSResponseTable.List.Current.EntityLog.ErroMessage)>20,Substr(WSResponseTable.List.Current.EntityLog.ErroMessage,0,17) + \"...\",WSResponseTable.List.Current.EntityLog.ErroMessage)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(WSResponseTable.List.Current.Text.Value)>20,Substr(WSResponseTable.List.Current.Text.Value,0,17) + \"...\",WSResponseTable.List.Current.Text.Value)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(edrEAFCalc.Record.Z_PREDEFINED_CASE.Id = NullIdentifier(),\n\t\"-\",\n\tedrEAFCalc.Record.Z_PREDEFINED_CASE.Code + \"-\" +\n\t\tIf(Length(edrEAFCalc.Record.Z_PREDEFINED_CASE.Label_2) > 125,\n\t\t\tSubstr(edrEAFCalc.Record.Z_PREDEFINED_CASE.Label_2, 0, 125) + \"...\",\n\t\t\tedrEAFCalc.Record.Z_PREDEFINED_CASE.Label_2\n\t\t)\n)","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If(edrArgentaCalc.Record.Z_PREDEFINED_CASE.Id = NullIdentifier(),\n\t\"-\",\n\tedrArgentaCalc.Record.Z_PREDEFINED_CASE.Code + \"-\" +\n\t\tIf(Length(edrArgentaCalc.Record.Z_PREDEFINED_CASE.Label_2) > 125,\n\t\t\tSubstr(edrArgentaCalc.Record.Z_PREDEFINED_CASE.Label_2, 0, 125) + \"...\",\n\t\t\tedrArgentaCalc.Record.Z_PREDEFINED_CASE.Label_2\n\t\t)\n)","type":"Text","functions":["If","NullIdentifier","Length","Substr"]}
{"text":"If(IsLoadingScreen() and CorrespondenceId=NullIdentifier() ,\"<script type='text/javascript'>\nvar MenuDiv; \nMenuDiv = getObject('MenuDiv');  \nif(MenuDiv){MenuDiv.style.display='none';}\n</script>\",\"\")","type":"Text","functions":["If","IsLoadingScreen","NullIdentifier"]}
{"text":"If(\nPolicyTableRecord.List.Current.T1Policy.PolicyDateChange = NullDate(),\n \"n/a\",\n DateTimeToDate(PolicyTableRecord.List.Current.T1Policy.PolicyDateChange)\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TableRecords1.List.Current.ENTITY_BASE.Id=IntegerToIdentifier(TextToInteger(APPSetting_Get_IIS.Value)) and Site.IIS_EnableComparePolicies,\"|\",\"\")","type":"Text","functions":["If","IntegerToIdentifier","TextToInteger"]}
{"text":"If(ShowRecordPolicy.Record.ENTITY_BASE_2.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE_2.DisplayName + NewLine() + \n    If(InterMediaryAddress.Address.Street = \"\",\n        \"\",\n        InterMediaryAddress.Address.Street + \" \" +\n        IntermediaryDetails.PartyBasicData.Addresses.Current.Address.HouseNumber + \n        InterMediaryAddress.Address.HouseNumberAddition + NewLine() + \n        InterMediaryAddress.Address.PostalCode + \" \" +\n        InterMediaryAddress.Address.City\n    )\n)","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(ShowRecordPolicy.Record.ENTITY_BASE.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE.DisplayName + \", \" + \n    ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix + \", \" + \n    ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials + NewLine() + \n    If(PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.Street = \"\",\n        \"\",\n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.Street + \" \" +\n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.HouseNumber + \n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.HouseNumberAddition + NewLine() + \n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.PostalCode + \" \" + \n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.City\n    )\n)","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(tbrArchive.List.Current.Message.ReadDate = NullDate() or Year(tbrArchive.List.Current.Message.ReadDate) <= 1900, \"\", tbrArchive.List.Current.Message.ReadDate)","type":"Text","functions":["If","NullDate","Year"]}
{"text":"GetNNZClauseNumberById.List.Current.NNZ_ClauseNumber.ClauseNumber + \" - \" + \nIf(Length(GetNNZClauseNumberById.List.Current.NNZ_ClauseNumber.ClauseName) > 25,\n    Substr(GetNNZClauseNumberById.List.Current.NNZ_ClauseNumber.ClauseName, 0, 25) + \"...\",\n    GetNNZClauseNumberById.List.Current.NNZ_ClauseNumber.ClauseName\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(SLAStatus.SLAId <> NullIdentifier(),\n    If(SLAStatus.SLAUnitId = Entities.SLAUnit.WorkingHours,\n        FormatDecimal(SLAStatus.ElapsedHours, 1, Site.DecimalSeparator, Site.GroupSeparator) + \" working hours elapsed\",\n        FormatDecimal(SLAStatus.ElapsedDays, 1, Site.DecimalSeparator, Site.GroupSeparator) + \" working days elapsed\"\n    )\n    + \" / \" +\n    If(SLAStatus.SLAUnitId = Entities.SLAUnit.WorkingHours,\n        FormatDecimal(If(SLAStatus.RemainingHours > 0, SLAStatus.RemainingHours, 0), 1, Site.DecimalSeparator, Site.GroupSeparator) + \" working hours remaining\",\n        FormatDecimal(If(SLAStatus.RemainingDays > 0, SLAStatus.RemainingDays, 0), 1, Site.DecimalSeparator, Site.GroupSeparator) + \" working days remaining\"\n    ),\n    \" \"\n)\n","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"FormatDateTime(EmergencyList2.List.Current.SchoolClosure.Date, \"dd MMMM yyyy\") + \nIf(EmergencyList2.List.Current.SchoolClosure.ToDate = NullDate(),\"\",\" to \" + FormatDateTime(EmergencyList2.List.Current.SchoolClosure.ToDate, \"dd MMMM yyyy\"))\n\n\n","type":"Text","functions":["FormatDateTime","If","NullDate"]}
{"text":"FormatDateTime(EmergencyList.List.Current.SchoolClosure.Date, \"dd MMMM yyyy\") \n+ \nIf(EmergencyList.List.Current.SchoolClosure.ToDate = NullDate(),\"\",\" to \" + FormatDateTime(EmergencyList.List.Current.SchoolClosure.ToDate, \"dd MMMM yyyy\"))","type":"Text","functions":["FormatDateTime","If","NullDate"]}
{"text":"If(ShowRecordPolicy.Record.ENTITY_BASE_2.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE_2.DisplayName +\n\n    If(IntermediaryAddress.Relation_Address.Address <> \"\" or IntermediaryAddress.Relation_Address.HouseNumber <> \"\",\n        NewLine() + \n            If(IntermediaryAddress.Relation_Address.Address <> \"\",\n                IntermediaryAddress.Relation_Address.Address + \" \",\n                \"\"\n            ) +\n            IntermediaryAddress.Relation_Address.HouseNumber + \" \" +\n            IntermediaryAddress.Relation_Address.Suffix,\n        \"\"\n    ) +\n\n    If(IntermediaryAddress.Relation_Address.ZIP = \"\" and\n       IntermediaryAddress.Relation_Address.City = \"\",\n        \"\",\n        NewLine() + IntermediaryAddress.Relation_Address.ZIP + \" \" + \n            IntermediaryAddress.Relation_Address.City\n    )\n)","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(ShowRecordPolicy.Record.ENTITY_BASE.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE.DisplayName +\n\n    If(ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix <> \"\",\n        \", \" + ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix,\n        \"\"\n    ) +\n\n    If(ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials <> \"\",\n        \", \" + ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials,\n        \"\"\n    ) +\n\n    If(PolicyHolderAddress.Relation_Address.Address = \"\",\n        \"\",\n        NewLine() + PolicyHolderAddress.Relation_Address.Address + \" \" +\n            PolicyHolderAddress.Relation_Address.HouseNumber + \" \" +\n            PolicyHolderAddress.Relation_Address.Suffix\n    ) +\n    If( PolicyHolderAddress.Relation_Address.ZIP = \"\" and\n        PolicyHolderAddress.Relation_Address.City = \"\",\n        \"\",\n        NewLine() + PolicyHolderAddress.Relation_Address.ZIP + \" \" + \n            PolicyHolderAddress.Relation_Address.City\n    )\n)","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If( PolicyAdministration = Entities.Z_IBIS_PRODUCT_REFERENCE.SapPmMsp and\n    Risk_GetServiceResponse.out_PolicyXMLStructure.PK.OG.OG.ANAAM <> \"\",\n        Risk_GetServiceResponse.out_PolicyXMLStructure.PK.OG.OG.ANAAM + NewLine(),\n        \"\"\n) +\n\nIf(ShowRecordPolicy.Record.ENTITY_BASE.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE.DisplayName +\n\n    If(ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix <> \"\",\n        \", \" + ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix,\n        \"\"\n    ) +\n\n    If(ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials <> \"\",\n        \", \" + ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials,\n        \"\"\n    ) +\n\n    If(PolicyHolderAddress.Relation_Address.Address = \"\",\n        \"\",\n        NewLine() + PolicyHolderAddress.Relation_Address.Address + \" \" +\n            PolicyHolderAddress.Relation_Address.HouseNumber + \" \" +\n            PolicyHolderAddress.Relation_Address.Suffix\n    ) +\n    If( PolicyHolderAddress.Relation_Address.ZIP = \"\" and\n        PolicyHolderAddress.Relation_Address.City = \"\",\n        \"\",\n        NewLine() + PolicyHolderAddress.Relation_Address.ZIP + \" \" + \n            PolicyHolderAddress.Relation_Address.City\n    )\n)","type":"Text","functions":["If","NewLine","NullIdentifier"]}
{"text":"If(ShowRecordPolicy.Record.ENTITY_BASE.Id = NullIdentifier(),\n    \"-\",\n    ShowRecordPolicy.Record.ENTITY_BASE.DisplayName + \", \" + \n    ShowRecordPolicy.Record.ENTITY_PERSONAL.Infix + \", \" + \n    ShowRecordPolicy.Record.ENTITY_PERSONAL.Initials + NewLine() + \n    If(PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.Street = \"\",\n        \"\",\n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.Street + \" \" +\n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.HouseNumber + \" \" +\n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.HouseNumberAddition + NewLine() + \n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.PostalCode + \" \" + \n        PolicyHolder_PartyBasicData.PartyBasicData.Addresses.Current.Address.City\n    )\n)","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(IM2.Record.VASIntakeMain.IsEventTimeKnow,Substr(IM2.Record.VASIntakeMain.EventTime,0,Length(IM2.Record.VASIntakeMain.EventTime)-3),\"-:-\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(SubFileReferenceFormat=1,Year(CurrDate())+\"-\",\"\")","type":"Text","functions":["If","Year","CurrDate"]}
{"text":"If (TableRecords1.List.Current.DatePrinted<> NullDate(),FormatDateTime(TableRecords1.List.Current.DatePrinted, \"dd-MMMM-yyyy\"),\"Not Printed\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If (TableRecords1.List.Current.RequestClosed<> NullDate(),FormatDateTime(TableRecords1.List.Current.RequestClosed, \"dd-MMMM-yyyy\"),\"Not Closed\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(TableRecords1.List.Current.RequestRaised <> NullDate(),FormatDateTime(TableRecords1.List.Current.RequestRaised, \"dd-MMMM-yyyy\"),\"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(TableRecords1.List.Current.ExpiryDate <> NullDate(),FormatDateTime(TableRecords1.List.Current.ExpiryDate, \"dd-MMMM-yyyy\"),\"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If (TableRecords1.List.Current.DateMovedIn <> NullDate(),FormatDateTime(TableRecords1.List.Current.DateMovedIn, \"dd-MMMM-yyyy\"),\"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(NextYear, \n    If(ApplicationStatus.Y2_APP_RECEIVED=NullDate(),\"\", DateTimeToDate(ApplicationStatus.Y2_APP_RECEIVED)) , \n    If(ApplicationStatus.APP_RECEIVED=NullDate(),\"\", DateTimeToDate(ApplicationStatus.APP_RECEIVED))\n)","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(Trim(Text)) > MaxChars,\n    Substr(Trim(Text),0,MaxChars) + \"...\",\n    Trim(Text)\n)","type":"Text","functions":["If","Length","Trim","Substr"]}
{"text":"If(Length(ContactList.List.Current.PickUpCall.Comment) > 30, Substr(ContactList.List.Current.PickUpCall.Comment, 0, 24) + \"(...)\", ContactList.List.Current.PickUpCall.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"Lo sentimos la transacciÃ³n de pago no pudo ser completada Ã©xitosamente. DescripciÃ³n del error:\" + NewLine()+\nIf(PayStatus = NullTextIdentifier(),\"\",\"PaymentStatus: \" + PayStatus + NewLine()) + \nIf(PendingReason = NullTextIdentifier(),\"\",\"Pending Reason: \" + PendingReason + NewLine()) +\n\"Error Code: \" + ErrorCode + NewLine() +\n\"Error Message: \" + ErrorMessageShort + NewLine() +\nIf(ErrorMessageLong = NullTextIdentifier(),\"\",\"MÃ¡s informaciÃ³n: \" + ErrorMessageLong + NewLine()) +\nIf(ReasonCode = NullTextIdentifier(),\"\",\"Reason Code: \" + ReasonCode + NewLine()) \n\n","type":"Text","functions":["NewLine","If","NullTextIdentifier"]}
{"text":"\"<div class='progress-radial progress-\"+If(Substr(Percentage/10,Index(Percentage/10,\".\")+1,1) = \"5\",Percentage,Round(Percentage/10,0)*10)+\"'><div class='overlay'>\"+Percentage+\"%</div></div>\"","type":"Text","functions":["If","Substr","Index","Round"]}
{"text":"If(Length(ListRecords5.List.Current.Notification.Message)>=75,Concat(Substr(ListRecords5.List.Current.Notification.Message,0,75),\"...\"),ListRecords5.List.Current.Notification.Message)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"FormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame,\"hh\") + \nSubstr(TimeToText(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame),2,3) + \nFormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame,\" tt\")\n\n","type":"Text","functions":["FormatDateTime","Substr","TimeToText"]}
{"text":"FormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7)].Schedule.StartTimeFrame,\"hh\") + \nSubstr(TimeToText(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.StartTimeFrame),2,3) + \nFormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.StartTimeFrame,\" tt\")\n\n\n\n\n","type":"Text","functions":["FormatDateTime","Substr","TimeToText"]}
{"text":"If(\n    Length(Session.ErrorMessage)>0,\n    \"An Error \" + Session.ErrorMessage + \" at \" + GetExceptionURL(),\n    \"An unexpected error occurred, check SS.\"\n)","type":"Text","functions":["If","Length","GetExceptionURL"]}
{"text":"If(Length(EmailInformation.List.Current.CustomerEmailInformation.Email) < 25, \nToLower(EmailInformation.List.Current.CustomerEmailInformation.Email), \nToLower(Substr(EmailInformation.List.Current.CustomerEmailInformation.Email,0,21)) + \"...\")","type":"Text","functions":["If","Length","ToLower","Substr"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.Departed) = NewTime(0,0,0), \"\", TimeDeparted)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.PackUp) = NewTime(0,0,0), \"\", TimePackUp)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.JobStart) = NewTime(0,0,0), \"\", TimeJobStart)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.Arrived) = NewTime(0,0,0), \"\", TimeArrived)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.Confirmed) = NewTime(0,0,0), \"\", TimeConfirmed)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(TextToTime(GetCrewInfo.List.Current.Dispatched) = NewTime(0,0,0), \"\", TimeDispatched)","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(VehicleList.List.Current.ETA_EFT<>NullDate(),Hour(VehicleList.List.Current.ETA_EFT)+\":\"+Minute(VehicleList.List.Current.ETA_EFT),\"\")","type":"Text","functions":["If","NullDate","Hour","Minute"]}
{"text":"If(OrderHistory.List.Current.Order.ServiceDate = NullDate(), \"-\", DateTimeToDate(OrderHistory.List.Current.Order.ServiceDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If (EmailAddressValidate(TableOfFoundCustomers.List.Current.ContactMethod.Value), TableOfFoundCustomers.List.Current.ContactMethod.Value,\nFormatPhoneNumber(Trim(TableOfFoundCustomers.List.Current.ContactMethod.Value),3,3,4,\"(\",\") \",\"-\") )","type":"Text","functions":["If","EmailAddressValidate","FormatPhoneNumber","Trim"]}
{"text":"FormatDateTime(InvoiceNoteTable.List.Current.AreaRugWorkOrderNote.CreatedOn, \"ddd, dd MMM yyyy\") \n+ NewLine() + \n\"By: \" + If(GetInvoiceNotesByInvoiceId.List.Current.Employee.EmployeeId <> NullIdentifier() ,GetInvoiceNotesByInvoiceId.List.Current.Employee.LastName + \", \" + GetInvoiceNotesByInvoiceId.List.Current.Employee.FirstName, \"n/a\")","type":"Text","functions":["FormatDateTime","NewLine","If","NullIdentifier"]}
{"text":"If(CustomerContactListRecords.List.Current.TestCustomerStructure.PhoneNumber<>\"\", FormatPhoneNumber(Trim(CustomerContactListRecords.List.Current.TestCustomerStructure.PhoneNumber),3,3,4,\"(\",\") \",\"-\"), \"no phone available\")","type":"Text","functions":["If","FormatPhoneNumber","Trim"]}
{"text":"If(TableOfFoundCustomers2.List.Current.ExistingCustomerStructure.PhoneNumber <> \"\", FormatPhoneNumber(Trim(TableOfFoundCustomers2.List.Current.ExistingCustomerStructure.PhoneNumber),3,3,4,\"(\",\") \",\"-\"), \"No phone number\")\n+ NewLine() + \nIf (EmailAddressValidate(TableOfFoundCustomers2.List.Current.ExistingCustomerStructure.Email), TableOfFoundCustomers2.List.Current.ExistingCustomerStructure.Email,\n\"No email address\")","type":"Text","functions":["If","FormatPhoneNumber","Trim","NewLine","EmailAddressValidate"]}
{"text":"If(\nDiffDays(CurrDate(),InvoiceTable.List.Current.AreaRugWorkOrder.ExpectedOn)<=2, \"<strong><font color=red>\"+ FormatDateTime(InvoiceTable.List.Current.AreaRugWorkOrder.ExpectedOn,\"dd MMM yyyy\")+\"</font></strong>\" , \nFormatDateTime(InvoiceTable.List.Current.AreaRugWorkOrder.ExpectedOn,\"dd MMM yyyy\")\n)","type":"Text","functions":["If","DiffDays","CurrDate","FormatDateTime"]}
{"text":"\" \" + GetAlertInfo.DispatchAlertInfo.OSDispatchAlertTypeLabel +If(GetAlertInfo.DispatchAlertInfo.NextJobOrderId= NullIdentifier(),\" Last Job\",If(GetAlertInfo.DispatchAlertInfo.NextJobDispatchedTime<>NullDate(),\", Dispatched\",\"\"))","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"If(FormOrderDetails.Record.Order.BookedDate <> NullDate(),FormatDateTime(FormOrderDetails.Record.Order.BookedDate,\"MMM dd, yyyy\") + \" \" + FormatDateTime(FormOrderDetails.Record.Order.BookedDate,\"hh:mm\") + FormatDateTime(FormOrderDetails.Record.Order.BookedDate,\" tt\"),\"-\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(FormOrderDetails.Record.Order.CancelDate <> NullDate(),FormatDateTime(FormOrderDetails.Record.Order.CancelDate,\"MMM dd, yyyy\"),\"-\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(GetOrderById.List.Current.Order.BookedDate <> NullDate(),FormatDateTime(GetOrderById.List.Current.Order.BookedDate,\"MMM dd, yyyy\") + \" \" + FormatDateTime(GetOrderById.List.Current.Order.BookedDate,\"hh:mm\") + FormatDateTime(GetOrderById.List.Current.Order.BookedDate,\" tt\"),\"-\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(OrderDetails.Record.Order.ModifiedOn <> NullDate(),FormatDateTime(OrderDetails.Record.Order.ModifiedOn,\"MMM dd, yyyy\") + \" \" + FormatDateTime(OrderDetails.Record.Order.ModifiedOn,\"hh:mm\") + FormatDateTime(OrderDetails.Record.Order.ModifiedOn,\" tt\"),\"\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(OrderDetails.Record.Order.CreatedOn <> NullDate(),FormatDateTime(OrderDetails.Record.Order.CreatedOn,\"MMM dd, yyyy\") + \" \" + FormatDateTime(OrderDetails.Record.Order.CreatedOn,\"hh:mm\") + FormatDateTime(OrderDetails.Record.Order.CreatedOn,\" tt\"),\"\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(OrderDetails.Record.Order.CancelDate <> NullDate(),FormatDateTime(OrderDetails.Record.Order.CancelDate,\"MMM dd, yyyy\"),\"-\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(ListPayment.List.Current.Payment.CreditCardReferenceNumber <> \"\" and ListPayment.List.Current.Payment.CreditCardReferenceNumber <> \"0\", \"*\" + Substr(ListPayment.List.Current.Payment.CreditCardReferenceNumber, Length(ListPayment.List.Current.Payment.CreditCardReferenceNumber) - 4, 4), \"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(OrderHistory2.List.Current.Order.ServiceDate = NullDate(), \"-\", DateTimeToDate(OrderHistory2.List.Current.Order.ServiceDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Substr(StorageFileName,Index(StorageFileName,\".\",0,True)+1,Length(StorageFileName)-Index(StorageFileName,\".\",0,True)-1) \n","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(OrderTable.List.Current.Order.ServiceDate <> NullDate(),FormatDateTime(OrderTable.List.Current.Order.ServiceDate,\"MM/dd/yyyy\"),\"-\")  ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(GetRouteByRouteId.List.Current.DailyOperationReconciliation.ManagerSignatureDate <> NullDate(),\"(\" + FormatDateTime(GetRouteByRouteId.List.Current.DailyOperationReconciliation.ManagerSignatureDate,\"MM/dd/yyyy\") + \")\",\"\") ","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(DateTimeToDate(TableRecords1.List.Current.DailyCash.TimeIn) <> NullDate(),FormatDateTime(TableRecords1.List.Current.DailyCash.TimeIn,\"h:mm\"),\"\")","type":"Text","functions":["If","DateTimeToDate","NullDate","FormatDateTime"]}
{"text":"If(Length(NotificationUserTable.List.Current.Notification.Message) > 180, Concat(Substr(NotificationUserTable.List.Current.Notification.Message,0,180),\"...\"), NotificationUserTable.List.Current.Notification.Message)","type":"Text","functions":["If","Length","Concat","Substr"]}
{"text":"If(GetOrderById.List.Current.Order.ServiceDate <> NullDate(),FormatDateTime(GetOrderById.List.Current.Order.ServiceDate,\"MM/dd/yyyy\"),\"-\")\n\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(GetOrderById.List.Current.Order.ServiceDate <> NullDate(),FormatDateTime(GetOrderById.List.Current.Order.ServiceDate,\"MM/dd/yyyy\"),\"-\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"GetOrderPaymentsByOrderId.List.Current.PaymentMethod.Description + \" \" + If(GetOrderPaymentsByOrderId.List.Current.Payment.CreditCardReferenceNumber <> \"\" and GetOrderPaymentsByOrderId.List.Current.Payment.CreditCardReferenceNumber <> \"0\", \"*\" + Substr(GetOrderPaymentsByOrderId.List.Current.Payment.CreditCardReferenceNumber, Length(GetOrderPaymentsByOrderId.List.Current.Payment.CreditCardReferenceNumber) - 4, 4), \"\") + \" - CARD/VISA PURCHASING\"","type":"Text","functions":["If","Substr","Length"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            \" + If(Trim(SchedulerLicense) <> \"\", \" schedulerLicenseKey: '\" + SchedulerLicense + \"',\", \"\") + \"\n\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            dayClick: function(date, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"dayClick\"\",\n                    range:{\n                        start: date.format(),\n                        end: (date.hasTime()?date:date.add(1, 'days')).format()\n                    },\n                    allDay: !date.hasTime(),\n                    delta:undefined,\n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DayClick+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    allDay: !(start.hasTime() || end.hasTime()),\n                    delta:undefined,                \n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Select+\"\n            },\n\n            \" + If(Trim(googleCalendarApiKey) <> \"\", \"googleCalendarApiKey: '\" + googleCalendarApiKey+ \"',\", \"\") + \"\n            // Resources\n            \" + If(Trim(ResourcesJSON) <> \"\", \"resources: \" + ResourcesJSON + \",\", \"\") + \"\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'GET'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n               eventRender: function(event, element)\n            {\n           \n                if (event.cardtype == 'road') {\n                    element.find('.fc-content').addClass('CardRoad');\n                    element.find('.fc-title').html('30m');\n                } else {\n                 \n                    var endEventTime = new Date(event.end);\n                    element.find('.fc-title').html($('.OrderEventHolder').html());\n                    element.find('.EventNumber').text(event.title);\n                    element.find('.EventDesc').text(event.description);\n                    element.find('.EventDate').text('EFT: '+(endEventTime.getHours()-1)+':'+(endEventTime.getMinutes() < 10 ? endEventTime.getMinutes()+'0': endEventTime.getMinutes()));\n                   \n                }\n            },\n\n            resourceRender: function(resourceObj, labelTds, bodyTds) {\n\n\n                labelTds.html(resourceObj.title);\n                \n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            },\n            eventReceive: function(calEvent, delta, revertFunc) {\n                var calEventJS = {\n                    action:\"\"dropFromOutside\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DropFromOutside+\"\n            }\n\n        });\n\n    });\n\n    \n    $(document).ready(function(){\n\n        setTimeout(function(){\n            var timeNow = new Date().getHours();\n            var ampm = timeNow > 12 ? 'pm' : 'am';\n            if (ampm == 'pm') {\n                timeNow = timeNow - 12;\n                timeNow = timeNow + ampm;\n            } else {\n                timeNow = timeNow + ampm;\n            }\n            \n\n            $('.fc-ltr .fc-time-area .fc-chrono th.fc-widget-header').each(function(){\n                if ($(this).find('.fc-cell-text').text() == timeNow) {\n                    $(this).find('.fc-cell-text').append('<span class=\"\"curTime\"\"></span>');\n                    $('.fc-time-area.fc-widget-header .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.fc-time-area.fc-widget-content .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.currTime').height($('.fc-timeline .fc-body .fc-scroller').height()-20);\n                    $('.currTime').css('left', $('.curTime').position().left);\n                }\n            });\n        },700);\n\n\n\n    });\n\n    function addCard () {\n        //#LisbonTheme_wt15_block_wtMainContent_FullCalendar_wtFullCalendar_block_wtCalendarPlaceHolder\n        //var allEvents = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('clientEvents');\n        var event={id:500 , resourceId:1048, cardtype:'road', title:'New event', start:'2017-07-11T10:00:00Z', end:'2017-07-20T11:00:00Z', editable:true, startEditable:true, durationEditable:true, overlap:true, description:''};\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar( 'renderEvent', event, true);\n        //console.log('#\"+ CalendarPlaceHolder.Id +\"');\n        console.log(allEvents);\n    }\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"If(GetPayment.List.Current.Payment.ReceivedDate <> NullDate(),FormatDateTime(GetPayment.List.Current.Payment.ReceivedDate,\"MM/dd/yyyy\"),\"-\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(GetPayment.List.Current.Payment.CreditCardReferenceNumber <> \"\" and GetPayment.List.Current.Payment.CreditCardReferenceNumber <> \"0\", \"****\" + Substr(GetPayment.List.Current.Payment.CreditCardReferenceNumber, Length(GetPayment.List.Current.Payment.CreditCardReferenceNumber) - 4, 4), \"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"\"Posted \" + FormatDateTime(If(ContentForm.Record.Content.StartDateTime = NullDate(),StartDate,ContentForm.Record.Content.StartDateTime),\"MM/dd/yyyy HH:mm\")","type":"Text","functions":["FormatDateTime","If","NullDate"]}
{"text":"If(GetOrderById.List.Current.Order.ServiceDate <> NullDate(),FormatDateTime(GetOrderById.List.Current.Order.ServiceDate,\"MM/dd/yyyy\"),\"-\")\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(OrderPaymentTable.List.Current.LastBillDate=NullDate(),\"-\",DiffDays(DateTimeToDate(OrderPaymentTable.List.Current.LastBillDate),CurrDate()))","type":"Text","functions":["If","NullDate","DiffDays","DateTimeToDate","CurrDate"]}
{"text":"If(OrderPaymentTable.List.Current.LastBillDate=NullDate(),\"-\",FormatDateTime(OrderPaymentTable.List.Current.LastBillDate,\"MM/dd/yyyy\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"Substr(StorageFileName,Index(StorageFileName,\".\",0,True)+1,Length(StorageFileName)-Index(StorageFileName,\".\",0,True)-1) ","type":"Text","functions":["Substr","Index","Length"]}
{"text":"If(GetCustomerByCustomerId.List.Current.ContactMethod.ContactMethodTypeId = Entities.ContactMethodType.Phone ,FormatPhoneNumber(Trim(GetCustomerByCustomerId.List.Current.ContactMethod.Value),3,3,4,\"(\",\") \",\"-\"),\"\")","type":"Text","functions":["If","FormatPhoneNumber","Trim"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            \" + If(Trim(SchedulerLicense) <> \"\", \" schedulerLicenseKey: '\" + SchedulerLicense + \"',\", \"\") + \"\n\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            dayClick: function(date, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"dayClick\"\",\n                    range:{\n                        start: date.format(),\n                        end: (date.hasTime()?date:date.add(1, 'days')).format()\n                    },\n                    allDay: !date.hasTime(),\n                    delta:undefined,\n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DayClick+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    allDay: !(start.hasTime() || end.hasTime()),\n                    delta:undefined,                \n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Select+\"\n            },\n\n            \" + If(Trim(googleCalendarApiKey) <> \"\", \"googleCalendarApiKey: '\" + googleCalendarApiKey+ \"',\", \"\") + \"\n            // Resources\n            \" + If(Trim(ResourcesJSON) <> \"\", \"resources: \" + ResourcesJSON + \",\", \"\") + \"\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'GET'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n               eventRender: function(event, element)\n            {\n                element.find('.fc-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n                if (event.cardtype == 'road') {\n                    element.find('.fc-content').addClass('CardRoad');\n                    element.find('.fc-title').html('30m');\n                } else {\n                   \n                    var endEventTime = new Date(event.end);\n                    element.find('.fc-title').html($('.OrderEventHolder').html());\n                    $(this).find('.EventNumber').text(event.title);\n                    $(this).find('.EventDate').text('EFT: '+(endEventTime.getHours()-1)+':'+(endEventTime.getMinutes() < 10 ? endEventTime.getMinutes()+'0': endEventTime.getMinutes()));\n                   \n                }\n            },\n\n            resourceRender: function(resourceObj, labelTds, bodyTds) {\n\n\n                labelTds.html(resourceObj.title);\n                \n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            },\n            eventReceive: function(calEvent, delta, revertFunc) {\n                var calEventJS = {\n                    action:\"\"dropFromOutside\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DropFromOutside+\"\n            }\n\n        });\n\n    });\n\n    \n    $(document).ready(function(){\n\n        setTimeout(function(){\n            var timeNow = new Date().getHours();\n            var ampm = timeNow > 12 ? 'pm' : 'am';\n            if (ampm == 'pm') {\n                timeNow = timeNow - 12;\n                timeNow = timeNow + ampm;\n            } else {\n                timeNow = timeNow + ampm;\n            }\n            \n\n            $('.fc-ltr .fc-time-area .fc-chrono th.fc-widget-header').each(function(){\n                if ($(this).find('.fc-cell-text').text() == timeNow) {\n                    $(this).find('.fc-cell-text').append('<span class=\"\"curTime\"\"></span>');\n                    $('.fc-time-area.fc-widget-header .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.fc-time-area.fc-widget-content .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.currTime').height($('.fc-timeline .fc-body .fc-scroller').height()-20);\n                    $('.currTime').css('left', $('.curTime').position().left);\n                }\n            });\n        },700);\n\n\n\n    });\n\n    function addCard () {\n        //#LisbonTheme_wt15_block_wtMainContent_FullCalendar_wtFullCalendar_block_wtCalendarPlaceHolder\n        //var allEvents = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('clientEvents');\n        var event={id:500 , resourceId:1048, cardtype:'road', title:'New event', start:'2017-07-11T10:00:00Z', end:'2017-07-20T11:00:00Z', editable:true, startEditable:true, durationEditable:true, overlap:true, description:''};\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar( 'renderEvent', event, true);\n        //console.log('#\"+ CalendarPlaceHolder.Id +\"');\n        console.log(allEvents);\n    }\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"\"<script>\n    function safeJsonStringify(o){\n        var cache = [];\n        var blacklist = ['source','className'];\n        return JSON.stringify(o, function(key, value) {\n            // Exclude any attribute in the blacklist\n            if($.inArray(key,blacklist) != -1) return;\n \n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // Circular reference found, discard key\n                    return;\n                }\n                // Store value in collection\n                cache.push(value);\n            }\n            return value;\n        });\n    }\n\n    $(document).ready(function() {\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar({\n            \" + If(Trim(SchedulerLicense) <> \"\", \" schedulerLicenseKey: '\" + SchedulerLicense + \"',\", \"\") + \"\n\n            // General Display\n            \" + If(Trim(GeneralDisplayJSON) <> \"\", GeneralDisplayJSON + \",\", \"\") + \"\n            \n            // Timezone\n            \" + If(Trim(TimezoneJSON) <> \"\", TimezoneJSON+ \",\", \"\") + \"\n            \n            // Views\n            \" + If(Trim(ViewsJSON) <> \"\", ViewsJSON + \",\", \"\") + \"\n            \n            // Agenda Options\n            \" + If(Trim(AgendaOptionsJSON) <> \"\", AgendaOptionsJSON + \",\", \"\") + \"\n            \n            // Current Date\n            defaultDate:'\"+ DateToText(defaultDate) +\"',\n\n            // Text/Time Customization\n            \" + If(Trim(TextTimeCustomizationJSON) <> \"\", TextTimeCustomizationJSON + \",\", \"\") + \"\n            \n            eventDrop: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"drop\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Drop+\"\n            },\n\n            // Clicking & Hovering\n            eventClick: function(calEvent, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"click\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Click+\"\n            },\n\n            dayClick: function(date, jsEvent, view) {\n                var calEventJS = {\n                    action:\"\"dayClick\"\",\n                    range:{\n                        start: date.format(),\n                        end: (date.hasTime()?date:date.add(1, 'days')).format()\n                    },\n                    allDay: !date.hasTime(),\n                    delta:undefined,\n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DayClick+\"\n            },\n\n            // Selection\n            \" + If(Trim(SelectionJSON) <> \"\", SelectionJSON+ \",\", \"\") + \"\n            select: function(start, end, jsEvent, view)\n            {\n                var calEventJS = {\n                    action:\"\"select\"\",\n                    range:{\n                        start:start,\n                        end:end\n                    },\n                    allDay: !(start.hasTime() || end.hasTime()),\n                    delta:undefined,                \n                    event:undefined\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_Select+\"\n            },\n\n            \" + If(Trim(googleCalendarApiKey) <> \"\", \"googleCalendarApiKey: '\" + googleCalendarApiKey+ \"',\", \"\") + \"\n            // Resources\n            \" + If(Trim(ResourcesJSON) <> \"\", \"resources: \" + ResourcesJSON + \",\", \"\") + \"\n            // Event Data\n            \" + If(Trim(EventDataJSON) <> \"\", EventDataJSON+ \",\", \"\") + \"\n            eventSources: [\n                \" + If(EventsRESTUrl <> \"\", \"\n                {\n                    url: '\" + EventsRESTUrl + \"',\n                    cache: 'false',\n                    type: 'GET'\n                }\", \"\") + \"\n                \" + If(EventsJSON<>\"\", If(EventsRESTUrl <> \"\",\", \", \"\") + EventsJSON, \"\") + \"\n            ],\n            \" + If(LoadingClass <> \"\", \"\n            loading: function(isLoading, view) {\n                $('.\"+LoadingClass+\"').toggle(isLoading);\n            },\", \"\"\n            ) + \"\n\n            // Event Rendering\n               eventRender: function(event, element)\n            {\n                element.find('.fc-title').after('<div class=\\'fc-event-desc\\'>' + event.description+'</div>');\n                if (event.cardtype == 'road') {\n                    element.find('.fc-content').addClass('CardRoad');\n                    element.find('.fc-title').html('30m');\n                } else {\n                   debugger;\n                    var endEventTime = new Date(event.end);\n                    element.find('.fc-title').html($('.OrderEventHolder').html());\n                    element.find('.EventNumber').text(event.title);\n                    element.find('.EventDate').text('EFT: '+(endEventTime.getHours()-1)+':'+(endEventTime.getMinutes() < 10 ? endEventTime.getMinutes()+'0': endEventTime.getMinutes()));\n                   \n                }\n            },\n\n            resourceRender: function(resourceObj, labelTds, bodyTds) {\n\n\n                labelTds.html(resourceObj.title);\n                \n            },\n\n            // Event Dragging & Resizing\n            \" + If(Trim(EventDraggingAndResizingJSON) <> \"\", EventDraggingAndResizingJSON+ \",\", \"\") + \"\n            eventResize: function(calEvent, delta, revertFunc, jsEvent, ui, view) {\n                var calEventJS = {\n                    action:\"\"resize\"\",\n                    range:undefined,\n                    delta:delta,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+CallBack_Resize+\"\n            },\n            eventReceive: function(calEvent, delta, revertFunc) {\n                var calEventJS = {\n                    action:\"\"dropFromOutside\"\",\n                    range:undefined,\n                    delta:undefined,\n                    event:calEvent\n                };\n                $('#\"+e_cal.Id+\"').val(safeJsonStringify(calEventJS));\n                $('#\"+link_notify.Id+\"').click();\n\n                \"+Callback_DropFromOutside+\"\n            }\n\n        });\n\n    });\n\n    \n    $(document).ready(function(){\n\n        setTimeout(function(){\n            var timeNow = new Date().getHours();\n            var ampm = timeNow > 12 ? 'pm' : 'am';\n            if (ampm == 'pm') {\n                timeNow = timeNow - 12;\n                timeNow = timeNow + ampm;\n            } else {\n                timeNow = timeNow + ampm;\n            }\n            \n\n            $('.fc-ltr .fc-time-area .fc-chrono th.fc-widget-header').each(function(){\n                if ($(this).find('.fc-cell-text').text() == timeNow) {\n                    $(this).find('.fc-cell-text').append('<span class=\"\"curTime\"\"></span>');\n                    $('.fc-time-area.fc-widget-header .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.fc-time-area.fc-widget-content .fc-scroller-canvas').append('<div class=\"\"currTime\"\"></div>');\n                    $('.currTime').height($('.fc-timeline .fc-body .fc-scroller').height()-20);\n                    $('.currTime').css('left', $('.curTime').position().left);\n                }\n            });\n        },700);\n\n\n\n    });\n\n    function addCard () {\n        //#LisbonTheme_wt15_block_wtMainContent_FullCalendar_wtFullCalendar_block_wtCalendarPlaceHolder\n        //var allEvents = $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar('clientEvents');\n        var event={id:500 , resourceId:1048, cardtype:'road', title:'New event', start:'2017-07-11T10:00:00Z', end:'2017-07-20T11:00:00Z', editable:true, startEditable:true, durationEditable:true, overlap:true, description:''};\n        $('#\"+ CalendarPlaceHolder.Id +\"').fullCalendar( 'renderEvent', event, true);\n        //console.log('#\"+ CalendarPlaceHolder.Id +\"');\n        console.log(allEvents);\n    }\n</script>\n\"","type":"Text","functions":["If","Trim","DateToText"]}
{"text":"If(ListRecords1.List.Current.Structure_ManagerTimeOffRequests.RequestDateTo = NullDate(), \"1 Day\", (DiffDays(ListRecords1.List.Current.Structure_ManagerTimeOffRequests.RequestDateFrom, ListRecords1.List.Current.Structure_ManagerTimeOffRequests.RequestDateTo) + 1) + \" Days\")","type":"Text","functions":["If","NullDate","DiffDays"]}
{"text":"If(DateTo = NullDate(), FormatDateTime(DateFrom, \"dddd, d MMMM yyyy\"), FormatDateTime(DateFrom, \"dddd, d MMMM yyyy\") + \" - \" + FormatDateTime(DateTo, \"dddd, d MMMM yyyy\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day7 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day7 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day7 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day7,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day7 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day7 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day7 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day7,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day7,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day7 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day7 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day7,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day7)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day6 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day6 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day6 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day6,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day6 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day6 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day6 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day6,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day6,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day6 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day6 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day6,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day6)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day5 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day5 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day5 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day5,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day5 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day5 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day5 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day5,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day5,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day5 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day5 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day5,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day5)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day4 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day4 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day4 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day4,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day4 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day4 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day4 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day4,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day4,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day4 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day4 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day4,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day4)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day3 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day3 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day3 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day3,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day3 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day3 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day3 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day3,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day3,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day3 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day3 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day3,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day3)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day2 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day2 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day2 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day2,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day2 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day2 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day2 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day2,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day2,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day2 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day2 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day2,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day2)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day1 = NullIdentifier() \nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day1 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day1 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day1,\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.WorkShiftId_Day1 = NullIdentifier()\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day1 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day1 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.STartTime_Day1,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.EndTime_Day1,\"h:mm tt\"),\nIf(WorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day1 <> \"\", \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day1 + \" - \" + \nWorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day1,WorkShiftListEmployee.List.Current.EmployeeWorkshifts.ShiftNumber_Day1)))\n\n\n\n\n","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day7 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day7 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day7 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day7,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day7 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day7 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day7 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day7,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day7,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day7 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day7 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day7,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day7)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day6 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day6 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day6 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day6,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day6 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day6 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day6 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day6,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day6,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day6 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day6 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day6,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day6)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day5 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day5 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day5 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day5,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day5 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day5 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day5 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day5,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day5,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day5 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day5 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day5,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day5)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day4 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day4 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day4 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day4,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day4 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day4 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day4 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day4,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day4,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day4 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day4 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day4,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day4)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day3 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day3 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day3 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day3,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day3 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day3 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day3 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day3,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day3,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day3 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day3 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day3,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day3)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day2 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day2 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day2 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day2,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day2 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day2 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day2 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day2,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day2,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day2 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day2 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day2,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day2)))","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(WorkShiftList.List.Current.EmployeeWorkshifts.EmployeeAttendanceId_Day1 = NullIdentifier() \nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day1 = DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day1 = DateTimeToTime(DateToDateTime(NullDate())), WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day1,\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.WorkShiftId_Day1 = NullIdentifier()\nand WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day1 <> DateTimeToTime(DateToDateTime(NullDate()))\nand WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day1 <> DateTimeToTime(DateToDateTime(NullDate())),\nFormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.STartTime_Day1,\"h:mm tt\") + \" - \"+ FormatDateTime(WorkShiftList.List.Current.EmployeeWorkshifts.EndTime_Day1,\"h:mm tt\"),\nIf(WorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day1 <> \"\", \nWorkShiftList.List.Current.EmployeeWorkshifts.AttendanceTypeCode_Day1 + \" - \" + \nWorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day1,WorkShiftList.List.Current.EmployeeWorkshifts.ShiftNumber_Day1)))\n\n\n\n\n","type":"Text","functions":["If","NullIdentifier","DateTimeToTime","DateToDateTime","NullDate","FormatDateTime"]}
{"text":"If(Year(AddDays(DateEnd,-6)) <> Year(DateEnd),\n    FormatDateTime(AddDays(DateEnd,-6),\"MMM yyyy\") + \" / \" + FormatDateTime(DateEnd,\"MMM yyyy\"),\nIf(Month(AddDays(DateEnd,-6)) <> Month(DateEnd),\n    FormatDateTime(AddDays(DateEnd,-6),\"MMM\") + \" / \" + FormatDateTime(DateEnd,\"MMM yyyy\"),FormatDateTime(DateEnd,\"MMM yyyy\")\n)) + \" - days \" + Day(AddDays(DateEnd,-6)) + \" to \" + Day(DateEnd)\n\n\n\n\n\n\n\n\n\n","type":"Text","functions":["If","Year","AddDays","FormatDateTime","Month","Day"]}
{"text":"If(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.To) = TextToTime(\"00:00:00\"),\"\",FormatDateTime(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.To),\"hh\") + \nSubstr(TimeToText(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.To)),2,3))","type":"Text","functions":["If","DateTimeToTime","TextToTime","FormatDateTime","Substr","TimeToText"]}
{"text":"If(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.From) = TextToTime(\"00:00:00\"),\"\",FormatDateTime(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.From),\"hh\") + \nSubstr(TimeToText(DateTimeToTime(Items.List.Current.PrintTimesheetEmployee.From)),2,3))","type":"Text","functions":["If","DateTimeToTime","TextToTime","FormatDateTime","Substr","TimeToText"]}
{"text":"If(Items.List.Current.PrintTimesheetEmployee.TimeOut = TextToTime(\"00:00:00\"),\"\",FormatDateTime(Items.List.Current.PrintTimesheetEmployee.TimeOut,\"hh\") + \nSubstr(TimeToText(Items.List.Current.PrintTimesheetEmployee.TimeOut),2,3))","type":"Text","functions":["If","TextToTime","FormatDateTime","Substr","TimeToText"]}
{"text":"If(Items.List.Current.PrintTimesheetEmployee.TimeIn = TextToTime(\"00:00:00\"),\"\",FormatDateTime(Items.List.Current.PrintTimesheetEmployee.TimeIn,\"hh\") + \nSubstr(TimeToText(Items.List.Current.PrintTimesheetEmployee.TimeIn),2,3))","type":"Text","functions":["If","TextToTime","FormatDateTime","Substr","TimeToText"]}
{"text":"If(Length(TableClientManFindResult.List.Current.PortfolioManagementObj134.Email)>8,Substr(TableClientManFindResult.List.Current.PortfolioManagementObj134.Email,0,8)+\"...\",TableClientManFindResult.List.Current.PortfolioManagementObj134.Email)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableClientManFindResult.List.Current.PortfolioManagementObj134.Local)>6,Substr(TableClientManFindResult.List.Current.PortfolioManagementObj134.Local,0,6)+\"...\",TableClientManFindResult.List.Current.PortfolioManagementObj134.Local)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableClientManFindResult.List.Current.PortfolioManagementObj134.Address)>10,Substr(TableClientManFindResult.List.Current.PortfolioManagementObj134.Address,0,10)+\"...\",TableClientManFindResult.List.Current.PortfolioManagementObj134.Address)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableClientManFindResult.List.Current.PortfolioManagementObj134.Name)>10,Substr(TableClientManFindResult.List.Current.PortfolioManagementObj134.Name,0,10)+\"...\",TableClientManFindResult.List.Current.PortfolioManagementObj134.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Coberturas.List.Current.MlCobertura.Cobertura)>22,Substr(TR_Coberturas.List.Current.MlCobertura.Cobertura,0,23)+\"...\",TR_Coberturas.List.Current.MlCobertura.Cobertura)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords3.List.Current.Providers.Local)>9,\nSubstr(TableRecords3.List.Current.Providers.Local,0,9)+\"...\",\nTableRecords3.List.Current.Providers.Local\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords3.List.Current.Providers.Denomination)>20,\nSubstr(TableRecords3.List.Current.Providers.Denomination,0,20)+\"...\",\nTableRecords3.List.Current.Providers.Denomination\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Oficinas.List.Current.Oficina.Localidade)>9,\nSubstr(TR_Oficinas.List.Current.Oficina.Localidade,0,9)+\"...\",\nTR_Oficinas.List.Current.Oficina.Localidade\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"ToUpper(Substr(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil,0,1))+Substr(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"ToUpper(Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,0,1))+Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"ToUpper(Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,0,1)) + Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + PM_Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(TR_Apolices.List.Current.MlApolice.DataAnulacao=NullDate() ,\"\",Substr(TR_Apolices.List.Current.MlApolice.DataAnulacao,0,2)+\"-\"+Substr(TR_Apolices.List.Current.MlApolice.DataAnulacao,2,2))","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"ToUpper(Substr(R_ClientInfo.MlCliente.EstadoCivil,0,1))+Substr(R_ClientInfo.MlCliente.EstadoCivil,1,Length(R_ClientInfo.MlCliente.EstadoCivil)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"Substr(TR_SegundasVias.List.Current.MlSegundaVia.NomeSegurado ,0,20)+If(Length(TR_SegundasVias.List.Current.MlSegundaVia.NomeSegurado\n)>20,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TR_RecibosCobranca.List.Current.Cobranca.Matricula)>8,Substr(TR_RecibosCobranca.List.Current.Cobranca.Matricula,0,5) + \"...\",TR_RecibosCobranca.List.Current.Cobranca.Matricula)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(TR_Apolices.List.Current.MlRetencaoApolice.NomeCliente,0,20)+If(Length(TR_Apolices.List.Current.MlRetencaoApolice.NomeCliente)>20,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.objectivo,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.falta,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.Objectivo,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.falta,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.requisito,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.CRESCIMENTO_LIQUIDO,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.VALOR_ACTUAL_CARTEIRA,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.VALOR_INICIAL_CARTEIRA,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(Length(TableRecords.List.Current.Providers.Local)>9,\nSubstr(TableRecords.List.Current.Providers.Local,0,9)+\"...\",\nTableRecords.List.Current.Providers.Local\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"ToUpper(Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,0,1))+Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,1,Length(GetClientInfo.Info.Current.ClientInfo.CivilStatus)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"ToUpper(Substr(ClientInfo.ClientInfo.CivilStatus,0,1))+Substr(ClientInfo.ClientInfo.CivilStatus,1,Length(ClientInfo.ClientInfo.CivilStatus)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"If(ClientInfo.ClientInfo.BirthDate<>NullDate(),Replace(ClientInfo.ClientInfo.BirthDate,\" 0:00:00\",\"\"),\"\")","type":"Text","functions":["If","NullDate","Replace"]}
{"text":"If(PolicyTable.List.Current.Policys.StatusDate=NullDate(),\"\",Replace(PolicyTable.List.Current.Policys.StatusDate,\" 00:00:00\",\"\"))","type":"Text","functions":["If","NullDate","Replace"]}
{"text":"ToUpper(Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,0,1)) + Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,1,Length(GetClientInfo.Info.Current.ClientInfo.CivilStatus)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"If(Replace(PolicyTable.List.Current.Policys.StatusDate,\" 00:00:00\",\"\")=NullDate(),\"\",Replace(PolicyTable.List.Current.Policys.StatusDate,\" 00:00:00\",\"\"))","type":"Text","functions":["If","Replace","NullDate"]}
{"text":"If(Substr(PolicyTable.List.Current.Policys.DueDate,0,2)+\"-\"+Substr(PolicyTable.List.Current.Policys.DueDate,2,2)=NullDate(),\"\",Substr(PolicyTable.List.Current.Policys.DueDate,0,2)+\"-\"+Substr(PolicyTable.List.Current.Policys.DueDate,2,2))","type":"Text","functions":["If","Substr","NullDate"]}
{"text":"If(Replace(TableRecords2.List.Current.Policys.StatusDate,\" 00:00:00\",\"\")=NullDate(),\"\",Replace(TableRecords2.List.Current.Policys.StatusDate,\" 00:00:00\",\"\"))","type":"Text","functions":["If","Replace","NullDate"]}
{"text":"Substr(TableRecords1.List.Current.ClientRetemptionPolicies.ClientName,0,20)+If(Length(TableRecords1.List.Current.ClientRetemptionPolicies.ClientName)>20,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Replace(If(TableRecords1.List.Current.Policys.StatusDate=NullDate(),\"\",TableRecords1.List.Current.Policys.StatusDate),\" 00:00:00\",\"\")","type":"Text","functions":["Replace","If","NullDate"]}
{"text":"If(Replace(TableRecords1.List.Current.RiskUnit.RiskTermDate,\" 00:00:00\",\"\")=NullDate(),\"\",Replace(TableRecords1.List.Current.RiskUnit.RiskTermDate,\" 00:00:00\",\"\"))","type":"Text","functions":["If","Replace","NullDate"]}
{"text":"If(Replace(TableRecords1.List.Current.RiskUnit.RiskStartDate,\" 00:00:00\",\"\")=NullDate(),\"\",Replace(TableRecords1.List.Current.RiskUnit.RiskStartDate,\" 00:00:00\",\"\"))","type":"Text","functions":["If","Replace","NullDate"]}
{"text":"If(RiskUnitDetail2.AutoDetail.Current.AutoDetail.DriverLicenceDate<>NullDate(),DateTimeToDate(RiskUnitDetail2.AutoDetail.Current.AutoDetail.DriverLicenceDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(RiskUnitDetail2.AutoDetail.Current.AutoDetail.DriverBirthdate<>NullDate(),DateTimeToDate(RiskUnitDetail2.AutoDetail.Current.AutoDetail.DriverBirthdate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(RiskUnitDetail2.AutoDetail.Current.AutoDetail.PlateDate<>NullDate(),DateTimeToDate(RiskUnitDetail2.AutoDetail.Current.AutoDetail.PlateDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(RiskUnits.RiskUnits.Current.RiskUnit.RiskStartDate<>NullDate(),DateTimeToDate(RiskUnits.RiskUnits.Current.RiskUnit.RiskStartDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"Substr(TableDocuments.List.Current.Duplicate.HolderName ,0,20)+If(Length(TableDocuments.List.Current.Duplicate.HolderName\n)>20,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"ToUpper(Substr(LocalReceiptClientInfo.ClientInfo.CivilStatus,0,1))+Substr(LocalReceiptClientInfo.ClientInfo.CivilStatus,1,Length(LocalReceiptClientInfo.ClientInfo.CivilStatus)-1)","type":"Text","functions":["ToUpper","Substr","Length"]}
{"text":"If(SR_DadosTitular.Record.ALTERACAO_TITULAR.DataNascimento=NullDate(),\"\",DateTimeToDate(SR_DadosTitular.Record.ALTERACAO_TITULAR.DataNascimento))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TableRecords1.List.Current.PROJECT.Description) > 50, Substr(TableRecords1.List.Current.PROJECT.Description, 0, 50) + \"...\", TableRecords1.List.Current.PROJECT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableAttachements.List.Current.DOCUMENT.Description) > 50, Substr(TableAttachements.List.Current.DOCUMENT.Description, 0, 50) + \"...\", TableAttachements.List.Current.DOCUMENT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.DOCUMENT.Description) > 50, Substr(TableRecords1.List.Current.DOCUMENT.Description, 0, 50) + \"...\", TableRecords1.List.Current.DOCUMENT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_Attachments.List.Current.DOCUMENT.Description) > 50, Substr(TR_Attachments.List.Current.DOCUMENT.Description, 0, 50) + \"...\", TR_Attachments.List.Current.DOCUMENT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TextToTime(ServiceDuration)=NewTime(0,0,0), \"-\",ServiceDuration)\n\n","type":"Text","functions":["If","TextToTime","NewTime"]}
{"text":"If(Length(ServiceAttachmentTable.List.Current.ServiceAttachments.AttachmentName) > 30, Substr(ServiceAttachmentTable.List.Current.ServiceAttachments.AttachmentName, 0, 27) + \"...\", ServiceAttachmentTable.List.Current.ServiceAttachments.AttachmentName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(MessageTable.List.Current.MESSAGE.Title) > 50, Substr(MessageTable.List.Current.MESSAGE.Title, 0, 49) + \"...\", MessageTable.List.Current.MESSAGE.Title)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init_BPM('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor_BPM.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(Length(BpmUserTable.List.Current.BPM_USER.OBS)>70,Substr(BpmUserTable.List.Current.BPM_USER.OBS,0,70)+\"...\",BpmUserTable.List.Current.BPM_USER.OBS)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Substr(lrActions.List.Current.R_WORKLIST_RULE_ACTION.FIELD_NAME,0,2)=\"##\",Substr(lrActions.List.Current.R_WORKLIST_RULE_ACTION.FIELD_NAME,2,Length(lrActions.List.Current.R_WORKLIST_RULE_ACTION.FIELD_NAME)),lrActions.List.Current.R_WORKLIST_RULE_ACTION.FIELD_NAME)+\" = \"+\nIf(lrActions.List.Current.R_WORKLIST_RULE_ACTION.DATA_TYPE=\"Data\",Substr(lrActions.List.Current.R_WORKLIST_RULE_ACTION.DATA_TYPE,1,Length(lrActions.List.Current.R_WORKLIST_RULE_ACTION.DATA_TYPE)),lrActions.List.Current.R_WORKLIST_RULE_ACTION.DATA_TYPE)","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_valor_doc_dt.g_data_valor_doc_dt.value = NullDate(),\"\",DateTimeToDate(TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_valor_doc_dt.g_data_valor_doc_dt.value))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If( TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_valor_doc_dt.g_data_valor_doc_dt.value = NullDate(),\"\",DateTimeToDate(TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_valor_doc_dt.g_data_valor_doc_dt.value))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_doc_digit_import_dt.g_data_doc_digit_import_dt.value = NullDate(),\"\",DateTimeToDate(TrDocumentos.List.Current.ARQ_ATTRIBUTES.g_data_doc_digit_import_dt.g_data_doc_digit_import_dt.value))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(User2Table.List.Current.User2.comment)>100,Substr(User2Table.List.Current.User2.comment,0,100)+\"...\",User2Table.List.Current.User2.comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"TrimEnd(TrimStart(Replace(LocalSessionDataRiskUnitAUR.SessionRiskUnitAUData.objectNumber,\" \",\"\")))","type":"Text","functions":["TrimEnd","TrimStart","Replace"]}
{"text":"\"[\" + DateTimeToDate(TRBins.List.Current.BPS_GS_PESQUISA.DataInicial) + \";\" + DateTimeToDate(TRBins.List.Current.BPS_GS_PESQUISA.DataFinal) + \"]\" \n+ NewLine() \n+ If(TRBins.List.Current.BPS_GS_PESQUISA.Username = \"\" , \"\", TRBins.List.Current.BPS_GS_PESQUISA.Username + NewLine()) \n+ If(TRBins.List.Current.BPS_GS_PESQUISA.PerfilBPSCod = \"\" , \"\", TRBins.List.Current.BPS_GS_PESQUISA.PerfilBPSCod + NewLine()) \n+ If(TRBins.List.Current.BPS_GS_PESQUISA.Canal = \"\" , \"\", TRBins.List.Current.BPS_GS_PESQUISA.Canal + NewLine()) \n+ If(TRBins.List.Current.BPS_GS_PESQUISA.Companhia = \"\" , \"\", TRBins.List.Current.BPS_GS_PESQUISA.Companhia + NewLine()) \n+ If(TRBins.List.Current.BPS_GS_PESQUISA.Criterios = \"\" , \"\", TRBins.List.Current.BPS_GS_PESQUISA.Criterios)","type":"Text","functions":["DateTimeToDate","NewLine","If"]}
{"text":"Replace(Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<new>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</new>\")\n),\"<new>\",\"\"),\"</new>\",\"\"),\"<br/>\",\" \")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"Replace(Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<old>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</old>\")\n),\"<old>\",\"\"),\"</old>\",\"\"),\"<br/>\",\" \")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"If(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoResposta = NullDate(), \"NÃ£o definido\", NewDate(Year(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoResposta), Month(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoResposta), Day(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoResposta)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoEsclarecimento = NullDate(), \"NÃ£o definida\",\nNewDate(Year(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoEsclarecimento), Month(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoEsclarecimento), Day(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.PrazoEsclarecimento)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal = \"\", \"\", Substr(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal, 0, 4) +\nIf(Length(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal)>4,\"-\" + Substr(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal, 5, 3),\"\"))","type":"Text","functions":["If","Substr","Length"]}
{"text":"NewDate(Year(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Month(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Day(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"NewDate(Year(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Month(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Day(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta = NullDate(), \"NÃ£o definido\", NewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento = NullDate(), \"NÃ£o definido\",\nNewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById.List.Current.BPS_StrCliente.CodPostal = \"\", \"\", Substr(GetBpsPedidoCotacaoById.List.Current.BPS_StrCliente.CodPostal, 0, 4) +\nIf(Length(GetBpsPedidoCotacaoById.List.Current.BPS_StrCliente.CodPostal)>4,\"-\" + Substr(GetBpsPedidoCotacaoById.List.Current.BPS_StrCliente.CodPostal, 5, 3),\"\"))","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta = NullDate(), \"NÃ£o definido\", NewDate(Year(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Month(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta), Day(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoResposta)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento = NullDate(), \"NÃ£o definida\",\nNewDate(Year(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Month(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento), Day(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.PrazoEsclarecimento)))","type":"Text","functions":["If","NullDate","NewDate","Year","Month","Day"]}
{"text":"If(GetBpsPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal = \"\", \"\", Substr(GetBpsPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal, 0, 4) +\nIf(Length(GetBpsPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal)>4,\"-\" + Substr(GetBpsPedidoCotacaoById_RO.List.Current.BPS_StrCliente.CodPostal, 5, 3),\"\"))","type":"Text","functions":["If","Substr","Length"]}
{"text":"NewDate(Year(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(RecPI.strPedidoInfo.Resposta = \"\", \"\", \"Resposta: \" + Replace(RecPI.strPedidoInfo.Resposta, \"<br/>\", NewLine()))","type":"Text","functions":["If","Replace","NewLine"]}
{"text":"Trim(FormatDecimal(TextToDecimal(UnitRiskDetail.GetMultiriskUarDetailBSGOutputData.agricultural.AgriculturalElement.resinsSpoutsValue),2,\",\",\".\"))    ","type":"Text","functions":["Trim","FormatDecimal","TextToDecimal"]}
{"text":"Trim(FormatDecimal(TextToDecimal(UnitRiskDetail.GetMultiriskUarDetailBSGOutputData.agricultural.AgriculturalElement.occupiedArea),2,\",\",\".\"))    ","type":"Text","functions":["Trim","FormatDecimal","TextToDecimal"]}
{"text":"If(Length(Trim(TRClaimsAT.List.Current.ClaimReceiptStructure.message)) > 0,If(Length(TRClaimsAT.List.Current.ClaimReceiptStructure.message) < 60,TRClaimsAT.List.Current.ClaimReceiptStructure.message,Substr(TRClaimsAT.List.Current.ClaimReceiptStructure.message,0,60) + \" ...\"),\" \")","type":"Text","functions":["If","Length","Trim","Substr"]}
{"text":"If(Length(Trim(TRClaimsAT.List.Current.ClaimReceiptStructure.receiptEmissionDate)) > 0,Substr(TRClaimsAT.List.Current.ClaimReceiptStructure.receiptEmissionDate,0,10),\"Em Pagamento\")","type":"Text","functions":["If","Length","Trim","Substr"]}
{"text":"If(Length(Trim(TRClaimsAT.List.Current.ClaimReceiptStructure.receiptPaymentType)) > 0,TRClaimsAT.List.Current.ClaimReceiptStructure.receiptPaymentType,\" \")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(TRClaimsAT.List.Current.ClaimReceiptStructure.totalPremium)) > 0,FormatDecimal(TextToDecimal(Replace(TRClaimsAT.List.Current.ClaimReceiptStructure.totalPremium,\",\",\".\")),2,\",\",\".\") + \" â‚¬\",\" \")","type":"Text","functions":["If","Length","Trim","FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(Length(Trim(TRClaimsAT.List.Current.ClaimReceiptStructure.creditorEntity)) > 0,TRClaimsAT.List.Current.ClaimReceiptStructure.creditorEntity,\" \")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(TREvolucaoSinistro.List.Current.DisabilitiesDataElement.percentage <> \"\",FormatPercent(TextToDecimal(Replace(TREvolucaoSinistro.List.Current.DisabilitiesDataElement.percentage,\",\",\".\")) / 100,2,\",\"),\" \")","type":"Text","functions":["If","FormatPercent","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(Replace(TRSalario.List.Current.SalaryDataElementRasis.salary,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(TRCoberturas.List.Current.CoverageStructure.sumInsured = \"\",\"0,00\",FormatDecimal(TextToDecimal(Replace(TRCoberturas.List.Current.CoverageStructure.sumInsured,\",\",\".\")),2,\",\",\".\"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"<script type='text/javascript'>\n                    var pageSubmitted = false;\n                    function VoltarListaApolicesEntidade(){\n                        if (!pageSubmitted) {   \n                            pageSubmitted = true;       \n                            document.WebForm1.action = '/CAN_ApolicesGIS/Gis_ListarApolicesCliente.aspx';\n                            if (document.getElementById('__VIEWSTATE') != null)\n                                document.getElementById('__VIEWSTATE').value = '';\n                            document.WebForm1.submit();\n                        }else {\n                            alert('Aguarde por favor, pedido em processamento.');\n                        }\n                    }\n                    function BoldEntregaExtraordinarias(){\n                        var spanElements = document.getElementsByTagName('SPAN');\n                        for (var i = 0 ; i < spanElements.length ; i++) {\n                            if (spanElements[i].innerHTML.toUpperCase() == '\"+ToUpper(Replace(Replace(Replace(Trim(Session.GisInterativo.GisInteractivo_SessionData.GisMWControl.GISMWCONTROL.titulo),\" da\",\"\"),\" de\",\"\"),\" do\",\"\"))+\"')\n                                osjs(spanElements[i]).parent().find('img').attr('src','/CAN_ApolicesGIS/img/img_next_red.gif');  \n                            if (spanElements[i].innerHTML == 'Entregas ExtraordinÃ¡rias')\n                                spanElements[i].innerHTML = '<B>Entregas ExtraordinÃ¡rias</B>';\n                            if (spanElements[i].innerHTML == 'AnulaÃ§Ã£o Entregas')\n                                spanElements[i].innerHTML = '<B>AnulaÃ§Ã£o Entregas</B>';\n                            if (spanElements[i].innerHTML == 'AnulaÃ§Ã£o SubscriÃ§Ã£o')\n                                spanElements[i].innerHTML = '<B>AnulaÃ§Ã£o SubscriÃ§Ã£o</B>';                    \n                        }\n                    }\n                    BoldEntregaExtraordinarias();\n\n                function Documentacao(referencia, numApolice) {\n                    osjs('#\"+inpRef.Id+\"').val(referencia);\n                    osjs('#\"+inpApolice.Id+\"').val(numApolice);\n                    osjs('#\"+btnDocumentacao.Id+\"').click();\n                }\n        \n                 \n                  \n</script>\"","type":"Text","functions":["ToUpper","Replace","Trim"]}
{"text":"If(TextToDecimal(ListaCoberturasPessoaSegura.Current.FuneralListaCoberturas.Premio) > 0, \"â‚¬ \" + FormatDecimal(TextToDecimal(ListaCoberturasPessoaSegura.Current.FuneralListaCoberturas.Premio),2,\",\",\".\"), \"-\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(TextToDecimal(ListaCoberturasPessoaSegura.Current.FuneralListaCoberturas.CapitalSeguro) > 0, \"â‚¬ \" + FormatDecimal(TextToDecimal(ListaCoberturasPessoaSegura.Current.FuneralListaCoberturas.CapitalSeguro),2,\",\",\".\"), \"-\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"Substr(TR_RSC.List.Current.DailyProductionElement.mediatorManager,Index(TR_RSC.List.Current.DailyProductionElement.mediatorManager,\"-\")+1,Length(TR_RSC.List.Current.DailyProductionElement.mediatorManager))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(TR_GSC.List.Current.DailyProductionElement.branch,Index(TR_GSC.List.Current.DailyProductionElement.branch,\"-\")+1,Length(TR_GSC.List.Current.DailyProductionElement.branch))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"FormatText(Day(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+FormatText(Month(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+Year(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate))","type":"Text","functions":["FormatText","Day","TextToDate","Month","Year"]}
{"text":"Trim(Substr(TR_CTT.List.Current.DailyProductionElement.mediatorCode,Index(TR_CTT.List.Current.DailyProductionElement.mediatorCode,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.mediatorCode)))","type":"Text","functions":["Trim","Substr","Index","Length"]}
{"text":"Trim(Substr(TR_CTT.List.Current.DailyProductionElement.mediatorCode,0,Index(TR_CTT.List.Current.DailyProductionElement.mediatorCode,\"-\")))","type":"Text","functions":["Trim","Substr","Index"]}
{"text":"Substr(TR_CTT.List.Current.DailyProductionElement.mediatorManager,Index(TR_CTT.List.Current.DailyProductionElement.mediatorManager,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.mediatorManager))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(TR_CTT.List.Current.DailyProductionElement.branch,Index(TR_CTT.List.Current.DailyProductionElement.branch,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.branch))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Substr(TR_CTT.List.Current.DailyProductionElement.regionalManagement,Index(TR_CTT.List.Current.DailyProductionElement.regionalManagement,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.regionalManagement))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"FormatText(Day(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+FormatText(Month(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+Year(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate))","type":"Text","functions":["FormatText","Day","TextToDate","Month","Year"]}
{"text":"If(MensalEditRecord.Record.DC_VISITA.DataDadosSAS<>NullDate(),\"\n\" + \"(Resultados provisÃ³rios Ã  data \"+ DateToText(MensalEditRecord.Record.DC_VISITA.DataDadosSAS) +\".)\",\"\") ","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"If(AnualEditRecord.Record.DC_VISITA.DataDadosSAS<>NullDate(),\"\n\" + \"(Resultados provisÃ³rios Ã  data \"+ DateToText(AnualEditRecord.Record.DC_VISITA.DataDadosSAS) +\".)\",\"\") ","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"FormatDecimal(DecimalToInteger(TextToDecimal(OutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.availableVehicles)),0,\",\",\".\")\n","type":"Text","functions":["FormatDecimal","DecimalToInteger","TextToDecimal"]}
{"text":"FormatDecimal(DecimalToInteger(TextToDecimal(\nOutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.totalVehicles)),0,\",\",\".\")\n","type":"Text","functions":["FormatDecimal","DecimalToInteger","TextToDecimal"]}
{"text":"FormatDecimal(DecimalToInteger(TextToDecimal(\nOutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.totalAccountVehicles)),0,\",\",\".\")\n","type":"Text","functions":["FormatDecimal","DecimalToInteger","TextToDecimal"]}
{"text":"TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.sumInsured),2,\",\",\".\"))","type":"Text","functions":["TrimEnd","FormatDecimal","TextToDecimal"]}
{"text":"TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.deductibleAmt),2,\",\",\".\") + \" â‚¬\")","type":"Text","functions":["TrimEnd","FormatDecimal","TextToDecimal"]}
{"text":"TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.deductibleAmt),2,\",\",\".\")+ \" â‚¬\")","type":"Text","functions":["TrimEnd","FormatDecimal","TextToDecimal"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" +\nSubstr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.locality\n\n","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address2)) + \" \" + \nSubstr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + \nSubstr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + \nErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.locality","type":"Text","functions":["TrimStart","TrimEnd","Substr"]}
{"text":"If(TRCoberturas.List.Current.WebClientClaimCoveragesElement.sumInsured = \"\",\"0,00\",FormatDecimal(TextToDecimal(Replace(TRCoberturas.List.Current.WebClientClaimCoveragesElement.sumInsured,\",\",\".\")),2,\",\",\".\"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(Length(TRMensagens.List.Current.GetMessagesElement.LogDetail) > 60,Substr(TRMensagens.List.Current.GetMessagesElement.LogDetail,0,60)+\"...\",TRMensagens.List.Current.GetMessagesElement.LogDetail)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EVEdit.Record.EV.EntreaGPRO <> NullDate(), DateTimeToDate(EVEdit.Record.EV.EntreaGPRO), \"Sem indicaÃ§Ã£o de data\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(Produto)> 41,Substr(Produto,0,38)+\"...\",Produto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Trim(Substr(ListRecords1.List.Current.MetadataModel.Value,0,500))+If(Length(Trim(ListRecords1.List.Current.MetadataModel.Value))>500,\"...\",\"\")","type":"Text","functions":["Trim","Substr","If","Length"]}
{"text":"\"<strong>DE: </strong>\" + Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<old>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</old>\")\n),\"<old>\",\"\"),\"</old>\",\"\")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"\"<strong>PARA: </strong>\"+\nReplace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<new>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</new>\")\n),\"<new>\",\"\"),\"</new>\",\"\")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"Substr(TRRelatorios.List.Current.ClinicalInfoElement.InfoText,0,40)+If(Length(TRRelatorios.List.Current.ClinicalInfoElement.InfoText) > 40,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(CriterioPesquisaDataFim = NullDate(), CurrDate(), CriterioPesquisaDataFim)","type":"Date","functions":["If","NullDate","CurrDate"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ImpostoSelo,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.IRS,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoPremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoPremiosNaoVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoEstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoEstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.EstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.EstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.PremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.PremiosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"trPoliciesRL.List.Current.PolicyElement.addressLine1 + If(Length( trPoliciesRL.List.Current.PolicyElement.town )>0,\", \" + trPoliciesRL.List.Current.PolicyElement.town ,\"\") + If(Length( trPoliciesRL.List.Current.PolicyElement.postalCode )>4,\", \" + Substr( trPoliciesRL.List.Current.PolicyElement.postalCode ,0,4) + \"-\" +  Substr( trPoliciesRL.List.Current.PolicyElement.postalCode ,5,3),\"\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type=\"\"text/javascript\"\">\" + \n\" \n  var year = new Date().getFullYear();\n  var month = new Date().getMonth();\n  var day = new Date().getDate();\n\n\n  var eventData = \" + eventData+ \";\n\n  $(document).ready(function() {\n    $('#\"+ divId +\"').weekCalendar({\n      timeslotsPerHour: 2,\n      timeslotHeigh: 10,\n      overlapEventsSeparate: true,\n      use24Hour:true,\n      readonly: true,\n      hourLine: true,\n      daysToShow:7,\n      dateFormat:'j-M-Y',\n      shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n      longMonths: ['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n      shortDays: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\n      longDays: ['Domingo', 'Segunda', 'TerÃ§a', 'Quarta', 'Quinta', 'Sexta', 'SÃ¡bado'],\n      businessHours:{start: 7, end: 23, limitDisplay: true },\n      dateformat:\"\"Y-M-D\"\",\n      date: \" + \"new Date(\" + Year(Date) + \", \" + (Month(Date)-1) + \",\" + Day(Date) + \")\" + \",\n      data: function(start,end, callback){\n            callback(\"+ eventData +\");\n        },\n      height: 420,\n      eventClick : function(calEvent, $event) {\n            $('#\" + notifyfield.Id + \"').val(calEvent.id);\n            $('#\" + notifyButton.Id + \"').click();\n        },\n      eventRender : function(calEvent, $event) {\n        if (calEvent.end.getTime() < new Date().getTime()) {\n          $event.css('backgroundColor', '#aaa');\n          $event.find('.time').css({'backgroundColor': '#999', 'border':'1px solid #888'});\n        }\n      },\n    });\n\n    function displayMessage(message) {\n      $('#message').html(message).fadeIn();\n    }\n\n    $('<div id=\"\"message\"\" class=\"\"ui-corner-all\"\"></div>').prependTo($('body'));\n  });\n\n\n</script>\"","type":"Text","functions":["Year","Month","Day"]}
{"text":"If(ValuesTable.List.Current.ArchitectureMetric.Type = Entities.ArchitectureMetricType.Integer,\nFormatDecimal(ValuesTable.List.Current.ArchitectureMetricValue.Value, 0, Site.DecimalSeparator, Site.GroupSeparator),\nFormatPercent(ValuesTable.List.Current.ArchitectureMetricValue.Value,1, Site.DecimalSeparator)) ","type":"Text","functions":["If","FormatDecimal","FormatPercent"]}
{"text":"If(trMatrix.List.Current.ENSMRN2_ProductMatrix.CoverageName = \"\",\n \"&nbsp;\",\n TrimEnd(TrimStart(trMatrix.List.Current.ENSMRN2_ProductMatrix.CoverageName)))","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If (UserGoupId <> NullIdentifier(), EncodeHtml(UserGroupRec.Record.USER_GROUP.Name), \"<I>New</I>\")","type":"Text","functions":["If","NullIdentifier","EncodeHtml"]}
{"text":"\nConcat(Hour(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio),Concat(\":\",Minute(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio)))\n\n","type":"Text","functions":["Concat","Hour","Minute"]}
{"text":"\nConcat(Hour(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio),Concat(\":\",Minute(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio)))\n","type":"Text","functions":["Concat","Hour","Minute"]}
{"text":"If(Value = NullDate(), \"\", DateTimeToDate(Value) + \" \" + FormatText(Hour(Value), 2, 2, True, \"0\") + \":\" + FormatText(Minute(Value), 2, 2, True, \"0\"))","type":"Text","functions":["If","NullDate","DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(ImageWidthPx > ImageHeightPx,\n\n\"<div class=\"\"myThumbDivAutoAdd myPic\"\" style=\"\"float: left; width: \"+WidthPx+\"px; height: \"+HeightPx+\"px; overflow: hidden; background-image: url(\"+AddPersonalAreaToURLPath(GetOwnerURLPath())+\"EmbededIMG.aspx?AnexoId=\"+AnexoId+\"); background-color: rgb(204, 204, 204); background-size: \"+(ImageWidthPx*HeightPx)/ImageHeightPx+\"px \"+HeightPx+\"px; background-position: 50% 50%; background-repeat: no-repeat no-repeat;\"\"></div>\",\nIf(ImageWidthPx < ImageHeightPx,\n\n\"<div class=\"\"myThumbDivAutoAdd myPic\"\" style=\"\"float: left; width: \"+WidthPx+\"px; height: \"+HeightPx+\"px; overflow: hidden; background-image: url(\"+AddPersonalAreaToURLPath(GetOwnerURLPath())+\"EmbededIMG.aspx?AnexoId=\"+AnexoId+\"); background-color: rgb(204, 204, 204); background-size: \"+WidthPx+\"px \"+(ImageHeightPx*WidthPx)/ImageWidthPx+\"px; background-position: 50% 50%; background-repeat: no-repeat no-repeat;\"\"></div>\",\n\n\"<div class=\"\"myThumbDivAutoAdd myPic\"\" style=\"\"float: left; width: \"+WidthPx+\"px; height: \"+HeightPx+\"px; overflow: hidden; background-image: url(\"+AddPersonalAreaToURLPath(GetOwnerURLPath())+\"EmbededIMG.aspx?AnexoId=\"+AnexoId+\"); background-color: rgb(204, 204, 204); background-size: \"+If(WidthPx>HeightPx,WidthPx,HeightPx)+\"px \"+If(WidthPx>HeightPx,WidthPx,HeightPx)+\"px; background-position: 50% 50%; background-repeat: no-repeat no-repeat;\"\"></div>\"))","type":"Text","functions":["If","AddPersonalAreaToURLPath","GetOwnerURLPath"]}
{"text":"If(Length(TableRecords1.List.Current.ErrorsAndOccurencies.Msg) > 80, Substr(TableRecords1.List.Current.ErrorsAndOccurencies.Msg,0,79),TableRecords1.List.Current.ErrorsAndOccurencies.Msg)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords2.List.Current.ErrorsAndOccurencies.Msg) > 50, Substr(TableRecords2.List.Current.ErrorsAndOccurencies.Msg,0,49)+\"(...)\",TableRecords2.List.Current.ErrorsAndOccurencies.Msg)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.ErrorsAndOccurencies.Msg) > 50, Substr(TableRecords1.List.Current.ErrorsAndOccurencies.Msg,0,49)+\"(...)\",TableRecords1.List.Current.ErrorsAndOccurencies.Msg)","type":"Text","functions":["If","Length","Substr"]}
{"text":" If(Length(FindMessage.List.Current.AllMessageData.MessageLocale_Message)>120,\nSubstr(FindMessage.List.Current.AllMessageData.MessageLocale_Message,0,120) + \"...\",\nSubstr(FindMessage.List.Current.AllMessageData.MessageLocale_Message,0,120))\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario)>=30,Substr(GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario ,0,27)+\"...\",GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (Length(GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario)>=30, Substr(GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario,0,27) +\"...\",GetContactos_GACM.List.Current.GAC_Calendario.LinhaCalendario)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(trListarTarefas.List.Current.GAC_TarefaList.DataVencimento)=NullDate(),\"\",DateTimeToDate(trListarTarefas.List.Current.GAC_TarefaList.DataVencimento))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"NewTime(Hour(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Minute(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Second(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto))","type":"Time","functions":["NewTime","Hour","Minute","Second"]}
{"text":"NewDate(Year(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Month(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Day(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto))","type":"Date","functions":["NewDate","Year","Month","Day"]}
{"text":"If(trAlertas.List.Current.Query_GAC_ListaAlertas.IDAccaoComercial = 0,\"\",\n   trAlertas.List.Current.Query_GAC_ListaAlertas.IDAccaoComercial+\"-\") +\n\nIf(Length(trAlertas.List.Current.Query_GAC_ListaAlertas.Texto)>25,Substr(trAlertas.List.Current.Query_GAC_ListaAlertas.Texto,0,22)+\"...\",trAlertas.List.Current.Query_GAC_ListaAlertas.Texto)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trMeusAlertas.List.Current.GAC_ListaAlertas.Texto)>33,Substr(trMeusAlertas.List.Current.GAC_ListaAlertas.Texto,0,30)+\"...\",trMeusAlertas.List.Current.GAC_ListaAlertas.Texto)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(erTarefa.Record.GAC_TAREFA.DataFim)=NullDate(),\"\",DateTimeToDate(erTarefa.Record.GAC_TAREFA.DataFim))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Length(trTarefaTable.List.Current.GAC_TarefaList.NumApolice)>10,Substr(trTarefaTable.List.Current.GAC_TarefaList.NumApolice,0,7) + \"... <img src='/GAC_FrontEnd/img/InfoBalloon.png' alt='\" + trTarefaTable.List.Current.GAC_TarefaList.NumApolice + \"'>\",trTarefaTable.List.Current.GAC_TarefaList.NumApolice)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(trListarTemplate.List.Current.GAC_EscolheTemplateSMS.SMS<>\"\",Substr(trListarTemplate.List.Current.GAC_EscolheTemplateSMS.SMS,0,60) + If(Length(trListarTemplate.List.Current.GAC_EscolheTemplateSMS.SMS)>60,\"...\",\"\") + \"<img src='/GAC_FrontEnd/img/InfoBalloon.png' alt='\"+ trListarTemplate.List.Current.GAC_EscolheTemplateSMS.SMS+\"'/>\",\"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(Length(AccontDescription)> 20,Substr(AccontDescription,0,17) + \"...\",AccontDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GacTempSMSTable.List.Current.GAC_TEMPLATESMS.SMS<>\"\",Substr(GacTempSMSTable.List.Current.GAC_TEMPLATESMS.SMS,0,60) + If(Length(GacTempSMSTable.List.Current.GAC_TEMPLATESMS.SMS)>60,\"...\",\"\") + \"<img src='/GAC_FrontEnd/img/InfoBalloon.png' alt='\"+ GacTempSMSTable.List.Current.GAC_TEMPLATESMS.SMS+\"'/>\",\"\")\n\n\n","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto<>\"\",Substr(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto,0,20) + If(Length(GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto)>20,\"...\",\"\") + \"<img src='/GAC_FrontEnd/img/InfoBalloon.png' alt='\"+ GacTemptxtTable.List.Current.Query_GetTemplateCartas.Texto+\"'/>\",\"\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.PolicyStartDate) <> NullDate(), \"De: \" +DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.PolicyStartDate), \"-\") +  If(DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.PolicyEndDate) <> NullDate(), \" a \" +DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.PolicyEndDate), If(DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.PolicyStartDate) <> NullDate(), \"-\", \"\"))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(SessionServiceData.Current.SESSION_SERVICE_DATA.ClaimDate <> NullDate(),  DateTimeToDate(SessionServiceData.Current.SESSION_SERVICE_DATA.ClaimDate), \"-\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(DateTimeToDate(Session_ServiceData_Get.ServiceData.Current.SESSION_SERVICE_DATA.PolicyEndDate)<> NullDate(), DateTimeToDate(Session_ServiceData_Get.ServiceData.Current.SESSION_SERVICE_DATA.PolicyEndDate), \" -\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(Session_ServiceData_Get.ServiceData.Current.SESSION_SERVICE_DATA.PolicyStartDate) <> NullDate(), DateTimeToDate(Session_ServiceData_Get.ServiceData.Current.SESSION_SERVICE_DATA.PolicyStartDate), \"-\")","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Length(MessageTable.List.Current.MessageWebBlocks.MessageTitle) > 50, Substr(MessageTable.List.Current.MessageWebBlocks.MessageTitle, 0, 49) + \"...\", MessageTable.List.Current.MessageWebBlocks.MessageTitle)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(EntityServiceHourLimitTable.List.Current.ENTITY.ShortName) > 40, Substr(EntityServiceHourLimitTable.List.Current.ENTITY.ShortName, 0, 38) + \"...\", EntityServiceHourLimitTable.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Hour( UnavailabitityTable.List.Current.UNAVAILABILITY.StartDate)=\"00:00:00\", DateTimeToDate(UnavailabitityTable.List.Current.UNAVAILABILITY.StartDate) +\" HH-MM-SS\", UnavailabitityTable.List.Current.UNAVAILABILITY.StartDate)","type":"Text","functions":["If","Hour","DateTimeToDate"]}
{"text":"If(Length(UnavailabitityTable.List.Current.ENTITY.ShortName) > 40, Substr(UnavailabitityTable.List.Current.ENTITY.ShortName, 0, 38) + \"...\", UnavailabitityTable.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ZoneGroupTable.List.Current.GROUP.Name) > 25, Substr(ZoneGroupTable.List.Current.GROUP.Name, 0, 23) + \"...\", ZoneGroupTable.List.Current.GROUP.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ExpertsTable.List.Current.ENTITY.ShortName) > 40, Substr(ExpertsTable.List.Current.ENTITY.ShortName, 0, 38) + \"...\", ExpertsTable.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EntityTable.List.Current.ENTITY.ShortName = \"\", \"-\", If(Length(EntityTable.List.Current.ENTITY.ShortName) > 40, Substr(EntityTable.List.Current.ENTITY.ShortName, 0, 38) + \"...\", EntityTable.List.Current.ENTITY.ShortName))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(EntityDelegationTable.List.Current.ENTITY.ShortName) > 40, Substr(EntityDelegationTable.List.Current.ENTITY.ShortName, 0, 38) + \"...\", EntityDelegationTable.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TR_CustumeExpertSystems.List.Current.ENTITY.ShortName) > 40, Substr(TR_CustumeExpertSystems.List.Current.ENTITY.ShortName, 0, 38) + \"...\", TR_CustumeExpertSystems.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ServiceReportList.List.Current.SERVICE_REPORT.Name=\"\",\"Sem descriÃ§Ã£o\",If(Length(ServiceReportList.List.Current.SERVICE_REPORT.Name) > 30, Substr(ServiceReportList.List.Current.SERVICE_REPORT.Name, 0, 27) + \"...\", ServiceReportList.List.Current.SERVICE_REPORT.Name))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ServiceReportAttachmentsList.List.Current.CW_TPD_TEMPORARY_DOCUMENT.Name=\"\",\"Sem descriÃ§Ã£o\",If(Length(ServiceReportAttachmentsList.List.Current.CW_TPD_TEMPORARY_DOCUMENT.Name) > 30, Substr(ServiceReportAttachmentsList.List.Current.CW_TPD_TEMPORARY_DOCUMENT.Name, 0, 27) + \"...\", ServiceReportAttachmentsList.List.Current.CW_TPD_TEMPORARY_DOCUMENT.Name))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(If(ServiceBudgetAttachmentTable.List.Current.FILE.Description = \"\", ServiceBudgetAttachmentTable.List.Current.FILE.Filename, ServiceBudgetAttachmentTable.List.Current.FILE.Description)) > 30, Substr(If(ServiceBudgetAttachmentTable.List.Current.FILE.Description = \"\", ServiceBudgetAttachmentTable.List.Current.FILE.Filename, ServiceBudgetAttachmentTable.List.Current.FILE.Description), 0, 27) + \"...\", If(ServiceBudgetAttachmentTable.List.Current.FILE.Description = \"\", ServiceBudgetAttachmentTable.List.Current.FILE.Filename, ServiceBudgetAttachmentTable.List.Current.FILE.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatText(Hour(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\") +\":\"+FormatText(Minute(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\") +\":\"+FormatText(Second(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\")","type":"Text","functions":["FormatText","Hour","Minute","Second"]}
{"text":"Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(\nIf(Length(TableRecordsUploadedFiles.List.Current.MC_FindUploadedFilesOuput.MonthsInfluenced) > 3, Substr(TableRecordsUploadedFiles.List.Current.MC_FindUploadedFilesOuput.MonthsInfluenced, 0, 1) + \" a \" + Substr(TableRecordsUploadedFiles.List.Current.MC_FindUploadedFilesOuput.MonthsInfluenced, Length(TableRecordsUploadedFiles.List.Current.MC_FindUploadedFilesOuput.MonthsInfluenced) - 1, 1), TableRecordsUploadedFiles.List.Current.MC_FindUploadedFilesOuput.MonthsInfluenced), \n\"1\" ,  \"Janeiro\"), \n\"2\" , \" Fevereiro\"), \n\"3\" , \" MarÃ§o\"), \n\"4\" , \" Abril\"), \n\"5\" , \" Maio\"), \n\"6\" , \" Junho\"), \n\"7\" , \" Julho\"), \n\"8\" , \" Agosto\"), \n\"9\" , \" Setembro\"), \n\"10\", \" Outubro\"), \n\"11\", \" Novembro\"), \n\"12\", \" Dezembro\")","type":"Text","functions":["Replace","If","Length","Substr"]}
{"text":"If(ServiceEdit.Record.SERVICE.ClaimDate=NullDate(), \"-\" ,DateTimeToDate(ServiceEdit.Record.SERVICE.ClaimDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleEdit.Record.VEHICLE.RegistrationDate=NullDate(),\"-\", DateTimeToDate(VehicleEdit.Record.VEHICLE.RegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleEdit.Record.VEHICLE.FirstRegistrationDate=NullDate(),\"-\", DateTimeToDate(VehicleEdit.Record.VEHICLE.FirstRegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleTable.List.Current.MassExpertise_VehiclesList.RegistrationDate=NullDate(),\"-\",\nDateTimeToDate(VehicleTable.List.Current.MassExpertise_VehiclesList.RegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleTable.List.Current.MassExpertise_VehiclesList.FirstRegistrationDate=NullDate(), \"-\",\nDateTimeToDate(VehicleTable.List.Current.MassExpertise_VehiclesList.FirstRegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleEdit.Record.VEHICLE.FirstRegistrationDate=NullDate(), \"-\", DateTimeToDate(VehicleEdit.Record.VEHICLE.FirstRegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ExtrasTable.List.Current.INSURANCE_COVERAGE.Description = \"\", \"-\", If(Length(ExtrasTable.List.Current.INSURANCE_COVERAGE.Description) > 30, Substr(ExtrasTable.List.Current.INSURANCE_COVERAGE.Description, 0, 28) + \"...\", ExtrasTable.List.Current.INSURANCE_COVERAGE.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(CoverageTable.List.Current.INSURANCE_COVERAGE.Description = \"\" or\nCoverageTable.List.Current.INSURANCE_COVERAGE.Description = \"-\", \"-\",If(Length(CoverageTable.List.Current.INSURANCE_COVERAGE.Description) >= 20,\nSubstr(CoverageTable.List.Current.INSURANCE_COVERAGE.Description,0,20) + \"...\",\nCoverageTable.List.Current.INSURANCE_COVERAGE.Description))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(InsuranceEdit.Record.INSURANCE.PolicyRenewalDate=NullDate(),\"-\",DateTimeToDate(InsuranceEdit.Record.INSURANCE.PolicyRenewalDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(InsuranceEdit.Record.INSURANCE.PolicyEndDate=NullDate(),\"-\",DateTimeToDate(InsuranceEdit.Record.INSURANCE.PolicyEndDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(InsuranceEdit.Record.INSURANCE.PolicyStartDate=NullDate(),\"-\",DateTimeToDate(InsuranceEdit.Record.INSURANCE.PolicyStartDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleEdit.Record.VEHICLE.RegistrationDate=NullDate(),\"-\",DateTimeToDate(VehicleEdit.Record.VEHICLE.RegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(VehicleEdit.Record.VEHICLE.FirstRegistrationDate=NullDate(),\"-\",DateTimeToDate(VehicleEdit.Record.VEHICLE.FirstRegistrationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ServiceContactTable.List.Current.SERVICE_CONTACT.ContactDate=NullDate(),\"-\",\nDateTimeToDate(ServiceContactTable.List.Current.SERVICE_CONTACT.ContactDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(OtherContacts_Table.List.Current.ENTITY.ShortName) > 150, Substr(OtherContacts_Table.List.Current.ENTITY.ShortName, 0, 148) + \"...\", OtherContacts_Table.List.Current.ENTITY.ShortName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EntityShow.Record.SERVICE_CONTACT.ContactDate=NullDate(),\"-\",\nDateTimeToDate(EntityShow.Record.SERVICE_CONTACT.ContactDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(QuestionGroupId=NullIdentifier(),\" Ungrouped Question\",\" Group Question '\"+Substr(GetRec_QuestionGroup.List.Current.QUESTION_GROUP2.Title,0,25) + \"'\")","type":"Text","functions":["If","NullIdentifier","Substr"]}
{"text":"Substr(TR_InquiryList.List.Current.INQUIRY2.Name,0,Min(Length(TR_InquiryList.List.Current.INQUIRY2.Name),50)) + If (Length(TR_InquiryList.List.Current.INQUIRY2.Name) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"If(TableRecordsResults2.List.Current.ActivCareDentalOutput.KM=\"0\",\" \",Round(TextToDecimal(TableRecordsResults2.List.Current.ActivCareDentalOutput.KM),2) + \" Km\")","type":"Text","functions":["If","Round","TextToDecimal"]}
{"text":"If(Latitude=\"0\",\" \",Round(TextToDecimal(TableRecordsResults.List.Current.PesquisarEntidadesServicosRedeOutput.KM),2) + \" Km \")","type":"Text","functions":["If","Round","TextToDecimal"]}
{"text":"If(Longitude=\"0\",\" \",Round(TextToDecimal(TableRecordsResults_Perceiros.List.Current.PesquisarParceirosOutput.km),2) + \" Km \")\n","type":"Text","functions":["If","Round","TextToDecimal"]}
{"text":"If(TableRecordsResults.List.Current.ActivCareDentalOutput.KM=\"0\",\" \",Round(TextToDecimal(TableRecordsResults.List.Current.ActivCareDentalOutput.KM),2) + \" Km\")","type":"Text","functions":["If","Round","TextToDecimal"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.CreatedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.CreatedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.EndedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.EndedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.StartedAt)<>NullDate(),TextToDate(TableCatastrophe.List.Current.MSB_Catastrophe_List.StartedAt),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Length(TableComments.List.Current.Comment_List.Description) > 70, Substr(TableComments.List.Current.Comment_List.Description,0,70) + \" ...\", TableComments.List.Current.Comment_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DateTimeToDate(TableSubUARs_MR.List.Current.MSC_PolicySearch_SubUAR_List_MR_OutputData.ExternalEndDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs_MR.List.Current.MSC_PolicySearch_SubUAR_List_MR_OutputData.ExternalEndDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableSubUARs_MR.List.Current.MSC_PolicySearch_SubUAR_List_MR_OutputData.ExternalStartDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs_MR.List.Current.MSC_PolicySearch_SubUAR_List_MR_OutputData.ExternalStartDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableSubUARs_AP.List.Current.MSC_PolicySearch_SubUAR_List_AP_OutputData.ExternalEndDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs_AP.List.Current.MSC_PolicySearch_SubUAR_List_AP_OutputData.ExternalEndDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TableSubUARs_AP.List.Current.MSC_PolicySearch_SubUAR_List_AP_OutputData.ExternalStartDate)=NullDate(),\"\",DateTimeToDate(TableSubUARs_AP.List.Current.MSC_PolicySearch_SubUAR_List_AP_OutputData.ExternalStartDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(TextToDate(TableProvider.List.Current.MSB_PreferentialProvider_List.BirthDate)<>NullDate(),TextToDate(TableProvider.List.Current.MSB_PreferentialProvider_List.BirthDate),\"\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(TableProcessList.List.Current.X_WL_FolderList.DocumentChangedAt = NullDate(),\"\",TextToDate(TableProcessList.List.Current.X_WL_FolderList.DocumentChangedAt)) ","type":"Text","functions":["If","NullDate","TextToDate"]}
{"text":"If(DiffDays(NewDate(2000,Month(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate),Day(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate)), NewDate(2000,Month(MSS_Claim_Get.Claim_Struct.CLAIM.ACCIDENTAT),Day(MSS_Claim_Get.Claim_Struct.CLAIM.ACCIDENTAT)))<0,Year(MSS_Claim_Get.Claim_Struct.CLAIM.ACCIDENTAT)-Year(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate)-1,Year(MSS_Claim_Get.Claim_Struct.CLAIM.ACCIDENTAT)-Year(MSC_Entity_GetData_PolicyDamaged.Entity_Struct.Entity_Struct.BirthConstitutionDate))","type":"Integer","functions":["If","DiffDays","NewDate","Month","Day","Year"]}
{"text":"\"Enviado para \" + Replace(Substr(TRNotes2.List.Current.Note.VisibleAt,1,Length(TRNotes2.List.Current.Note.VisibleAt) - 2),\"|\",\", \")","type":"Text","functions":["Replace","Substr","Length"]}
{"text":"If(TblMessageList.List.Current.MSS_ExternalManagement_MessageList.SentAt > DateToDateTime(NullDate()), \nTblMessageList.List.Current.MSS_ExternalManagement_MessageList.SentAt,\n\"\")","type":"Text","functions":["If","DateToDateTime","NullDate"]}
{"text":"If(TblMessageList.List.Current.MSS_ExternalManagement_MessageList.CreatedAt > DateToDateTime(NullDate()), \nTblMessageList.List.Current.MSS_ExternalManagement_MessageList.CreatedAt,\n\"\")","type":"Text","functions":["If","DateToDateTime","NullDate"]}
{"text":"If(DateTimeToDate(TableAssociatedClaims.List.Current.AssociatedClaimList.AccidentAt)=NullDate(),\"\",DateTimeToDate(TableAssociatedClaims.List.Current.AssociatedClaimList.AccidentAt))\n","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(EditClaim.Record.Claim_Struct.SystemEntranceAt) = NullDate(),\n \"\", \nSubstr(EditClaim.Record.Claim_Struct.SystemEntranceAt,0,Length(EditClaim.Record.Claim_Struct.SystemEntranceAt)-3)\n)","type":"Text","functions":["If","DateTimeToDate","NullDate","Substr","Length"]}
{"text":"If(SubClaimInfo.SubClaim_Vehicle_Struct.CompanyEntryDate <>NullDate(),SubClaimInfo.SubClaim_Vehicle_Struct.CompanyEntryDate+ \" \"+ Substr(MSS_Claim_GetData.Claim_Struct.Claim_Struct.CompanyEntryHour,0,5),\"\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(EditSubClaim.Record.SubClaim_Person_Struct.CompanyEntryDay<>NullDate(),EditSubClaim.Record.SubClaim_Person_Struct.CompanyEntryDay+ \" \"+ Substr(MSS_Claim_GetData.Claim_Struct.Claim_Struct.CompanyEntryHour,0,5),\"\")","type":"Text","functions":["If","NullDate","Substr"]}
{"text":"If(DateTimeToDate(TablePolicy_Object.List.Current.PolicyObject.EndDate)=NullDate(),\"\",DateTimeToDate(TablePolicy_Object.List.Current.PolicyObject.EndDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(TablePolicy_Object.List.Current.PolicyObject.StartDate)=NullDate(),\"\",DateTimeToDate(TablePolicy_Object.List.Current.PolicyObject.StartDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If (DateTimeToDate(TableTransactions.List.Current.Transactions.TransactionDate)=NullDate(),\"\",DateTimeToDate(TableTransactions.List.Current.Transactions.TransactionDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Length(Objects.Current.PASSAGEM.StartedBy) > 18, Substr(Objects.Current.PASSAGEM.StartedBy,0,18) + \"...\",Objects.Current.PASSAGEM.StartedBy)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Objects.Current.PASSAGEM.CreatedBy) > 18, Substr(Objects.Current.PASSAGEM.CreatedBy,0,18) + \"...\",Objects.Current.PASSAGEM.CreatedBy)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Abs(DiffMinutes(CurrDateTime(), GetScreenMonitoringDataControl.List.Current.ScreenMonitoringDataControl.SampleEnd)) <= (60 * 2), \n    Abs(DiffMinutes(CurrDateTime(), GetScreenMonitoringDataControl.List.Current.ScreenMonitoringDataControl.SampleEnd)),\n    Abs(DiffHours(CurrDateTime(), GetScreenMonitoringDataControl.List.Current.ScreenMonitoringDataControl.SampleEnd)))","type":"Decimal","functions":["If","Abs","DiffMinutes","CurrDateTime","DiffHours"]}
{"text":"If(Abs(DiffMinutes(CurrDateTime(), GetScreenMonitoringDataControl.List.Current.ScreenMonitoringDataControl.SampleEnd)) <= (60 * 2), \n    If(Abs(DiffMinutes(CurrDateTime(), GetScreenMonitoringDataControl.List.Current.ScreenMonitoringDataControl.SampleEnd)) = 1, \"minuto\", \"minutos\"),\n    \"horas\")\n","type":"Text","functions":["If","Abs","DiffMinutes","CurrDateTime"]}
{"text":"If(Length(trUsers.List.Current.PENHORAS_USER.OBS)>70,Substr(trUsers.List.Current.PENHORAS_USER.OBS,0,70)+\"...\",trUsers.List.Current.PENHORAS_USER.OBS)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDecimal(TextToDecimal(TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LevePPR, \",\", \".\"))), 2, \",\", \".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LevePPR, \",\", \".\")) + TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LeveMais, \",\", \".\"))), 2, \",\", \".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(If(OutputPlanoMensal.Current.OutputPlanoMensal.LeveMais = \"\", \"0\", OutputPlanoMensal.Current.OutputPlanoMensal.LeveMais)), 2, \",\", \".\") + \" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"FormatDecimal(TextToDecimal(Replace(DadosSimulacao.LeveSimulacao.TaxaRendibilidadeUni, \",\",\".\")), 2, \",\", \".\")","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"FormatDecimal(TextToDecimal(If(esquemaId = Entities.MrhTipoEsquema.P1, PremioBase, If(esquemaId = Entities.MrhTipoEsquema.P2, PremioExtra, PremioTotal))) - CustoApolice, 2, \",\", \".\") + \"â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","If"]}
{"text":"Concat(ParType,Substr(Concat(\"00000000\",VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroPoliza), Length(VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroPoliza),8)) ","type":"Text","functions":["Concat","Substr","Length"]}
{"text":"Concat(ParType,Substr(Concat(\"00000000\",VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroSiniestro), Length(VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroSiniestro),8)) ","type":"Text","functions":["Concat","Substr","Length"]}
{"text":"FormatDecimal(VarLifeProposal.LIFE_PROPOSAL.ContractPremium-TextToDecimal(Replace(VarLifeProposal.LIFE_PROPOSAL.RiskPremium,\",\",\".\")),2,\",\",\".\")+\" â‚¬\"","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"If(Length(ErrorTable.List.Current.ErrorsAndOccurencies.Msg) > 80, Substr(ErrorTable.List.Current.ErrorsAndOccurencies.Msg,0,79),ErrorTable.List.Current.ErrorsAndOccurencies.Msg)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\nIf(Length(DetailedErrorTable.List.Current.Log_Error.Message) > 50, Substr(DetailedErrorTable.List.Current.Log_Error.Message,0,49),DetailedErrorTable.List.Current.Log_Error.Message)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TblLogHeaderTable.List.Current.LogEntry.Method) > 38, Substr(TblLogHeaderTable.List.Current.LogEntry.Method,0,33) + \"(...)\", TblLogHeaderTable.List.Current.LogEntry.Method)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(IntegerToIdentifier(Members_Developers.Current.UserData.UserId) = NullIdentifier(),\"N/D\",\nIf(not  Members_Developers.Current.UserData.HasExpirationDate,\"-\",Members_Developers.Current.UserData.ExpirationDate)\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(Members_DM.Current.UserData.UserId) = NullIdentifier(),\"N/D\",\nIf(not Members_DM.Current.UserData.HasExpirationDate,\"-\",Members_DM.Current.UserData.ExpirationDate)\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(Members_Administrators.Current.UserData.UserId) = NullIdentifier(),\"N/D\",\nIf(not Members_Administrators.Current.UserData.HasExpirationDate,\"-\",Members_Administrators.Current.UserData.ExpirationDate)\n)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(PrintLayout, \n    TR_TimerSchedules.List.Current.TimerInfo.Name, \n    If(Length(TR_TimerSchedules.List.Current.TimerInfo.Name) > TimerNameMaxLength, \n        Substr(TR_TimerSchedules.List.Current.TimerInfo.Name,0, TimerNameMaxLength - 3) + \"...\", \n        TR_TimerSchedules.List.Current.TimerInfo.Name))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(\nLength(TR_WorkItems.List.Current.WORK_ITEM_STATUS.Name)<50,\nTR_WorkItems.List.Current.WORK_ITEM_STATUS.Name, \nSubstr(TR_WorkItems.List.Current.WORK_ITEM_STATUS.Name,0,50) + \"...\"\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"FormatDecimal(Round((PROJECT_CalculateTotals.Totals.ProjectValues.Actual / Max(1,PROJECT_CalculateTotals.Totals.ProjectValues.Expected)) * 100), 1, \",\", \".\") + \" %\"","type":"Text","functions":["FormatDecimal","Round","Max"]}
{"text":"\"Timesheet for week \" + WeekOfYear.Week + \", from \" + WeekDate + \" to \" + DateTimeToDate(AddDays(WeekDate, 6)) + If(NotMyTimeSheet, \" of \" + GetUser.List.Current.USER_MASTER.Name, \"\")","type":"Text","functions":["DateTimeToDate","AddDays","If"]}
{"text":"FormatDecimal(Round((TR_StoryList.List.Current.STORY.ActualEffort / Max(TR_StoryList.List.Current.STORY.EstimatedEffort,1) )*100), 1, \",\", \".\") + \" %\"","type":"Text","functions":["FormatDecimal","Round","Max"]}
{"text":"If(Length(ListOptionalCoverages.List.Current.VAB_PolicyChange_Coverage.Name) > 29, \n Substr(ListOptionalCoverages.List.Current.VAB_PolicyChange_Coverage.Name,0,26) + \"...\",\n ListOptionalCoverages.List.Current.VAB_PolicyChange_Coverage.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListCoverages.List.Current.VAB_PolicyChange_Coverage.Name) > 29, \n Substr(ListCoverages.List.Current.VAB_PolicyChange_Coverage.Name,0,26) + \"...\",\n ListCoverages.List.Current.VAB_PolicyChange_Coverage.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimStart(TrimEnd(ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentCampaignReference)) = \"\",\"-\",ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentCampaignReference)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentCampaignDescription)) = \"\", \"-\", ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentCampaignDescription )","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentProtocolReference)) = \"\",\"-\",ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentProtocolReference)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(TrimStart(TrimEnd(ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentProtocolDescription)) = \"\", \"-\", ProtocolEdit.Record.VAB_PolicyChange_Protocol.CurrentProtocolDescription )","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"\"<script>\n    var bysideWebcare_webcare_id = '\"+Trim(GetWebCareId.List.Current.Z_BRAND_CONFIG.WebCareId)+\"';\n    var bysideWebcare_lang = 'pt';\" +\nIf(EntityId <> NullIdentifier() and Site.SendClientInfoToClickServices,\n    \"var visitor_info = new Object();\n    visitor_info.nome='\"+Name+\"';\n    visitor_info.email ='\"+Email+\"';\n    visitor_info.identified_customer='\"+Phone+\"';\",\"\")+\n\"</script>\n<script src='https://webcare.byside.com/agent/byside_webcare.js' type='text/javascript'></script>\"+\nIf(EntityId <> NullIdentifier() and Site.SendClientInfoToClickServices,\"<script>bysideWebcareSetVisitorInfo(visitor_info);</script>\",\"\")","type":"Text","functions":["Trim","If","NullIdentifier"]}
{"text":"If(TrimStart(TrimEnd(Table_DocumentList.List.Current.VDDWS_Document_List.TransactionDescription)) <> \"\", \"(\"+ Table_DocumentList.List.Current.VDDWS_Document_List.TransactionDescription+ \")\",\"\") ","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(IntegerToIdentifier(ShowMessage.Record.VDIB_PraxisMessage_Get.SubjectTypeId) = NullIdentifier(), \"-\", If(IntegerToIdentifier(ShowMessage.Record.VDIB_PraxisMessage_Get.SubjectTypeId) <> Entities.Z_INBOX_SUBJECT_TYPE.OTHER, ShowMessage.Record.VDIB_PraxisMessage_Get.SubjectType, ShowMessage.Record.VDIB_PraxisMessage_Get.FreeSubjectType))\n","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(lrHistory.List.Current.VDIB_PraxisMessage_TaskHistoryGet.SubjectTypeId) = NullIdentifier(), \"-\", If(IntegerToIdentifier(lrHistory.List.Current.VDIB_PraxisMessage_TaskHistoryGet.SubjectTypeId) <> Entities.Z_INBOX_SUBJECT_TYPE.OTHER,\nlrHistory.List.Current.VDIB_PraxisMessage_TaskHistoryGet.SubjectType, lrHistory.List.Current.VDIB_PraxisMessage_TaskHistoryGet.FreeSubjectType))","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(DateTimeToDate(Table_Activity.List.Current.VDEB_InteractionShort_List.CreatedOn) = NullDate(),\"\", Table_Activity.List.Current.VDEB_InteractionShort_List.CreatedOn)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(IntegerToIdentifier(Table_Activity.List.Current.VDEB_InteractionShort_List.InteractionTypeId) = Entities.Z_INTERACTION_TYPE.ENTITY_CATEGORY,\nTable_Activity.List.Current.VDEB_InteractionShort_List.InteractionTypeDescription, If( Length(Table_Activity.List.Current.VDEB_InteractionShort_List.Interaction) > 37, Substr(Table_Activity.List.Current.VDEB_InteractionShort_List.Interaction, 0,34) + \"...\", Table_Activity.List.Current.VDEB_InteractionShort_List.Interaction))","type":"Text","functions":["If","IntegerToIdentifier","Length","Substr"]}
{"text":"If(IntegerToIdentifier(TableReceipts.List.Current.VDCPWS_ReceiptList.StatusId) = Entities.Z_RECEIPT_STATUS.AvisoPagamentoPorPagar and TextToDate(TableReceipts.List.Current.VDCPWS_ReceiptList.DueDate) < CurrDate(),\"!\",\"\") ","type":"Text","functions":["If","IntegerToIdentifier","TextToDate","CurrDate"]}
{"text":"If(IntegerToIdentifier(TableReceipts.List.Current.VDCPWS_ReceiptList.StatusId) = Entities.Z_RECEIPT_STATUS.AvisoPagamentoPorPagar and TextToDate(TableReceipts.List.Current.VDCPWS_ReceiptList.DueDate) < CurrDate(),TableReceipts.List.Current.VDCPWS_ReceiptList.ReceiptNumber,\" \" + TableReceipts.List.Current.VDCPWS_ReceiptList.ReceiptNumber)","type":"Text","functions":["If","IntegerToIdentifier","TextToDate","CurrDate"]}
{"text":"If(IntegerToIdentifier(SessionStateTermsDecode.ProposalId) <> NullIdentifier(),\"subscriÃ§Ã£o\", \"alteraÃ§Ã£o\")","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(tblReceiptList.List.Current.VDCPWS_ReceiptList.StatusId) = Entities.Z_RECEIPT_STATUS.AvisoPagamentoPorPagar and TextToDate(tblReceiptList.List.Current.VDCPWS_ReceiptList.DueDate) < CurrDate(),\"!\",\"\") ","type":"Text","functions":["If","IntegerToIdentifier","TextToDate","CurrDate"]}
{"text":"If(UserMaster_LoginInfo.VDUWS_UserMaster_LoginInfo.UserName <> \"\",\n Substr(ShowRecord_UserMaster.Record.VDUWS_UserMaster_LoginInfo.UserName,\n  Length(UsernamePrefix), \n  Length(ShowRecord_UserMaster.Record.VDUWS_UserMaster_LoginInfo.UserName)),\n \"-\")\n\n","type":"Text","functions":["If","Substr","Length"]}
{"text":"\" \" + If(IntegerToIdentifier(Entity.VDEB_Entity.EntityTypeId) = Entities.Z_ENTITY_TYPE.Company or IntegerToIdentifier(Entity.VDEB_Entity.MaritalStatusId) = NullIdentifier(),\n \"-\",\n Entity.VDEB_Entity.MaritalStatusLabel)","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(Entity.VDEB_Entity.EntityTypeId) = Entities.Z_ENTITY_TYPE.Company,\n \"-\",\n If(Length(Entity.VDEB_Entity.JobLabel)>21,\n  Substr(Entity.VDEB_Entity.JobLabel,0,21)+\"...\",\n  Entity.VDEB_Entity.JobLabel\n )\n)\n","type":"Text","functions":["If","IntegerToIdentifier","Length","Substr"]}
{"text":"If(Length(Table_PolicyList.List.Current.VDABWS_Policy_List.DriverName) > 25,\n Substr(Table_PolicyList.List.Current.VDABWS_Policy_List.DriverName,0,22) + \"...\",\nTable_PolicyList.List.Current.VDABWS_Policy_List.DriverName\n)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimStart(TrimEnd(Summary_Detail.Record.VDDWS_DocumentQuickDetail_Get.DocumentSendChannelDescription)) <> \"\", \"(\" + Summary_Detail.Record.VDDWS_DocumentQuickDetail_Get.DocumentSendChannelDescription + \")\",\"\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(IntegerToIdentifier(VDIB_Siganture_Get.Signature.VDIB_Signature.LogoId) <> NullIdentifier(),\"<table><tr><td><img src='\"+GetPaCmsSites.List.Current.PA_CMS_SITE.BaseURL+\"/VDEmail_Biz/PublicImageDownload.aspx?ImageId=\"+VDIB_Siganture_Get.Signature.VDIB_Signature.LogoId+\"'></td></tr></table>\"  ,\"\") + VDIB_Siganture_Get.Signature.VDIB_Signature.SignatureBody","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"\"â‚¬ \"+Substr(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO),0,Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO))-2)+\",\"+\nSubstr(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO),Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO))-2,Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO)))","type":"Text","functions":["Substr","TextToInteger","Length"]}
{"text":"If(TextToDate(LastSibs) = NullDate(), \"\", \"Ãšltima inserÃ§Ã£o: \" + Trim(LastSibs))","type":"Text","functions":["If","TextToDate","NullDate","Trim"]}
{"text":"If(trResources.List.Current.PA_CMS_FILEINFO.FileSize = 0, \"?KB\",\nFormatDecimal(TextToDecimal(If(trResources.List.Current.PA_CMS_FILEINFO.FileSize < 1024,\ntrResources.List.Current.PA_CMS_FILEINFO.FileSize,\n(trResources.List.Current.PA_CMS_FILEINFO.FileSize/1024))\n),1,\",\",\"\") + If(trResources.List.Current.PA_CMS_FILEINFO.FileSize < 1024,\n\"bytes\",\"KB\"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(erFileInfo.Record.PA_CMS_FILEINFO.FileSize <> 0,\nFormatDecimal(TextToDecimal(If(erFileInfo.Record.PA_CMS_FILEINFO.FileSize < 1024,\nerFileInfo.Record.PA_CMS_FILEINFO.FileSize,\n(erFileInfo.Record.PA_CMS_FILEINFO.FileSize/1024))\n),1,\",\",\"\") + If(erFileInfo.Record.PA_CMS_FILEINFO.FileSize < 1024,\n\"bytes\",\"KB\"), \"?KB\")","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(Length(ListOptionalCoverages.List.Current.VDSA_Coverage.Name) > 29, \n Substr(ListOptionalCoverages.List.Current.VDSA_Coverage.Name,0,26) + \"...\",\n ListOptionalCoverages.List.Current.VDSA_Coverage.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListCoverages.List.Current.VDSA_Coverage.Name) > 29, \n Substr(ListCoverages.List.Current.VDSA_Coverage.Name,0,26) + \"...\",\n ListCoverages.List.Current.VDSA_Coverage.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimStart(TrimEnd(Table_DocumentList2.List.Current.VDDWS_Document_List.TransactionDescription )) <> \"\", \"(\" + Table_DocumentList2.List.Current.VDDWS_Document_List.TransactionDescription + \")\",\"\")","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(DateTimeToDate(Table_InternalTransactionList.List.Current.VDT_TransactionListWS.ToDate) = NullDate(), \"\", DateTimeToDate(Table_InternalTransactionList.List.Current.VDT_TransactionListWS.ToDate))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(DateTimeToDate(Table_InternalTransactionList.List.Current.VDT_TransactionListWS.FromDate) = NullDate(),\"\",DateTimeToDate(Table_InternalTransactionList.List.Current.VDT_TransactionListWS.FromDate))\n\n\n\n","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(IntegerToIdentifier(VDEB_ExaminationAuto_Get.ExaminationAuto.VDABWS_ExaminationAuto.EntityAutoShopId) = NullIdentifier(),VDEB_ExaminationAuto_Get.ExaminationAuto.VDABWS_ExaminationAuto.ContactPhone,AutoShop.VDEB_EntityAutoshopEmailInfo.PhoneNumber) ","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":" If(IntegerToIdentifier(VDEB_ExaminationAuto_Get.ExaminationAuto.VDABWS_ExaminationAuto.EntityAutoShopId) = NullIdentifier(),ShowExamination.Record.VDABWS_ExaminationAuto.PostalCode+\"-\"+ShowExamination.Record.VDABWS_ExaminationAuto.PostalOrder+\" \"+ ShowExamination.Record.VDABWS_ExaminationAuto.PostalDescription,ShowExamination.Record.VDABWS_ExaminationAuto.AutoShopPostalCode+\"-\"+ShowExamination.Record.VDABWS_ExaminationAuto.AutoShopPostalOrder+\" \"+ ShowExamination.Record.VDABWS_ExaminationAuto.AutoShopPostalDescription)\n\n","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(IntegerToIdentifier(VDEB_ExaminationAuto_Get.ExaminationAuto.VDABWS_ExaminationAuto.EntityAutoShopId) = NullIdentifier(),If(ShowExamination.Record.VDABWS_ExaminationAuto.ExaminationAddress = \"\",\"-\",ShowExamination.Record.VDABWS_ExaminationAuto.ExaminationAddress),ShowExamination.Record.VDABWS_ExaminationAuto.AutoShopAddress) ","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(Length(tblCoverages.List.Current.VDSSAB_Matrix_Coverage.Name)>43,Substr(tblCoverages.List.Current.VDSSAB_Matrix_Coverage.Name,0,42) + \"...\",\ntblCoverages.List.Current.VDSSAB_Matrix_Coverage.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<td colspan=\"+Cells.List.Current.TableCell.NumberOfDescendats+\" width='\"+100*If(Cells.List.Current.TableCell.NumberOfDescendats>1,Cells.List.Current.TableCell.NumberOfDescendats,1)+\"' class='TableRecords_OddLine' align=center>\"+If(Length(Cells.List.Current.TableCell.Rule.Rule.Name)>6,Substr(Cells.List.Current.TableCell.Rule.Rule.Name,0,6)+\"...\",Cells.List.Current.TableCell.Rule.Rule.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<tr><td colspan=\"+Cells.List.Current.TableCell.NumberOfDescendats+\" width='\"+100*If(Cells.List.Current.TableCell.NumberOfDescendats>1,Cells.List.Current.TableCell.NumberOfDescendats,1)+\"' class='TableRecords_OddLine' align=center>\"+If(Length(Cells.List.Current.TableCell.Rule.Rule.Name)>6,Substr(Cells.List.Current.TableCell.Rule.Rule.Name,0,6)+\"...\",Cells.List.Current.TableCell.Rule.Rule.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetApplicationPlatformVersionById.List.Current.ApplicationBinary_2.Id = NullIdentifier() and ApplicationPlatformVersionEdit.Record.Application.BackofficeEspaceName <> \"\", \"Backoffice eSpace not found!\" + NewLine(), \"\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":"If(GetApplicationPlatformVersionById.List.Current.ApplicationBinary_3.Id = NullIdentifier(), \"Application Manifest not set! Must set entry eSpace.\" + NewLine(), \"\")","type":"Text","functions":["If","NullIdentifier","NewLine"]}
{"text":" If(Table_Users.List.Current.VDUB_RegisteredUsers.CreationDate = NullDate(),\"-\", DateTimeToDate(Table_Users.List.Current.VDUB_RegisteredUsers.CreationDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Table_Users.List.Current.VDUB_RegisteredUsers.LastLogin = NullDate(),\"-\",DateTimeToDate(Table_Users.List.Current.VDUB_RegisteredUsers.LastLogin))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"<SCRIPT language=javascript>\nvar currDates = '\"+SelectedDates +\"';\nvar customLink = '\"+CustomLink +\"';\nvar numberOfColumns = '\"+ NumberOfColumns +\"';\nvar selectedDayColor = '\"+ SelectedDayColor +\"';\nvar forceSpecialDaysLinks = \" + If(ForceSpecialDaysLinks, \"true\",\"false\") + \";\nvar selectSelected = \" + If(SelectSelected, \"true\",\"false\") + \";\nshow_yearly_calendar(\n'WebForm1.wt\" + InputWidgetName + \"', \n'\" + Day(StartDate)+ \"', \n'\" + Month(StartDate)+ \"', \n'\" + Year(StartDate)+ \"',\n'\" + Site.DateFormat + \"',\n'\" + Month(MaxDate) + \"-\" + Day(MaxDate) + \"-\" + Year(MaxDate) + \"',\n'\" + Month(MinDate) + \"-\" + Day(MinDate) + \"-\" + Year(MinDate) + \"', \nspecial_days,\nfalse,\n'CalendarDiv\" + YearlyCalendarSelectMultipleDates.RuntimeId + \"'\"+ \",\n'\" +  PrevFunc +\"',\n'\" + NextFunc + \"',\n'',\n'\" + If(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\n\" + If(ShowNavigationButtons, \"true\",\"false\") \n+ \");\n</SCRIPT>\"","type":"Text","functions":["If","Day","Month","Year","NullDate"]}
{"text":"\"<SCRIPT language=javascript>\nshow_calendar('WebForm1.wt\" + InputWidgetName + \"',\ndocument.WebForm1.wt\" + InputWidgetName + \".value.substr(8,2),\ndocument.WebForm1.wt\" + InputWidgetName + \".value.substr(5,2),\ndocument.WebForm1.wt\"+InputWidgetName+\".value.substr(0,4),\n'\" + Site.DateFormat + \"','\"\n+Month(MaxDate) +\"-\"+ Day(MaxDate) +\"-\"+ Year(MaxDate) +\n\"','\"\n+Month(MinDate) +\"-\"+ Day(MinDate) +\"-\"+ Year(MinDate) +\n\"',special_days,false,'CalendarDiv\" + YearlyCalendarSelectMultipleDates.RuntimeId + \"'\"+ \",'\" +  PrevFunc +\"','\" + NextFunc + \"','','\"+\nIf(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay))\n+\"');</SCRIPT>\"","type":"Text","functions":["Month","Day","Year","If","NullDate"]}
{"text":"Substr(ParticipantEmailTable.List.Current.PARTICIPANT_EMAIL.Body,0,100)+If(Length(ParticipantEmailTable.List.Current.PARTICIPANT_EMAIL.Body)>100,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(ParticipantNotesTable.List.Current.NOTE.Description,0,100)+If(Length(ParticipantNotesTable.List.Current.NOTE.Description)>100,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"GetPendingBootcamps.List.Current.BOOTCAMP.Code + \" - \" + \nTrimEnd(Substr(PendingBootcampsTable.List.Current.BOOTCAMP.Name,0,10)) + \"... \" + \n\"(\" + \nIf(GetPendingBootcamps.List.Current.BOOTCAMP.IsInHouse, \"In-house, \", \"\") +\nGetPendingBootcamps.List.Current.BOOTCAMP_LOCATION.Label + \")\"","type":"Text","functions":["TrimEnd","Substr","If"]}
{"text":"If(Length(TermConditionTable.List.Current.TERM_CONDITION.Description)>250,Substr(TermConditionTable.List.Current.TERM_CONDITION.Description,0,250)+\"...\",TermConditionTable.List.Current.TERM_CONDITION.Description)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ListRecords1.List.Current.CERTIFICATION_ACQUIRED.RevisionDate = NullDate(),\"\",\"Expires on<br>\" + DateTimeToDate(ListRecords1.List.Current.CERTIFICATION_ACQUIRED.RevisionDate))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"GetROLE_EXAM.List.Current.USER_MASTER.Name + If (Substr(GetROLE_EXAM.List.Current.USER_MASTER.Name,Length(GetROLE_EXAM.List.Current.USER_MASTER.Name)-1,1) = \"s\",\"'\",\"'s\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If(GetCustomerById.List.Current.Account.LastModifiedDate <> NullDate(),\n   DateTimeToDate(GetCustomerById.List.Current.Account.LastModifiedDate) ,\n    \"N/A\") \n","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(ToLower(GetCustomerById.List.Current.Account.CustomerAcquiredBy) = Site.AcquiredByDefault and Trim(GetCustomerById.List.Current.USER_MASTER.Name) <> \"\", GetCustomerById.List.Current.USER_MASTER.Name, If(ToLower(GetCustomerById.List.Current.Account.CustomerAcquiredBy) <> Site.AcquiredByDefault and Trim(GetCustomerById.List.Current.Account.CustomerAcquiredBy) <> \"\", GetCustomerById.List.Current.Account.CustomerAcquiredBy, \"N/A\"))","type":"Text","functions":["If","ToLower","Trim"]}
{"text":"Substr(ApplicationsList.List.Current.Description, 0, 163) + If(Length(ApplicationsList.List.Current.Description)> 163, \"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"<script type='text/javascript'>\n//Image alt mandatory\nCKEDITOR.on( 'dialogDefinition', function( ev ) {\n    // Take the dialog name and its definition from the event data.\n    var dialogName = ev.data.name;\n    var dialogDefinition = ev.data.definition;\n\n    if ( dialogName == 'image' )\n    {\n\n      setTimeout(function(){\n          CKEDITOR.dialog.getCurrent().getContentElement('info', 'txtAlt').required=true;\n          CKEDITOR.dialog.getCurrent().getContentElement('info', 'txtAlt').validate = CKEDITOR.dialog.validate.notEmpty('Please enter an Alternative Text!');\n        },1000);\n    }\n\n  });\n\n//Output format\nCKEDITOR.on( 'instanceReady', function( ev )\n    {\n        ev.editor.dataProcessor.writer.indentationChars = ' ';\n    });\n\n//Edit Content CSS\nCKEDITOR.config.allowedContent = true;\nCKEDITOR.config.contentsCss = '\" + \nIf(Index(Replace(GetFolder.List.Current.FOLDER.Path,\"/\",\"\\\"),Replace(Site.RootPath_Network,\"/\",\"\\\"))=0,\n   Site.CssUrl_Network,\n If(Index(Replace(FolderPath,\"/\",\"\\\"),Replace(Site.RootPath_CorporateSite,\"/\",\"\\\"))=0 or Index(FolderPath,Site.DefaultSiteContentsPath)=0 ,\n   Site.CssUrl_CorporateSite,\n   Site.CssUrl_Default)) + \"';\n\n//Code Mirror\nCKEDITOR.config.extraPlugins = 'codemirror';\nCKEDITOR.config.codemirror = {\n    // Set this to the theme you wish to use (codemirror themes)\n    theme: 'default',\n    // Whether or not you want to show line numbers\n    lineNumbers: true,\n    // Whether or not you want to use line wrapping\n    lineWrapping: true,\n    // Whether or not you want to highlight matching braces\n    matchBrackets: true,\n    // Whether or not you want tags to automatically close themselves\n    autoCloseTags: true,\n    // Whether or not you want Brackets to automatically close themselves\n    autoCloseBrackets: true,\n    // Whether or not to enable search tools, CTRL+F (Find), CTRL+SHIFT+F (Replace), CTRL+SHIFT+R (Replace All), CTRL+G (Find Next), CTRL+SHIFT+G (Find Previous)\n    enableSearchTools: true,\n    // Whether or not you wish to enable code folding (requires 'lineNumbers' to be set to 'true')\n    enableCodeFolding: true,\n    // Whether or not to enable code formatting\n    enableCodeFormatting: true,\n    // Whether or not to automatically format code should be done when the editor is loaded\n    autoFormatOnStart: true,\n    // Whether or not to automatically format code should be done every time the source view is opened\n    autoFormatOnModeChange: true,\n    // Whether or not to automatically format code which has just been uncommented\n    autoFormatOnUncomment: true,\n    // Whether or not to highlight the currently active line\n    highlightActiveLine: true,\n    // Define the language specific mode 'htmlmixed' for html including (css, xml, javascript), 'application/x-httpd-php' for php mode including html, or 'text/javascript' for using java script only\n    mode: 'htmlmixed',\n    // Whether or not to show the search Code button on the toolbar\n    showSearchButton: true,\n    // Whether or not to show Trailing Spaces\n    showTrailingSpace: true,\n    // Whether or not to highlight all matches of current word/selection\n    highlightMatches: true,\n    // Whether or not to show the format button on the toolbar\n    showFormatButton: true,\n    // Whether or not to show the comment button on the toolbar\n    showCommentButton: true,\n    // Whether or not to show the uncomment button on the toolbar\n    showUncommentButton: true,\n    // Whether or not to show the showAutoCompleteButton button on the toolbar\n    showAutoCompleteButton: true\n};\n</script>\"","type":"Text","functions":["If","Index","Replace"]}
{"text":"\"Expires in \" + DiffDays(CurrDate(),DateTimeToDate(TextToDate(CommunityLicenseList.List.Current.LicensesList.LicenseEndDate))) + \" day\" + If(DiffDays(CurrDate(),DateTimeToDate(TextToDate(CommunityLicenseList.List.Current.LicensesList.LicenseEndDate))) < 1,\"s\",\"\")","type":"Text","functions":["DiffDays","CurrDate","DateTimeToDate","TextToDate","If"]}
{"text":"If(Length(ContentTable.List.Current.ContentList.ContentName) > 60, Substr(ContentTable.List.Current.ContentList.ContentName,0,60) + \"...\", ContentTable.List.Current.ContentList.ContentName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ContentTable.List.Current.ContentList.ContentName) > 80, Substr(ContentTable.List.Current.ContentList.ContentName,0,80) + \"...\", ContentTable.List.Current.ContentList.ContentName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<h5>\"+ If( Index(ContentTitle, \"-\") = Length(ContentTitle)-1, Replace(ContentTitle,\" -\",\"\"), ContentTitle )  + \"</h5>\"","type":"Text","functions":["If","Index","Length","Replace"]}
{"text":"If(DealReg.List.Current.CURRENCY2.Code <> \"$\",\n\nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(OpportunityTotal,0,\"\",\".\"),FormatDecimal(OpportunityTotal,0,\"\",\",\")) +\" \" + \nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code) ,\n\nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code)\n+\" \" + \nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(OpportunityTotal,0,\"\",\".\"),FormatDecimal(OpportunityTotal,0,\"\",\",\")))","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(DealReg.List.Current.CURRENCY2.Code <> \"$\",\n\nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\")) +\" \" + \nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code) ,\n\nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code)\n+\" \" + \nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\")))","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(DealReg.List.Current.CURRENCY2.Code <> \"$\",\n\nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\")) +\" \" + \nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code) ,\n\nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code)\n+\" \" + \nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\")))","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(DealReg.List.Current.CURRENCY2.Code <> \"$\",\n\nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")) +\" \" + \nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code) ,\n\nIf( Length(DealReg.List.Current.CURRENCY2.Code)=0,\"â‚¬\",DealReg.List.Current.CURRENCY2.Code)\n+\" \" + \nIf( DealReg.List.Current.CURRENCY2.Code=\"â‚¬\" or Length(DealReg.List.Current.CURRENCY2.Code)=0,\nFormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(DealReg.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")))","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate<>NullDate(),\"Expired on \" + DateTimeToDate(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate<>NullDate(),\"Expires on \" + DateTimeToDate(trDeals.List.Current.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals.List.Current.Text_2.Value <> \"$\",\n\nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value) ,\n\nIf( Length(trDeals.List.Current.Text_2.Value)=0,\"â‚¬\",trDeals.List.Current.Text_2.Value)\n+\" \" + \nIf( trDeals.List.Current.Text_2.Value=\"â‚¬\" or Length(trDeals.List.Current.Text_2.Value)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trDeals2.List.Current.DEAL_REGISTRATION.ExpireDate<>NullDate(),\"Expired on \" + DateTimeToDate(trDeals2.List.Current.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals2.List.Current.DEAL_REGISTRATION.ExpireDate<>NullDate(),\"Expires on \" + DateTimeToDate(trDeals2.List.Current.DEAL_REGISTRATION.ExpireDate),\"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(trDeals2.List.Current.CURRENCY2.Symbol <> \"$\",\n\nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol) ,\n\nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol)\n+\" \" + \nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trDeals2.List.Current.CURRENCY2.Symbol <> \"$\",\n\nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol) ,\n\nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol)\n+\" \" + \nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.OSPartnerServices,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(trDeals2.List.Current.CURRENCY2.Symbol <> \"$\",\n\nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")) +\" \" + \nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol) ,\n\nIf( Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",trDeals2.List.Current.CURRENCY2.Symbol)\n+\" \" + \nIf( trDeals2.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(trDeals2.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals2.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\"))\n)\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"DateTimeToDate(AddDays(CommunityCustomEditionTable.List.Current.COMMUNITY_CUSTOM_EDITION.CreatedOn,TextToInteger(CommunityCustomEditionTable.List.Current.COMMUNITY_CUSTOM_EDITION.Term)))","type":"Date","functions":["DateTimeToDate","AddDays","TextToInteger"]}
{"text":"If(GetRegDeals.List.Current.CURRENCY2.Symbol <> \"$\",\n\nIf( GetRegDeals.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\")) +\" \" + \nIf( Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY2.Symbol) ,\n\nIf( Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY2.Symbol)\n+\" \" + \nIf( GetRegDeals.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.TrainingTotal,0,\"\",\",\"))\n)\n\n\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(GetRegDeals.List.Current.CURRENCY2.Symbol <> \"$\",\n\nIf( GetRegDeals.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\")) +\" \" + \nIf( Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY2.Symbol) ,\n\nIf( Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\"â‚¬\",GetRegDeals.List.Current.CURRENCY2.Symbol)\n+\" \" + \nIf( GetRegDeals.List.Current.CURRENCY2.Symbol=\"â‚¬\" or Length(GetRegDeals.List.Current.CURRENCY2.Symbol)=0,\nFormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\".\"),FormatDecimal(trDeals.List.Current.DEAL_REGISTRATION.DealAmount,0,\"\",\",\"))\n)\n\n\n","type":"Text","functions":["If","Length","FormatDecimal"]}
{"text":"If(Index(GetMessageSender.List.Current.USER_MASTER.Name,\" \") = -1,GetMessageSender.List.Current.USER_MASTER.Name,Substr(GetMessageSender.List.Current.USER_MASTER.Name,0,Index(GetMessageSender.List.Current.USER_MASTER.Name,\" \")))+ \"'s\"","type":"Text","functions":["If","Index","Substr"]}
{"text":"Substr(POEmailsList.List.Current.POEMAIL.From,0,45)\n+If( Length(POEmailsList.List.Current.POEMAIL.From)>45,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If( Length(POList.List.Current.PURCHASE_ORDER.ProposalName) < 164,\nPOList.List.Current.PURCHASE_ORDER.Date +\" - \"+ POList.List.Current.PURCHASE_ORDER.ProposalName + If(POList.List.Current.PURCHASE_ORDER.ProposalCode<>\"\",\" (\"+POList.List.Current.PURCHASE_ORDER.ProposalCode+\")\",\"\"),\nPOList.List.Current.PURCHASE_ORDER.Date +\" - \"+\nSubstr(POList.List.Current.PURCHASE_ORDER.ProposalName,0,164)+\"...\"  + If(POList.List.Current.PURCHASE_ORDER.ProposalCode<>\"\",\" (\"+POList.List.Current.PURCHASE_ORDER.ProposalCode+\")\",\"\")  )\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(TableRecords1.List.Current.CustomerSearchStrut.AccountName) > 30,\n\tSubstr(TableRecords1.List.Current.CustomerSearchStrut.AccountName,0,30) + \"...\",\n\tTableRecords1.List.Current.CustomerSearchStrut.AccountName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(POList2.List.Current.PURCHASE_ORDER.ProposalName) < 164,\nPOList2.List.Current.PURCHASE_ORDER.Date +\" - \"+ POList2.List.Current.PURCHASE_ORDER.ProposalName + If(POList2.List.Current.PURCHASE_ORDER.ProposalCode<>\"\",\" (\"+POList2.List.Current.PURCHASE_ORDER.ProposalCode+\")\",\"\"),\nPOList2.List.Current.PURCHASE_ORDER.Date +\" - \"+\nSubstr(POList2.List.Current.PURCHASE_ORDER.ProposalName,0,164)+\"...\"  + If(POList2.List.Current.PURCHASE_ORDER.ProposalCode<>\"\",\" (\"+POList2.List.Current.PURCHASE_ORDER.ProposalCode+\")\",\"\")  )\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(IntegerToIdentifier(GetProjectInfo.List.Current.Integer.Value)=NullIdentifier(), \"\",\n\"\n<div class=\"\"ImageIcon mobile-notdisplay\"\">\n<span class=\"\" \"+\n    If(IntegerToIdentifier(GetProjectInfo.List.Current.Integer.Value) = Entities.PROJECT_TYPE.Mobile, \n        \"osicon-phone\", \n        \"osicon-desktop\")+\" \"\"></i>\n</span>\n</div>\"\n)\n","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(Length(ForgeProjectList.List.Current.Project_List_New.Name) > 30, Substr(ForgeProjectList.List.Current.Project_List_New.Name,0,30) + \"...\", ForgeProjectList.List.Current.Project_List_New.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(HighlightList.List.Current.Name) > 30, Substr(HighlightList.List.Current.Name,0,30) + \"...\", HighlightList.List.Current.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Infrastructure.Infrastructure.ExpirationDate=NullDate(),0,\nDiffDays(CurrDate(),Infrastructure.Infrastructure.ExpirationDate))","type":"Integer","functions":["If","NullDate","DiffDays","CurrDate"]}
{"text":"If(UsersList.List.Current.USER_MASTER.FirstName = \"\" or UsersList.List.Current.USER_MASTER.FirstName = \"\", ToUpper(Substr(UsersList.List.Current.USER_MASTER.Name,0,2)), ToUpper(Substr(UsersList.List.Current.USER_MASTER.FirstName,0,1) + Substr(UsersList.List.Current.USER_MASTER.LastName,0,1)))","type":"Text","functions":["If","ToUpper","Substr"]}
{"text":"If(InfrastructuresLR.List.Current.Infrastructure.InfrastructureStatusId = Entities.InfrastructureStatus.Ended,0,If((DiffDays(CurrDateTime(),InfrastructuresLR.List.Current.Infrastructure.ExpirationDate) < 0),30,DiffDays(CurrDateTime(),InfrastructuresLR.List.Current.Infrastructure.ExpirationDate) - 1))","type":"Integer","functions":["If","DiffDays","CurrDateTime"]}
{"text":"If(HideContextInTitle and Index(GetPostInfo.List.Current.PostText.Subject,\"] \") <> -1, \nSubstr(GetPostInfo.List.Current.PostText.Subject,Index(GetPostInfo.List.Current.PostText.Subject,\"] \") + 2,Length(GetPostInfo.List.Current.PostText.Subject)),\nGetPostInfo.List.Current.PostText.Subject)","type":"Text","functions":["If","Index","Substr","Length"]}
{"text":"\"<iframe src=\"\"\" + Site.IPP_URL + Page + \"?\" +\n  If(Name1 = \"\", \"\", Name1 + \"=\" + EncodeUrl(Value1)) +\n  If(Name2 = \"\", \"\", \"&\" + Name2 + \"=\" + EncodeUrl(Value2)) +\n  If(Name3 = \"\", \"\", \"&\" + Name3 + \"=\" + EncodeUrl(Value3)) +\n  \"&ISVPortalURL=\" + EncodeUrl(GetBookmarkableURL()) + \n  \"&Token=\" + EncodeUrl(CreateToken.Token) + \"\"\" width=\"\"100%\"\" height=\"\"800px\"\" frameborder=\"\"0\"\">\n  <p>Your browser does not support iframes.</p>\n</iframe>\"","type":"Text","functions":["If","EncodeUrl","GetBookmarkableURL"]}
{"text":"If(TextToIntegerValidate(GetNumberUsersForInfrastructure.Value), TextToInteger(GetNumberUsersForInfrastructure.Value) - GetNumberAvailableNamedUsersForISV.NumberOfAvailableUsers, GetNumberUsersForInfrastructure.Value)","type":"Text","functions":["If","TextToIntegerValidate","TextToInteger"]}
{"text":"Substr(ListFolderDocuments_Crawler.List.Current.DOCUMENT.Description, 0, 200) + If(Length(ListFolderDocuments_Crawler.List.Current.DOCUMENT.Description)>200,\" (...)\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(GetOrdersByStatus.List.Current.OrdersTable.Opportunity)>40,\nSubstr(GetOrdersByStatus.List.Current.OrdersTable.Opportunity,0,40)+\"...\",\nGetOrdersByStatus.List.Current.OrdersTable.Opportunity)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EnvironmentInfo.List.Current.DashboardEnvInfo.SUsValue = \"Unlimited\",\nEnvironmentInfo.List.Current.DashboardEnvInfo.SUsValue,\nFormatDecimal(TextToDecimal(EnvironmentInfo.List.Current.DashboardEnvInfo.SUsValue),0,\"\",\" \"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(EnvironmentInfo.List.Current.DashboardEnvInfo.AOsValue = \"Unlimited\",\nEnvironmentInfo.List.Current.DashboardEnvInfo.AOsValue,\nFormatDecimal(TextToDecimal(EnvironmentInfo.List.Current.DashboardEnvInfo.AOsValue),0,\"\",\" \"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(EnvironmentInfo.List.Current.DashboardEnvInfo.UsersValue = \"Unlimited\",\nEnvironmentInfo.List.Current.DashboardEnvInfo.UsersValue,\nFormatDecimal(TextToDecimal(EnvironmentInfo.List.Current.DashboardEnvInfo.UsersValue),0,\"\",\" \"))","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"If(Length(EnvironmentInfo.List.Current.DashboardEnvInfo.EnvironmentName) > 30,\nSubstr(EnvironmentInfo.List.Current.DashboardEnvInfo.EnvironmentName,0,26) + \"...\",\nEnvironmentInfo.List.Current.DashboardEnvInfo.EnvironmentName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"DateTimeToDate(AddDays(ShowRecordRequest.Record.ChangeLog.Created, TextToInteger(ShowRecordRequest.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)-1))","type":"Date","functions":["DateTimeToDate","AddDays","TextToInteger"]}
{"text":"\"(\" + IntegerToText(DiffDays(CurrDate(), AddDays(ShowRecordRequest.Record.ChangeLog.Created,TextToInteger(ShowRecordRequest.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) -1)","type":"Text","functions":["IntegerToText","DiffDays","CurrDate","AddDays","TextToInteger"]}
{"text":"FormatDateTime(AddDays(CurrDate(),EditRequestLicense.Record.RequestLicenseOld.LicenseTermDays), \"dd MMMM yyyy\")","type":"Text","functions":["FormatDateTime","AddDays","CurrDate"]}
{"text":"FormatDateTime(AddDays(CurrDate(),EditLicenseRequest.Record.RequestLicenseOld.LicenseTermDays), \"dd MMMM yyyy\")","type":"Text","functions":["FormatDateTime","AddDays","CurrDate"]}
{"text":"FormatDateTime(AddDays(CurrDate(),EditLicenseRequest.Record.LicenseRequestOld.LicenseTermDays), \"dd MMMM yyyy\")","type":"Text","functions":["FormatDateTime","AddDays","CurrDate"]}
{"text":"DateTimeToDate(If(StudentTable.List.Current.Enrollment.PreEnrollmentDate<>NullDate(), StudentTable.List.Current.Enrollment.PreEnrollmentDate, StudentTable.List.Current.User.Creation_Date))","type":"Date","functions":["DateTimeToDate","If","NullDate"]}
{"text":"If(Length(TR_ActivityLogs.List.Current.ActivityLog.Object) <= 40, TR_ActivityLogs.List.Current.ActivityLog.Object, Substr(TR_ActivityLogs.List.Current.ActivityLog.Object,0,37) + \"...\")\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(LicensingCustomEditionLicenseTemplateTermEdit.Record.Text.Text=\"\",\"\",If(LicensingCustomEditionLicenseTemplateTermEdit.Record.License.IsTermUnlimited,\"Unlimited\",\"Expires on \"+DateTimeToDate(AddDays(CurrDate(), TextToInteger(LicensingCustomEditionLicenseTemplateTermEdit.Record.Text.Text)))))","type":"Text","functions":["If","DateTimeToDate","AddDays","CurrDate","TextToInteger"]}
{"text":"If(Length(TableRecordsSupportTypes.List.Current.Licensing_SupportType.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsSupportTypes.List.Current.Licensing_SupportType.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsSupportTypes.List.Current.Licensing_SupportType.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsSupportTypes.List.Current.Licensing_SupportType.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsLicenses.List.Current.Account.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsLicenses.List.Current.Account.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsLicenses.List.Current.Account.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsCompanies.List.Current.Account.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsCompanies.List.Current.Account.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsCompanies.List.Current.Account.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsCompanies.List.Current.Account.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsAgreements.List.Current.Licensing_AgreementFile.Description)>Site.Help_TrimListMain,\"<span title='\" + EncodeHtml(TableRecordsAgreements.List.Current.Licensing_AgreementFile.Description) + \"'>\",\"\")","type":"Text","functions":["If","Length","EncodeHtml"]}
{"text":"Substr(TableRecordsAgreements.List.Current.Licensing_AgreementFile.Description,0,Site.Help_TrimListMain) + If(Length(TableRecordsAgreements.List.Current.Licensing_AgreementFile.Description)>Site.Help_TrimListMain,\"...\", \"\")  ","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TableRecordsRequests.List.Current.Account.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsRequests.List.Current.Account.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsRequests.List.Current.Account.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecordsHubServers.List.Current.Account.Name) > Site.Help_TrimListSecondary, Substr(TableRecordsHubServers.List.Current.Account.Name, 0, Site.Help_TrimListSecondary) + \"...\", TableRecordsHubServers.List.Current.Account.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"DateTimeToDate(AddDays(ShowRecordRequest2.Record.ChangeLog.Created, TextToInteger(ShowRecordRequest2.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)-1))","type":"Date","functions":["DateTimeToDate","AddDays","TextToInteger"]}
{"text":"\"(\" + IntegerToText(DiffDays(CurrDate(), AddDays(ShowRecordRequest2.Record.ChangeLog.Created,TextToInteger(ShowRecordRequest2.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) -1)","type":"Text","functions":["IntegerToText","DiffDays","CurrDate","AddDays","TextToInteger"]}
{"text":"DateTimeToDate(AddDays(ChangeLogShow.Record.ChangeLog.Created,TextToInteger(ChangeLogShow.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)))","type":"Date","functions":["DateTimeToDate","AddDays","TextToInteger"]}
{"text":"\"(\" + DiffDays(CurrDate(), AddDays(ChangeLogShow.Record.ChangeLog.Created,TextToInteger(ChangeLogShow.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) + \")\"","type":"Text","functions":["DiffDays","CurrDate","AddDays","TextToInteger"]}
{"text":"If(IntegerToIdentifier(GetProjectInfo.List.Current.Integer_2.Value)=NullIdentifier(), \"\",\n\"\n<div class=\"\"ImageIcon\"\">\n<span class=\"\" \"+\n    If(IntegerToIdentifier(GetProjectInfo.List.Current.Integer_2.Value) = Entities.PROJECT_TYPE.Mobile, \n        \"osicon-phone\", \n        \"osicon-desktop\")+\" \"\"></i>\n</span>\n</div>\"\n)\n","type":"Text","functions":["If","IntegerToIdentifier","NullIdentifier"]}
{"text":"If(Length(ChapterTable.List.Current.ChapterContentLocale.Description) > 50, Substr(ChapterTable.List.Current.ChapterContentLocale.Description, 0, 47) + \"...\", ChapterTable.List.Current.ChapterContentLocale.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ProjectTable.List.Current.Project.Description) > 50, Substr(ProjectTable.List.Current.Project.Description, 0, 50) + \"...\", ProjectTable.List.Current.Project.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DocumentsTable.List.Current.Document.Description) > 50, Substr(DocumentsTable.List.Current.Document.Description, 0, 50) + \"...\", DocumentsTable.List.Current.Document.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script type='text/javascript'>\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n    console.log(file);\n    console.log(file.name);    \n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val(file.name);\n        console.log('saveFileName() - filename changed');\n    }\n}\n\nfunction uploadFile() {\n    NProgress.start();\n\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n\n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n        console.log('uploadFile() - filename changed');\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + CaseId_Hash + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + FormParametersDate + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + FormParametersDate + \"T000000Z');\n        fd.append('Policy', '\" + PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    NProgress.done();\n}\n</script>\"","type":"Text","functions":["Replace","DateTimeToText","CurrDateTime"]}
{"text":"\"<script type='text/javascript'>\nvar alreadyUploaded = false;\n$('#\" + Upload.Id + \"').change(function() {\n    alreadyUploaded = false;\n});\n\nfunction uploadFile() {\n\n\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n\n    if (file !== undefined && file !== null && !alreadyUploaded) {\n        NProgress.start();\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + EncodeUrl(CaseGUID) + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + FormParametersDate + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + FormParametersDate + \"T000000Z');\n        fd.append('Policy', '\" + PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    alreadyUploaded = true;\n    $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n</script>\"","type":"Text","functions":["Replace","DateTimeToText","CurrDateTime","EncodeUrl"]}
{"text":"\"<script type='text/javascript'>\nvar alreadyUploaded = false;\n$('#\" + Upload1.Id + \"').change(function() {\n    alreadyUploaded = false;\n});\n\n\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload1.Id + \"').files[0]; \n    if (file !== undefined && file !== null) {\n        $('#\" + FileNameInput.Id + \"').val(file.name);\n    }\n}\n\nfunction uploadFile() {\n    var file = document.getElementById('\"+Upload1.Id+\"').files[0];\n\n    if (file !== undefined && file !== null && !alreadyUploaded) {\n        NProgress.start();\n        var filename = '\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name;\n        \n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + EncodeUrl(CaseGUID) + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + GetFormParameters.Date + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + GetFormParameters.Date + \"T000000Z');\n        fd.append('Policy', '\" + GetFormParameters.PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + GetFormParameters.Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', function(evt){ uploadComplete(filename); }, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmit.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(filename) {\n    NProgress.done();\n    alreadyUploaded = true;\n    $('#\" + FileNameWithTimestampInput.Id + \"').val(filename);\n    $('#\" + hiddenSubmit.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n</script>\"","type":"Text","functions":["Replace","DateTimeToText","CurrDateTime","EncodeUrl"]}
{"text":"\"<script type='text/javascript'>\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload1.Id + \"').files[0]; \n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val(file.name);\n        console.log('saveFileName() - filename changed');\n    }\n}\n\nfunction uploadFile() {\n    NProgress.start();\n\n    var file = document.getElementById('\"+Upload1.Id+\"').files[0];\n\n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + Case_Hash.CaseId_Hash + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + GetFormParameters.Date + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + GetFormParameters.Date + \"T000000Z');\n        fd.append('Policy', '\" + GetFormParameters.PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + GetFormParameters.Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmit.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    $('#\" + hiddenSubmit.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    NProgress.done();\n}\n</script>\"","type":"Text","functions":["Replace","DateTimeToText","CurrDateTime"]}
{"text":"ListComments.List.Current.AuthorName + \" on \" + \nDateTimeToDate(ListComments.List.Current.CreatedAt) + \" \" + FormatText(Hour(ListComments.List.Current.CreatedAt), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListComments.List.Current.CreatedAt), 2, 2, True, \"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(Length(ObservationsTable.List.Current.AbnormalObservation.Observation)>15,Substr(ObservationsTable.List.Current.AbnormalObservation.Observation,0,12)+\"...\",ObservationsTable.List.Current.AbnormalObservation.Observation) ","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(StockListTable.List.Current.StockList_list.IsolatorName+\" \"+StockListTable.List.Current.StockList_list.LocationName)>=20,Substr(StockListTable.List.Current.StockList_list.IsolatorName+\" \"+StockListTable.List.Current.StockList_list.LocationName,0,14)+\"..\",StockListTable.List.Current.StockList_list.IsolatorName+\" \"+StockListTable.List.Current.StockList_list.LocationName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrders.DateOfBirth <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrders.DateOfBirth) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrders.DateOfBirth, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth_Old <> \"\" and TextToDate(BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth_Old) <> NullDate(), BizTalkOrderTableRecord.BizTalkOrderDifferences.DateOfBirth_Old, \"-\")","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"If(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth) <> \"\" and TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth) <> NullDate(), GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth, \"-\")","type":"Text","functions":["If","Trim","TextToDate","NullDate"]}
{"text":"If(Trim(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth_Old) <> \"\" and TextToDate(GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth_Old) <> NullDate(), GetBizTalkOrderDifference.BizTalkOrdersDiffs.BizTalkOrderDifferences_Raw.DateOfBirth_Old, \"-\")","type":"Text","functions":["If","Trim","TextToDate","NullDate"]}
{"text":"If(Length(InventoryTable.List.Current.Inventory.Comment)>50,Substr(InventoryTable.List.Current.Inventory.Comment,0,50)+\"...\",InventoryTable.List.Current.Inventory.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(ProtocolTable.List.Current.Protocol.ProtocolDescription,0,30)+If(Length(ProtocolTable.List.Current.Protocol.ProtocolDescription)>30,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(BizTalkOrdersTable.List.Current.BCOrders.BizTalkOrder_CustomerName) > 15, Substr(BizTalkOrdersTable.List.Current.BCOrders.BizTalkOrder_CustomerName,0,12) + \"...\", BizTalkOrdersTable.List.Current.BCOrders.BizTalkOrder_CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SPShippingOrderGroupList.List.Current.SAPShippingOrders.Customer) > 40, Substr(SPShippingOrderGroupList.List.Current.SAPShippingOrders.Customer,0,37) + \"...\", SPShippingOrderGroupList.List.Current.SAPShippingOrders.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer) > 10, Substr(SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer,0,8) + \"...\", SAPShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes) > 15, Substr(ShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes,0,12) + \" ...\", ShippingOrderGroupTable.List.Current.SAPShippingOrders.Notes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer) > 15, Substr(ShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer,0,12) + \"...\", ShippingOrderGroupTable.List.Current.SAPShippingOrders.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(SpecialOrdersTable.List.Current.SAPShippingOrders.Customer) > 40, Substr(SpecialOrdersTable.List.Current.SAPShippingOrders.Customer,0,37) + \"...\", SpecialOrdersTable.List.Current.SAPShippingOrders.Customer)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName) > 10, Substr(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName,0,8) + \"...\", BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old) > 10, Substr(BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old,0,8) + \"...\", BizTalkOrderTable.List.Current.BizTalkOrderDifferences.CustomerName_Old)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(UnassignedTasksReportTable.List.Current.UnassignedTasksReport.UnassignedTasksReportList) > 50, \nSubstr(UnassignedTasksReportTable.List.Current.UnassignedTasksReport.UnassignedTasksReportList,0,47)+\"...\",UnassignedTasksReportTable.List.Current.UnassignedTasksReport.UnassignedTasksReportList)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script language=javascript>\nvar currDates = '\"+SelectedDates +\"';\nvar customLink = '\"+CustomLink +\"';\nvar numberOfColumns = '\"+ NumberOfColumns +\"';\nvar selectedDayColor = '\"+ SelectedDayColor +\"';\nvar forceSpecialDaysLinks = \" + If(ForceSpecialDaysLinks, \"true\",\"false\") + \";\nvar selectSelected = \" + If(SelectSelected, \"true\",\"false\") + \";\nshow_yearly_calendar(\n'WebForm1.\" + InputWidgetId + \"', \n'\" + Day(StartDate)+ \"', \n'\" + Month(StartDate)+ \"', \n'\" + Year(StartDate)+ \"',\n'\" + Site.DateFormat + \"',\n'\" + Month(MaxDate) + \"-\" + Day(MaxDate) + \"-\" + Year(MaxDate) + \"',\n'\" + Month(MinDate) + \"-\" + Day(MinDate) + \"-\" + Year(MinDate) + \"', \nspecial_days,\nfalse,\n'CalendarDiv\" + YearlyCalendar.RuntimeId + \"'\"+ \",\n'',\n'',\n'',\n'\" + If(FirstWeekDay = NullDate(),\"\", Month(FirstWeekDay) +\"-\"+ Day(FirstWeekDay) +\"-\"+ Year(FirstWeekDay)) + \"',\n\" + If(ShowNavigationButtons, \"true\",\"false\") \n+ \");\n</SCRIPT>\"","type":"Text","functions":["If","Day","Month","Year","NullDate"]}
{"text":"If(Length(InventoryTable.List.Current.Inventory.Comment)>100,Substr(InventoryTable.List.Current.Inventory.Comment,0,100)+\"...\",InventoryTable.List.Current.Inventory.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(Shipments.List.Current.ShipmentList.RequestDescription,0,100)+If(Length(Shipments.List.Current.ShipmentList.RequestDescription)>100,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.Address1)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.Address1,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.City)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.City,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.City)) > 0,\", \",\"\") + If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.State)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.State,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.State)) > 0,\" \",\"\") + If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.ZipCode)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.ZipCode,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.ZipCode)) > 0,\",  \",\"\") + If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.Country)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.Country,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetLTMUserRequestById.List.Current.LTMUserRequest.Address2)) > 0,GetLTMUserRequestById.List.Current.LTMUserRequest.Address2,\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(ShipmentsTable.List.Current.ShipmentsLists.ShipperNotes)> 30 , Substr(ShipmentsTable.List.Current.ShipmentsLists.ShipperNotes,0,27)+\"...\",ShipmentsTable.List.Current.ShipmentsLists.ShipperNotes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ShipmentTable.List.Current.ShipmentsLists.ShipperNotes)> 30 , Substr(ShipmentTable.List.Current.ShipmentsLists.ShipperNotes,0,27)+\"...\",ShipmentTable.List.Current.ShipmentsLists.ShipperNotes)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TasksTable.List.Current.Task.TaskName) < 12,TasksTable.List.Current.Task.TaskName,Substr(TasksTable.List.Current.Task.TaskName,0,11)+\" ...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"Trunc(GetReceivingAnimalsAndIsolatorsByReceivingId.ReceivingAnimalAndIsolatorList.Length/ReceivingAnimalTable.LineCount) + TextToInteger(If(0 = Mod(GetReceivingAnimalsAndIsolatorsByReceivingId.ReceivingAnimalAndIsolatorList.Length, ReceivingAnimalTable.LineCount), 0, 1))","type":"Decimal","functions":["Trunc","TextToInteger","If","Mod"]}
{"text":"Trunc(GetAnimalDescendancy.AnimalDescendancyList.Length/MateTable.LineCount) + TextToInteger(If(0 = Mod(GetAnimalDescendancy.AnimalDescendancyList.Length, MateTable.LineCount), 0, 1))","type":"Decimal","functions":["Trunc","TextToInteger","If","Mod"]}
{"text":"Substr(ReceivingFilter.List.Current.ReceivingFilter.Name,0,20)+If(Length(ReceivingFilter.List.Current.ReceivingFilter.Name)>20,\"...\",\"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(ProjectEmailTable.List.Current.ProjectEmail.Subject)>30,\n  Substr(ProjectEmailTable.List.Current.ProjectEmail.Subject, 0, 25) + \"...\",\n  ProjectEmailTable.List.Current.ProjectEmail.Subject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.Cc, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.Cc, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.Cc, \">\") - 2), \">\", \"\")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.To, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.To, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.To, \">\") - 2), \">\", \"\")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.From, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.From, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.From, \">\") - 2), \">\", \"\")","type":"Text","functions":["Replace","Substr","Index"]}
{"text":"\nIf(AccessionSubmissionShow.Record.AccessionSubmission.ilims_approval_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionShow.Record.AccessionSubmission.ilims_approval_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\nIf(AccessionSubmissionShow.Record.AccessionSubmission.ilims_ship_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionShow.Record.AccessionSubmission.ilims_ship_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(AccessionSubmissionShow.Record.AccessionSubmission.ilims_receipt_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionShow.Record.AccessionSubmission.ilims_receipt_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(TasksTable.List.Current.ColonyIsolatorViewTasks.TaskName) < 12,TasksTable.List.Current.ColonyIsolatorViewTasks.TaskName,Substr(TasksTable.List.Current.ColonyIsolatorViewTasks.TaskName,0,11)+\" ...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(IsolatorAnimalTable.List.Current.Animal.Comment)>20,Substr(IsolatorAnimalTable.List.Current.Animal.Comment,0,20)+\"...\",\nIf(Length(IsolatorAnimalTable.List.Current.Animal.Comment)>0,IsolatorAnimalTable.List.Current.Animal.Comment,\" \"))\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ColonyAnimalTable.List.Current.Animal.Comment)>20,Substr(ColonyAnimalTable.List.Current.Animal.Comment,0,20)+\"...\",\nIf(Length(ColonyAnimalTable.List.Current.Animal.Comment)>0,ColonyAnimalTable.List.Current.Animal.Comment,\" \"))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_approval_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_approval_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_ship_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_ship_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_receipt_date = NullDate(), \"n/a\", DateTimeToDate(AccessionSubmissionTable.List.Current.AccessionSubmission.ilims_receipt_date))","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"If(Length(WebScreenList.List.Current.WebScreenStatistics.ScreenName)>14,Substr(WebScreenList.List.Current.WebScreenStatistics.ScreenName,0,10)+\"...\",WebScreenList.List.Current.WebScreenStatistics.ScreenName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ApplicationList.List.Current.ApplicationStatistics.ApplicationName)>14,Substr(ApplicationList.List.Current.ApplicationStatistics.ApplicationName,0,10)+\"...\",ApplicationList.List.Current.ApplicationStatistics.ApplicationName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(EspaceList.List.Current.EspaceStatistics.EspaceName)>14,Substr(EspaceList.List.Current.EspaceStatistics.EspaceName,0,10)+\"...\",EspaceList.List.Current.EspaceStatistics.EspaceName)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(InventoryTable.List.Current.InventoryStepsList.Comment) > 20,Substr(InventoryTable.List.Current.InventoryStepsList.Comment,0,20)+\"...\",InventoryTable.List.Current.InventoryStepsList.Comment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Trim(ExperimentInventoryTable.List.Current.Inventory.Comment)=\"\",\"Comment n/d\",If(Length(ExperimentInventoryTable.List.Current.Inventory.Comment) > 30,Substr(ExperimentInventoryTable.List.Current.Inventory.Comment,0,60)+\"...\",ExperimentInventoryTable.List.Current.Inventory.Comment))","type":"Text","functions":["If","Trim","Length","Substr"]}
{"text":"If((DateTimeToDate(TableRecords1.List.Current.FileControl.DateTime) = NullDate()), \"\", TableRecords1.List.Current.FileControl.DateTime)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If(Length(Trim(LTMMaterial.LTMMaterial.Plant)) = 0,\"-\",LTMMaterial.LTMMaterial.Plant)\n","type":"Text","functions":["If","Length","Trim"]}
{"text":"If(Length(Trim(GetSubmissionSampleSetById.List.Current.SubmissionSampleSet.Code)) > 0,\"'\" + GetSubmissionSampleSetById.List.Current.SubmissionSampleSet.Code + \"'\",\"\")","type":"Text","functions":["If","Length","Trim"]}
{"text":"If ( Length(Trim(GetSubmissionSampleSetById.List.Current.SubmissionSampleSet.Code)) > 0,\n    \"'\" + GetSubmissionSampleSetById.List.Current.SubmissionSampleSet.Code + \"'\",\n    \"\"\n)","type":"Text","functions":["If","Length","Trim"]}
{"text":"FormatText(Month(TableRecords1.List.Current.ClienteMisterio.Mes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ClienteMisterio.Mes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords1.List.Current.TaxasOcupacaoHoteis.Mes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.TaxasOcupacaoHoteis.Mes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords2.List.Current.VistoriasBAR.Mes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords2.List.Current.VistoriasBAR.Mes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords1.List.Current.VistoriasBAR.Mes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords1.List.Current.VistoriasBAR.Mes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords4.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords4.List.Current.DataFechoRenda.DataMes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords3.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords3.List.Current.DataFechoRenda.DataMes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords2.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords2.List.Current.DataFechoRenda.DataMes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"FormatText(Month(TableRecords1.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords1.List.Current.DataFechoRenda.DataMes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"If((EditRecord3.Record.Contratos.DataRegisto = NullDate()), \"\", Year(EditRecord3.Record.Contratos.DataRegisto))","type":"Text","functions":["If","NullDate","Year"]}
{"text":"FormatText(Month(TableRecords1.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.DataFechoRenda.DataMes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"If(Length(DoseAndCollectionTable.List.Current.DoseAndCollectionStructure.ClinicalObservation)>22,Substr(DoseAndCollectionTable.List.Current.DoseAndCollectionStructure.ClinicalObservation,0,20)+\"...\",DoseAndCollectionTable.List.Current.DoseAndCollectionStructure.ClinicalObservation)\n\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(DoseAndCollectionTable.List.Current.DoseAndCollectionStructure.DoseVolume=\"-\",\"-\",FormatDecimal(TextToDecimal( DoseAndCollectionTable.List.Current.DoseAndCollectionStructure.DoseVolume),2,Site.DecimalSeparator,Site.GroupSeparator)) \n\n","type":"Text","functions":["If","FormatDecimal","TextToDecimal"]}
{"text":"Substr(RcReembolsoTable.List.Current.RC_REEMBOLSO.DescricaoOcorrencia, 0,20) + If(Length(RcReembolsoTable.List.Current.RC_REEMBOLSO.DescricaoOcorrencia)> 20,\"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Index(ListCards.List.Current.StructCard.Name, \" \")=-1, ListCards.List.Current.StructCard.Name, \nSubstr(ListCards.List.Current.StructCard.Name, 0, Index(ListCards.List.Current.StructCard.Name, \" \")))","type":"Text","functions":["If","Index","Substr"]}
{"text":"If(((IdentifierToText(ListRecords1.List.Current.CardType.Id) = \"CLA\") or (IdentifierToText(ListRecords1.List.Current.CardType.Id) = \"CRE\")), FormatDecimal(ListRecords1.List.Current.CardType.Value, 2, \",\", \".\"), \"\")","type":"Text","functions":["If","IdentifierToText","FormatDecimal"]}
{"text":"If((DateTimeToDate(TableRecords1.List.Current.DetalheTransaccoes.DataEntrada) = NullDate()), \"\", TableRecords1.List.Current.DetalheTransaccoes.DataEntrada)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"FormatText(Month(TableRecords1.List.Current.CLOSE_MONTH.Month), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.CLOSE_MONTH.Month)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"If((NextCloseMonth = NullDate()), \"---\", FormatText(Month(NextCloseMonth), 2, 2, True, \"0\") + \"/\" + Year(NextCloseMonth))","type":"Text","functions":["If","NullDate","FormatText","Month","Year"]}
{"text":"If( GravimeticTable.List.Current.Group2.Volume <> 0 and GravimeticTable.List.Current.AnimalWeight.Weight<>0 and GravimeticTable.List.Current.Group2.Density <> 0,\nTextToDecimal(FormatDecimal(((GravimeticTable.List.Current.Dose.PreDoseWeight-GravimeticTable.List.Current.Dose.PostDoseWeight)/\n(GravimeticTable.List.Current.Group2.Volume * GravimeticTable.List.Current.AnimalWeight.Weight*GravimeticTable.List.Current.Group2.Density))*100,2,\".\",\"\")) + \"%\",\"0\")","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If(GravimeticTable.List.Current.Dose.PostDoseWeight=0,\"\",If( GravimeticTable.List.Current.Group2.Volume <> 0 and GravimeticTable.List.Current.AnimalWeight.Weight<>0 and GravimeticTable.List.Current.Group2.Density <> 0,\nTextToDecimal(FormatDecimal(((GravimeticTable.List.Current.Dose.PreDoseWeight-GravimeticTable.List.Current.Dose.PostDoseWeight)/\n(GravimeticTable.List.Current.Group2.Volume * GravimeticTable.List.Current.AnimalWeight.Weight*GravimeticTable.List.Current.Group2.Density))*100,2,\".\",\"\")) + \"%\",\"0\"))\n\n","type":"Text","functions":["If","TextToDecimal","FormatDecimal"]}
{"text":"If((TrimStart(TrimEnd(ShowRecibo.Record.RECIBOS.CodPostal)) = \"-\"), \"\", ShowRecibo.Record.RECIBOS.CodPostal)","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"TrimStart(TrimEnd(If(TableRecords1.List.Current.stFacturaList.NomeCliente <> \"\", TableRecords1.List.Current.stFacturaList.NomeCliente, TableRecords1.List.Current.stFacturaList.NomeCondutor)))","type":"Text","functions":["TrimStart","TrimEnd","If"]}
{"text":"If((DateTimeToDate(TableRecordsNCs.List.Current.GUIA_PAGAMENTO.DataGuia) = NullDate()), \"\", TableRecordsNCs.List.Current.GUIA_PAGAMENTO.DataGuia)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If((EditRecordGuia.Record.GUIA_PAGAMENTO.TipoDocumentoFI <> IdentifierToText(Entities.TIPODOCFI.NC)), If(EditRecordGuia.Record.GUIA_PAGAMENTO.DataLiq = NullDate(), \"\", EditRecordGuia.Record.GUIA_PAGAMENTO.DataLiq), \"\")","type":"Text","functions":["If","IdentifierToText","NullDate"]}
{"text":"FormatDecimal((TextToInteger(If((List.List.Current.CORRECCAO_TURNO.FalhasBolsa > 0), (List.List.Current.CORRECCAO_TURNO.Falhas + List.List.Current.CORRECCAO_TURNO.FalhasBolsa), List.List.Current.CORRECCAO_TURNO.Falhas)) / 100),2,\",\",\".\") + \"â‚¬\"","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"If((List.List.Current.FECHO_MENSAL.Mes = NullDate()), \"\", (FormatText(Month(List.List.Current.FECHO_MENSAL.Mes),2,2,True,\"0\") + \" / \" + Year(List.List.Current.FECHO_MENSAL.Mes)))","type":"Text","functions":["If","NullDate","FormatText","Month","Year"]}
{"text":"If(((List.List.Current.CORRECCAO_TURNO.Falhas = 0) and (List.List.Current.CORRECCAO_TURNO.FalhasBolsa <= 0)), \"\", (FormatDecimal((TextToInteger(If((List.List.Current.CORRECCAO_TURNO.FalhasBolsa > 0), (List.List.Current.CORRECCAO_TURNO.Falhas + List.List.Current.CORRECCAO_TURNO.FalhasBolsa), List.List.Current.CORRECCAO_TURNO.Falhas)) / 100),2,\",\",\".\") + \"â‚¬\"))","type":"Text","functions":["If","FormatDecimal","TextToInteger"]}
{"text":"If((DateTimeToDate(List.List.Current.TURNO.DataFecho) = NullDate()), If(((List.List.Current.TURNO.Barreira = 0) and (List.List.Current.CORRECCAO_TURNO.Falhas <> 0)), \"Total de Falhas:\", \"\"), List.List.Current.TURNO.DataFecho)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If((DateTimeToDate(List.List.Current.TURNO.DataAbertura) = NullDate()), \"\", List.List.Current.TURNO.DataAbertura)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"If((TableRecords1.List.Current.stProcess.Barreira = 0), TextToInteger(Substr(TableRecords1.List.Current.FileInfo.Name, (Index(TableRecords1.List.Current.FileInfo.Name, \".\") - 4), 4)), TableRecords1.List.Current.stProcess.Barreira)","type":"Integer","functions":["If","TextToInteger","Substr","Index"]}
{"text":"If(ACCReceivableDetailTable.List.Current.ACC_Taxes.TaxType <> \"TAXTE\",\nDecimalToText(ACCReceivableDetailTable.List.Current.ACC_Taxes.TaxPercentage * 100) + \"%\",Substr(TaxTableRecords.List.Current.ReceivablePrintTaxTable.LegalArticle,1,2) +\")\")","type":"Text","functions":["If","DecimalToText","Substr"]}
{"text":"\"(\" + If(IMSStockTable.List.Current.IMS_Stock.StockReleaseDatetime = NullDate(),DiffDays(IMSStockTable.List.Current.IMS_Stock.StockEntryDatetime,CurrDateTime()), DiffDays(IMSStockTable.List.Current.IMS_Stock.StockEntryDatetime, IMSStockTable.List.Current.IMS_Stock.StockReleaseDatetime)) + \")\"","type":"Text","functions":["If","NullDate","DiffDays","CurrDateTime"]}
{"text":"Substr(CRMAccountTable.List.Current.CRM_Accounts.AccountShortName,0,10) + \nIf(Length(CRMAccountTable.List.Current.CRM_Accounts.AccountShortName) > 7, \"...\", \"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(IMSSalesTransationTable.List.Current.IMS_SalesTransations.SaleStartDatetime <> NullDate(),FormatDateTime(IMSSalesTransationTable.List.Current.IMS_SalesTransations.SaleFinishDatetime, \"HH:mm:ss\"),\"\")","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If((TableRecords1.List.Current.MovimentosCartoes.Data = DateToDateTime(NullDate())), \"\", TableRecords1.List.Current.MovimentosCartoes.Data)","type":"Text","functions":["If","DateToDateTime","NullDate"]}
{"text":"FormatText(Day(TableRecords1.List.Current.ReportMovimentosSIBS.Data), 2, 2, True, \"0\") + \"/\" + FormatText(Month(TableRecords1.List.Current.ReportMovimentosSIBS.Data), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ReportMovimentosSIBS.Data)","type":"Text","functions":["FormatText","Day","Month","Year"]}
{"text":"FormatText(Month(GetFechoMensalById.List.Current.FECHO_MENSAL.Mes), 2, 2, True, \"0\") + \"/\" + Year(GetFechoMensalById.List.Current.FECHO_MENSAL.Mes)","type":"Text","functions":["FormatText","Month","Year"]}
{"text":"If((rlTotais.Current.stTotaisControloTurnos.Dia = NullDate()),If((rlTotais[rlTotais.CurrentRowNumber - 1].stTotaisControloTurnos.Dia = NullDate()),\"TOTAL GERAL:\",\"TOTAL DO PERÃ�ODO:\"),(Day(rlTotais.Current.stTotaisControloTurnos.Dia) + \"/\" + Month(rlTotais.Current.stTotaisControloTurnos.Dia) + \"/\" + Year(rlTotais.Current.stTotaisControloTurnos.Dia)))","type":"Text","functions":["If","NullDate","Day","Month","Year"]}
{"text":"FormatText(Day(TableRecords1.List.Current.ReportMovimentosUNICRE.Data), 2, 2, True, \"0\") + \"/\" + FormatText(Month(TableRecords1.List.Current.ReportMovimentosUNICRE.Data), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ReportMovimentosUNICRE.Data)","type":"Text","functions":["FormatText","Day","Month","Year"]}
{"text":"FormatDecimal((List.List.Current.CORRECCAO_TURNO.Falhas + TextToInteger(If(List.List.Current.CORRECCAO_TURNO.FalhasBolsa > 0, List.List.Current.CORRECCAO_TURNO.FalhasBolsa, 0)))/100.0,2,\".\",\"\") ","type":"Text","functions":["FormatDecimal","TextToInteger","If"]}
{"text":"If((DateTimeToDate(TableRecords1.List.Current.FICHEIRO_IMPORT.DataImportacaoAnterior) = NullDate()), \"\", TableRecords1.List.Current.FICHEIRO_IMPORT.DataImportacaoAnterior)","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"NewDate(TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 0, 4)), TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 4, 2)), TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 6, 2)))","type":"Date","functions":["NewDate","TextToInteger","Substr"]}
{"text":"NewDate(TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 4, 4)), TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 8, 2)), TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 10, 2)))","type":"Date","functions":["NewDate","TextToInteger","Substr"]}
{"text":"FormatText(IncidentAttachTable.List.Current.INCIDENT_ATTACH.Description, 0, Site.INCIDENT_ATTACH_MAX_FILENAME_SIZE, False, \"...\")\n + \nIf(\nLength(IncidentAttachTable.List.Current.INCIDENT_ATTACH.Description) > Site.INCIDENT_ATTACH_MAX_FILENAME_SIZE,\n\"...\",\n\"\"\n)","type":"Text","functions":["FormatText","If","Length"]}
{"text":"FormatText(IncidentAttachTable.List.Current.FILE_DATA.Name, 0, Site.INCIDENT_ATTACH_MAX_FILENAME_SIZE, False, \"...\")\n + \nIf(\nLength(IncidentAttachTable.List.Current.FILE_DATA.Name) > Site.INCIDENT_ATTACH_MAX_FILENAME_SIZE,\n\"...\",\n\"\"\n)\n","type":"Text","functions":["FormatText","If","Length"]}
{"text":"lrColumns2.List.Current.MicroVariableData_Cell.VisualSymbol + \" \" + \n   If(lrColumns2.List.Current.MicroVariableData_Cell.HasValue=False,\n      \"\",\n      FormatDecimal(lrColumns2.List.Current.MicroVariableData_Cell.Value,\n   TextToInteger(If(lrColumns2.List.Current.MicroVariableData_Cell.DecimalPlaces>=0,\n      lrColumns2.List.Current.MicroVariableData_Cell.DecimalPlaces,\n      If(IsIndicator,1,0)\n     )),\",\",\".\")\n)","type":"Text","functions":["If","FormatDecimal","TextToInteger"]}
{"text":"If(\n\nTrimStart(TrimEnd(trRelatedMicros.List.Current.Micro_Related.TextEN)) =\"\",\"(Editar texto alternativo)\",trRelatedMicros.List.Current.Micro_Related.TextEN)\n","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(\n\nTrimStart(TrimEnd(trRelatedMicros.List.Current.Micro_Related.TextPT)) =\"\",\"(Editar texto alternativo)\",trRelatedMicros.List.Current.Micro_Related.TextPT)\n","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + ReusablePopupEditor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(True)) + \", 1);\n </script>\"\n","type":"Text","functions":["EncodeJavaScript","GetBookmarkableURL","ToLower","BooleanToText"]}
{"text":"If(Length(GeographicGroupYearTable.List.Current.GeographicGroupNoteEN.Note) > 15,\n    Substr(GeographicGroupYearTable.List.Current.GeographicGroupNoteEN.Note, 0, 15) + \"...\",\n    GeographicGroupYearTable.List.Current.GeographicGroupNoteEN.Note)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GeographicGroupYearTable.List.Current.GeographicGroupNotePT.Note) > 15,\n    Substr(GeographicGroupYearTable.List.Current.GeographicGroupNotePT.Note, 0, 15) + \"...\",\n    GeographicGroupYearTable.List.Current.GeographicGroupNotePT.Note)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GeographicGroupTable.List.Current.GeographicGroupNotePT.Note) > 15,\n    Substr(GeographicGroupTable.List.Current.GeographicGroupNotePT.Note, 0, 15) + \"...\",\n    GeographicGroupTable.List.Current.GeographicGroupNotePT.Note)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(GeographicGroupTable.List.Current.GeographicGroupNoteEN.Note) > 15,\n    Substr(GeographicGroupTable.List.Current.GeographicGroupNoteEN.Note, 0, 15) + \"...\",\n    GeographicGroupTable.List.Current.GeographicGroupNoteEN.Note)","type":"Text","functions":["If","Length","Substr"]}
{"text":"\"<script language=\"\"JavaScript\"\">\nif(typeof FusionCharts=='undefined') {\ndocument.write('<scr'+'ipt language=\"\"JavaScript\"\" type=\"\"text/javascript\"\" src=\"\"/FusionChartsXT/Charts/FusionCharts.js\"\"><\\/scr'+'ipt>');\n} \n\n</script>\n\n<script type=\"\"text/javascript\"\">\n    \"+ If(Trim(Site.FusionCharts_setCurrentRenderer) = \"\", \"\", \"FusionCharts.setCurrentRenderer('\"+ Trim(Site.FusionCharts_setCurrentRenderer) +\"');\") + \"\n    var FSchart\" + index_Def + \" = new FusionCharts(\"\"/FusionChartsXT/Charts/\" + ChartType + \"?\" + GeneratePassword(20,True) + \"\"\", \"\"\" + FusionChartsXT.RuntimeId + \"ChartId\"\", \"\"\" + Width +\"\"\", \"\"\" + Height + \"\"\");\n\n\n     FSchart\" + index_Def + \".setDataXML(\"\"\" + EncodeJavaScript(DataXML)  + \"\"\");  \n     FSchart\" + index_Def + \".render(\"\"\" + ChartDiv.Id  +\"\"\");\n  </script>\"\n\n\n","type":"Text","functions":["If","Trim","GeneratePassword","EncodeJavaScript"]}
{"text":"If(PortraitTable.List.Current.Portrait_BO.PeriodicityId = Entities.PortraitPeriodicity.Annual, Year(PortraitTable.List.Current.Portrait_BO.Period), DateToText(PortraitTable.List.Current.Portrait_BO.Period))","type":"Text","functions":["If","Year","DateToText"]}
{"text":"If(PortraitEdit.Record.Portrait.PortraitPeriodicityId = Entities.PortraitPeriodicity.Annual, Year(PortraitEdit.Record.Portrait.Periodicity), DateTimeToText(PortraitEdit.Record.Portrait.Periodicity))","type":"Text","functions":["If","Year","DateTimeToText"]}
{"text":"If(PortraitInfoRec.PortraitsInfo.UpdatedOn=\"\",\"\",\"BD \" + PortraitInfoRec.PortraitsInfo.BD + \" / actualizado \"  + DateTimeToDate(TextToDateTime(PortraitInfoRec.PortraitsInfo.UpdatedOn)) )","type":"Text","functions":["If","DateTimeToDate","TextToDateTime"]}
{"text":"\"<script type=\"\"text/javascript\"\">\" +\n\nIf(UseJavascriptRender, \"FusionCharts.setCurrentRenderer('javascript');\",\"\") +\n\n\"   \nFusionCharts._fallbackJSChartWhenNoFlash();\n\nif(typeof chart\" + index_Def + \" === 'undefined'){\n    var chart\" + index_Def + \" = new FusionCharts(\"\"/PowerCharts/Charts/\" + ChartType + \"?\" + GeneratePassword(20,True) + \"\"\", \"\"\" + PowerChart.RuntimeId + \"ChartId\"\", \"\"\" + Width + \"\"\", \"\"\" + Height +\"\"\");\n}\n\nchart\" + index_Def + \".setDataXML(\"\"\" + EncodeJavaScript(DataXML) + \"\"\");  \nchart\" + index_Def + \".render(\"\"\" + PowerChartDiv.Id  +\"\"\");\"\n\n+\n\n\"</script>\"","type":"Text","functions":["If","GeneratePassword","EncodeJavaScript"]}
{"text":"If(IsLastLevel, \"\", Replace(FormatText(\"\", TR_Selector.List.Current.HierarquicalSearch.Level - 1, TR_Selector.List.Current.HierarquicalSearch.Level - 1, True, \"|\"), \"|\", \"&nbsp;&nbsp;\" ))","type":"Text","functions":["If","Replace","FormatText"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", OsPartyAddresShow.Record.OS_PARTY_ADDRESS.ADDRESS_DETAILS,OsPartyAddresShow.Record.OS_PARTY_ADDRESS.EN_ADDRESS_DETAILS)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", OsPartyAddresShow.Record.OS_PARTY_ADDRESS.LOCATION,OsPartyAddresShow.Record.OS_PARTY_ADDRESS.EN_LOCATION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.ROOT_CASE_SERIAL,PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.EN_ROOT_CASE_SERIAL)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", If(PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.AREA = \"\", \"-\", PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.AREA), If(PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.AREA_EN = \"\", \"-\", PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.AREA_EN))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", If(PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.STATUS = \"\", \"-\", PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.STATUS), If(PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.STATUS_EN =\"\",\"-\", PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.STATUS_EN))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.CASE_YEAR+\" / \"+PublicDetails.Record.OS_CASE_DETAILS_PUBLIC.CASE_SERIAL_NUMBER +\nIf(ToLower(GetCurrentLocale()) = \"ar\",\n\" \"+PublicDetails.Record.OS_CASE_SUBTYPES.DESCRIPTION,\n\" \"+PublicDetails.Record.OS_CASE_SUBTYPES.EDESCRIPTION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.ROOT_CASE_SERIAL,OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.EN_ROOT_CASE_SERIAL)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", If(OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.AREA = \"\", \"-\", OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.AREA), If(OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.AREA_EN = \"\", \"-\", OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.AREA_EN))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", If(OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.STATUS = \"\", \"-\", OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.STATUS), If(OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.STATUS_EN =\"\",\"-\", OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.STATUS_EN))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.LOCATION,OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.LOCATION_EN)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.CASE_YEAR+\" / \"+OsCaseDetailShowLogged.Record.OS_CASE_DETAILS.CASE_SERIAL_NUMBER +\nIf(ToLower(GetCurrentLocale()) = \"ar\",\n\" \"+OsCaseDetailShowLogged.Record.OS_CASE_SUBTYPES.DESCRIPTION,\n\" \"+OsCaseDetailShowLogged.Record.OS_CASE_SUBTYPES.EDESCRIPTION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale())=\"ar\", GetOsExtPortalUserProfiles.List.Current.OS_PERSON_DETAILS.PERSON_NAME, GetOsExtPortalUserProfiles.List.Current.OS_PERSON_DETAILS.EN_PERSON_NAME)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale())=\"ar\", GetOsCourtMemberProfiles.List.Current.OS_COURT_MEMBER_PROFILES.MEMBER_NAME, GetOsCourtMemberProfiles.List.Current.OS_COURT_MEMBER_PROFILES.EMPLOYEE_NAME_ENG)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale())=\"ar\",ListUsers.List.Current.OS_ADVOCATE_LIST.PERSON_NAME,ListUsers.List.Current.OS_ADVOCATE_LIST.EN_PERSON_NAME)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", ePayVouchers.List.Current.OS_GN_CODE_RECORDS.DESCRIPTION, ePayVouchers.List.Current.OS_GN_CODE_RECORDS.E_DESCRIPTION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"GetPetitionExtension.List.Current.PetitionExtension.Case_Year+\" / \"+GetPetitionExtension.List.Current.PetitionExtension.Case_SerialNumber + \" \"+If(ToLower(GetCurrentLocale()) = \"ar\",GetPetitionExtension.List.Current.PetitionExtension.CaseSubtypeDesc_AR,GetPetitionExtension.List.Current.PetitionExtension.CaseSubtypeDesc)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",\nIf(ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_ARABIC<> \"\", ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_ARABIC, ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_LATIN),\nIf(ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_LATIN <> \"\", ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_LATIN, ePayVoucherItems.List.Current.OS_EPAY_PET_VOUCHER_ITEMS.ITEM_DESC_ARABIC ))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",\nIf(OsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.DESCRIPTION<>\"\",\nOsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.DESCRIPTION,\nOsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.DESCRIPTION1),\nIf(OsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.E_DESCRIPTION<>\"\",\nOsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.E_DESCRIPTION,\nOsEpayPetVoucherShow.Record.OS_GN_CODE_RECORDS.E_DESCRIPTION1))","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", ListRecords_Actions.List.Current.CompleteDecisionActions.Action.OS_PET_ACTIONS.ACTION_DETAILS, ListRecords_Actions.List.Current.CompleteDecisionActions.Action.OS_PET_ACTIONS.ACTION_ENG_DETAILS)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\", EpayVouchers.List.Current.OS_GN_CODE_RECORDS.DESCRIPTION, EpayVouchers.List.Current.OS_GN_CODE_RECORDS.E_DESCRIPTION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"If(ToLower(GetCurrentLocale()) = \"ar\",ListRecords_UD_Vouchers.List.Current.OS_GN_CODE_RECORDS.DESCRIPTION, ListRecords_UD_Vouchers.List.Current.OS_GN_CODE_RECORDS.E_DESCRIPTION)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"\"Case \" + PetitionExtension.PetitionExtension.Case_Year+\"/\"+PetitionExtension.PetitionExtension.Case_SerialNumber +\" \"+ If(ToLower(GetCurrentLocale()) = \"ar\",PetitionExtension.PetitionExtension.CaseSubtypeDesc_AR,PetitionExtension.PetitionExtension.CaseSubtypeDesc)","type":"Text","functions":["If","ToLower","GetCurrentLocale"]}
{"text":"Replace(If(Length(ProductZoneTable.List.Current.ProductZone.Description) > 70, Substr(ProductZoneTable.List.Current.ProductZone.Description, 0, 67) + \"...\", ProductZoneTable.List.Current.ProductZone.Description), NewLine(), \" \")","type":"Text","functions":["Replace","If","Length","Substr","NewLine"]}
{"text":"\"https://\" + ToLower(Replace(Trim(Session.ClientInfo.Name), \" \", \"\")) + \".myadv.co.uk\"","type":"Text","functions":["ToLower","Replace","Trim"]}
{"text":"If(Length(Query_ActionTable.List.Current.Action.ResponseText)<120,\nQuery_ActionTable.List.Current.Action.ResponseText,Substr(Query_ActionTable.List.Current.Action.ResponseText,0,117)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(Query_ActionTable.List.Current.Action.Note)<120,\nQuery_ActionTable.List.Current.Action.Note,Substr(Query_ActionTable.List.Current.Action.Note,0,117)+\"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If (GreenwayHistTable.List.Current.REL_PUBLICA_HIST.DataFim <> NullDate(),\nFormatText(Hour(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraFim),2,2,True,\"0\") + \":\" + FormatText(Minute(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraFim),2,2,True,\"0\"),\n\"\")","type":"Text","functions":["If","NullDate","FormatText","Hour","Minute"]}
{"text":"If (GreenwayHistTable.List.Current.REL_PUBLICA_HIST.DataInicio <> NullDate(),\nFormatText(Hour(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraInicio),2,2,True,\"0\") + \":\" + FormatText(Minute(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraInicio),2,2,True,\"0\"), \n\"\")","type":"Text","functions":["If","NullDate","FormatText","Hour","Minute"]}
{"text":"If (GreenwayHistTable.List.Current.REL_PUBLICA_HIST.DataRequisicao <> NullDate(),\nFormatText(Hour(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraRequisicao),2,2,True,\"0\") + \":\" + FormatText(Minute(GreenwayHistTable.List.Current.REL_PUBLICA_HIST.HoraRequisicao),2,2,True,\"0\"),\"\")","type":"Text","functions":["If","NullDate","FormatText","Hour","Minute"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Voo.SGFTVoo.NumeroVoo)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Voo.SGFTVoo.NumeroVoo)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Operador.SGFTOperador.ICAO+DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Voo.SGFTVoo.NumeroVoo)=0,NewLine(),DadosFormulario.SGFTFormulario.Operador.SGFTOperador.ICAO+DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Voo.SGFTVoo.NumeroVoo)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Movimento.SGFTDadosMovimento.keyNRMOVIME)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Movimento.SGFTDadosMovimento.keyNRMOVIME)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Observacoes) <= 35, TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Observacoes, Substr(TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Observacoes, 0, 35 - 3) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If( Length(TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Motivo) <= 30, TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Motivo, Substr(TR_HistoricoMovimento.List.Current.SGFTIndiceHistoricoFT.Motivo, 0, 30 - 3) + \"...\")","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Movimento.SGFTDadosMovimento.OutrosMotivos)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Movimento.SGFTDadosMovimento.OutrosMotivos)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.PaxTransferenciaComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.PaxLocaisComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Destino.SGFTTrafego.Aeroporto)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.PaxTransferenciaComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.PaxLocaisComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala4.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.PaxTransferenciaComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.PaxLocaisComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala3.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.PaxTransferenciaComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.PaxLocaisComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala2.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.PaxTransferenciaComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.PaxLocaisComTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Partida.SGFTPartida.Escala1.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.CargaTransito)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala4.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.CargaTransito)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala3.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.CargaTransito)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.PaxDirectos)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala2.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.CargaTransito)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.PaxDirectos)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Escala1.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Correio)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.CargaTransito)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.CargaLocal)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.PaxTransferenciaSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.PaxDirectos)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"If(Length(DadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.Aeroporto)=0,NewLine(),\nDadosFormulario.SGFTFormulario.Chegada.SGFTChegada.Origem.SGFTTrafego.PaxLocaisSemTaxa)","type":"Text","functions":["If","Length","NewLine"]}
{"text":"FormatDecimal(\n  TextToDecimal(Replace(Replace(FacturasTable.List.Current.Listagem_FimDeDiaOuTurno_List.Total_ANA,\".\",\"\"),\",\",\".\")) + TextToDecimal(Replace(Replace(FacturasTable.List.Current.Listagem_FimDeDiaOuTurno_List.Total_NAV,\".\",\"\"),\",\",\".\")), 2, Site.DecimalSeparator, Site.GroupSeparator)","type":"Text","functions":["FormatDecimal","TextToDecimal","Replace"]}
{"text":"If((TableRecords1.List.Current.Requisicao.Data_Criacao = NullDate()), \"\",\nFormatDateTime(TableRecords1.List.Current.Requisicao.Data_Criacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(EditRecordNovaRequisicao.Record.Requisicao.DataAprovacao = NullDate(), \"\", FormatDateTime(EditRecordNovaRequisicao.Record.Requisicao.DataAprovacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(EditRecordNovaRequisicao.Record.Requisicao.Data_Criacao = NullDate(), \"\", FormatDateTime(EditRecordNovaRequisicao.Record.Requisicao.Data_Criacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(EditRecordRequisicao.Record.Requisicao.DataAprovacao = NullDate(), \"\", FormatDateTime(EditRecordRequisicao.Record.Requisicao.DataAprovacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If(EditRecordRequisicao.Record.Requisicao.Data_Criacao = NullDate(), \"\", FormatDateTime(EditRecordRequisicao.Record.Requisicao.Data_Criacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If((TableRecords1.List.Current.stDateTime.Value = NullDate()), \"\",\nFormatDateTime(TableRecords1.List.Current.stDateTime.Value, \"yyyy-MM-dd\"))\n","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If((TableRecords1.List.Current.Requisicao.DataAprovacao = NullDate()), \"\",\nFormatDateTime(TableRecords1.List.Current.Requisicao.DataAprovacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If((Trunc((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value) - (GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value)) = ((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value) - (GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value))), FormatDecimal(((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value) - (GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value)), 0, \",\", \".\"), FormatDecimal(((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value) - (GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value)), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value) - (GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value)) = ((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value) - (GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value))), FormatDecimal(((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value) - (GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value)), 0, \",\", \".\"), FormatDecimal(((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value) - (GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value)), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value) = (GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value)), FormatDecimal((GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value), 0, \",\", \".\"), FormatDecimal((GetRealVEDIOR.List.Current.stDecimal_2.Value + GetRealBRISA.List.Current.stDecimal_2.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value) = (GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value)), FormatDecimal((GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value), 0, \",\", \".\"), FormatDecimal((GetRealVEDIOR.List.Current.stDecimal.Value + GetRealBRISA.List.Current.stDecimal.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value) = (GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal_3.Value + GetOrcamentos.List.Current.stDecimal_4.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value) = (GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal.Value + GetOrcamentos.List.Current.stDecimal_2.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_4.Value - GetRealBRISA.List.Current.stDecimal_2.Value) = (GetOrcamentos.List.Current.stDecimal_4.Value - GetRealBRISA.List.Current.stDecimal_2.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal_4.Value - GetRealBRISA.List.Current.stDecimal_2.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal_4.Value - GetRealBRISA.List.Current.stDecimal_2.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_2.Value - GetRealBRISA.List.Current.stDecimal.Value) = (GetOrcamentos.List.Current.stDecimal_2.Value - GetRealBRISA.List.Current.stDecimal.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal_2.Value - GetRealBRISA.List.Current.stDecimal.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal_2.Value - GetRealBRISA.List.Current.stDecimal.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealBRISA.List.Current.stDecimal_2.Value) = GetRealBRISA.List.Current.stDecimal_2.Value), FormatDecimal(GetRealBRISA.List.Current.stDecimal_2.Value, 0, \",\", \".\"), FormatDecimal(GetRealBRISA.List.Current.stDecimal_2.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealBRISA.List.Current.stDecimal.Value) = GetRealBRISA.List.Current.stDecimal.Value), FormatDecimal(GetRealBRISA.List.Current.stDecimal.Value, 0, \",\", \".\"), FormatDecimal(GetRealBRISA.List.Current.stDecimal.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_4.Value) = GetOrcamentos.List.Current.stDecimal_4.Value), FormatDecimal(GetOrcamentos.List.Current.stDecimal_4.Value, 0, \",\", \".\"), FormatDecimal(GetOrcamentos.List.Current.stDecimal_4.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_2.Value) = GetOrcamentos.List.Current.stDecimal_2.Value), FormatDecimal(GetOrcamentos.List.Current.stDecimal_2.Value, 0, \",\", \".\"), FormatDecimal(GetOrcamentos.List.Current.stDecimal_2.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_3.Value - GetRealVEDIOR.List.Current.stDecimal_2.Value) = (GetOrcamentos.List.Current.stDecimal_3.Value - GetRealVEDIOR.List.Current.stDecimal_2.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal_3.Value - GetRealVEDIOR.List.Current.stDecimal_2.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal_3.Value - GetRealVEDIOR.List.Current.stDecimal_2.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal.Value - GetRealVEDIOR.List.Current.stDecimal.Value) = (GetOrcamentos.List.Current.stDecimal.Value - GetRealVEDIOR.List.Current.stDecimal.Value)), FormatDecimal((GetOrcamentos.List.Current.stDecimal.Value - GetRealVEDIOR.List.Current.stDecimal.Value), 0, \",\", \".\"), FormatDecimal((GetOrcamentos.List.Current.stDecimal.Value - GetRealVEDIOR.List.Current.stDecimal.Value), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealVEDIOR.List.Current.stDecimal_2.Value) = GetRealVEDIOR.List.Current.stDecimal_2.Value), FormatDecimal(GetRealVEDIOR.List.Current.stDecimal_2.Value, 0, \",\", \".\"), FormatDecimal(GetRealVEDIOR.List.Current.stDecimal_2.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetRealVEDIOR.List.Current.stDecimal.Value) = GetRealVEDIOR.List.Current.stDecimal.Value), FormatDecimal(GetRealVEDIOR.List.Current.stDecimal.Value, 0, \",\", \".\"), FormatDecimal(GetRealVEDIOR.List.Current.stDecimal.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal_3.Value) = GetOrcamentos.List.Current.stDecimal_3.Value), FormatDecimal(GetOrcamentos.List.Current.stDecimal_3.Value, 0, \",\", \".\"), FormatDecimal(GetOrcamentos.List.Current.stDecimal_3.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetOrcamentos.List.Current.stDecimal.Value) = GetOrcamentos.List.Current.stDecimal.Value), FormatDecimal(GetOrcamentos.List.Current.stDecimal.Value, 0, \",\", \".\"), FormatDecimal(GetOrcamentos.List.Current.stDecimal.Value, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa)) = ((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa))), FormatDecimal(((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa)), 0, \",\", \".\"), FormatDecimal(((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa)), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa)) = ((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa))), FormatDecimal(((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa)), 0, \",\", \".\"), FormatDecimal(((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) - (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa)), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT + GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa) = GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTEBrisa, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa) = GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTEBrisa, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa) = GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTEBrisa, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa) = GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTEBrisa, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT) = (GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT)), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT), 0, \",\", \".\"), FormatDecimal((GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT - GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT), 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT) = GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosRealizadosTT, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT) = GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasRealizadasTT, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT) = GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.CustosPrevTT, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"If((Trunc(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT) = GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT, 0, \",\", \".\"), FormatDecimal(GetAvaliacao.List.Current.AvaliacaoOrcamental.HorasPrevTT, 2, \",\", \".\"))","type":"Text","functions":["If","Trunc","FormatDecimal"]}
{"text":"\"<b>ComentÃ¡rio Justificativo</b>: \" + If((Length(ListRecords1.List.Current.AvaliacaoOrcamental.Comentario) > 75), (Substr(ListRecords1.List.Current.AvaliacaoOrcamental.Comentario, 0, 72) + \"...\"), ListRecords1.List.Current.AvaliacaoOrcamental.Comentario)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(EditRecordRequisicao.Record.Requisicao.Data_Anulacao = NullDate(), \"\", FormatDateTime(EditRecordRequisicao.Record.Requisicao.Data_Anulacao, \"yyyy-MM-dd\"))","type":"Text","functions":["If","NullDate","FormatDateTime"]}
{"text":"If((Length(ListRecords1.List.Current.Mensagem.CorpoMensagem) > 100), (Substr(ListRecords1.List.Current.Mensagem.CorpoMensagem, 0, 97) + \"...\"), ListRecords1.List.Current.Mensagem.CorpoMensagem)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((Length(TableRecords1.List.Current.Mensagem.Link) > 30), (Substr(TableRecords1.List.Current.Mensagem.Link, 0, 27) + \"...\"), TableRecords1.List.Current.Mensagem.Link)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((Length(TableRecords1.List.Current.Mensagem.CorpoMensagem) > 100), (Substr(TableRecords1.List.Current.Mensagem.CorpoMensagem, 0, 97) + \"...\"), TableRecords1.List.Current.Mensagem.CorpoMensagem)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If((DateTimeToDate(TableRecords1.List.Current.SGC_NUMCONT.DATACOLOCACAO) = NullDate()), \"\", DateTimeToDate(TableRecords1.List.Current.SGC_NUMCONT.DATACOLOCACAO))","type":"Text","functions":["If","DateTimeToDate","NullDate"]}
{"text":"\"<script type='text/javascript'>\n\nvar PPThermalSlicer = {};\nPPThermalSlicer.header = \"+RightTable_Header+\";\nPPThermalSlicer.data = \"+RightTable_Data+\"; // will store the data to build the table\nPPThermalSlicer.footer = \"+RightTable_Footer+\"; // will store the data to build the table\nif( typeof formatTable !== \"\"undefined\"\") \n    formatTable();\n\nvar ThermalSlicer = {};\n/** Data definition **/\nThermalSlicer.Header = \"+LeftTable_Header+\";\nThermalSlicer.data = \"+LeftTable_Data+\"; // will store the data to build the table\n\nThermalSlicer.footer = typeof(PPThermalSlicer.footer[0])==='undefined' ? [] : \" +LeftTable_Footer + \"; // will store the data to build the table\n\nThermalSlicer.colWidths = \"+LeftTable_ColWidths+\";\nThermalSlicer.DataColWidth = \"+RightTable_DataColWidth+\";\n\nThermalSlicer.InEditMode = \"+ToLower(InEditMode)+\";\n\nfunction isNormalInteger(str) {\n    return /^\\+?(0|[1-9]\\d*)$/.test(str);\n}\n\n// allows links\nfunction strip_tags(input, allowed) {\n    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join(''); // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n    var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi,\n        commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi;\n    return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n      return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';\n    });\n}\n\n\n// Setup Column with on given TD element\nfunction applyColumnWidth(td,width) {\n    $(td).css('min-width',width);\n}\n\n// Appply cell style the editable style\nfunction editableCell(instance, td, row, col, prop, value, cellProperties) {\n    Handsontable.TextCell.renderer.apply(this, arguments);\n    td.className = 'changeValues';\n};\n\n\n// Appply cell style to  infeasible cells\nfunction infeasibleCell(instance, td, row, col, prop, value, cellProperties) {\n    Handsontable.TextCell.renderer.apply(this, arguments);\n    td.className = 'noInfeasible';\n    if(value === 0 || value === '0') {\n            JSProdPlanSliceMaxUsable[row][col] = '';\n            JSProdPlanSliceMaxUsableFiltered[row][col] = '';\n    }\n    \n    applyColumnWidth(td,ThermalSlicer.DataColWidth+'px');\n};\n\n\n$(document).ready(function () {\n    var tsstart = metricStart();\n    var TableHeader = function (instance, td, row, col, prop, value, cellProperties) {\n        Handsontable.TextCell.renderer.apply(this, arguments);\n        td.className = 'TableHeader';\n   };\n\n    var TableDataHeader = function (instance, td, row, col, prop, value, cellProperties) {\n        TableHeader(instance, td, row, col, prop, value, cellProperties);\n        applyColumnWidth(td,ThermalSlicer.DataColWidth+'px');\n   };\n\n    var LeftTableHeader = function (instance, td, row, col, prop, value, cellProperties) {\n        Handsontable.TextCell.renderer.apply(this, arguments);\n        var escaped = Handsontable.helper.stringify(value);\n        escaped = strip_tags(escaped, '<a>'); //be sure you only allow certain HTML tags to avoid XSS threats (you should also remove unwanted HTML attributes)\n        td.innerHTML = escaped;\n        td.className = 'TableHeader';\n        $(td).width(ThermalSlicer.colWidths[col]);\n        $(td).css('min-width', ThermalSlicer.colWidths[col]+'px');\n   };\n\n    var LeftTableFooter = function (instance, td, row, col, prop, value, cellProperties) {\n        Handsontable.TextCell.renderer.apply(this, arguments);\n        var escaped = Handsontable.helper.stringify(value);\n        escaped = strip_tags(escaped, '<a>'); //be sure you only allow certain HTML tags to avoid XSS threats (you should also remove unwanted HTML attributes)\n        td.innerHTML = escaped;\n   };\n\n    var LeftTable = function (instance, td, row, col, prop, value, cellProperties) {\n        Handsontable.TextCell.renderer.apply(this, arguments);\n        var escaped = Handsontable.helper.stringify(value);\n        escaped = strip_tags(escaped, '<a>'); //be sure you only allow certain HTML tags to avoid XSS threats (you should also remove unwanted HTML attributes)\n        td.innerHTML = escaped;\n        $(td).width(ThermalSlicer.colWidths[col]);\n        $(td).css('min-width', ThermalSlicer.colWidths[col]+'px');\n   };\n\n\n    // Applies the style for Alternate Colors\n    var alternateColor = function (instance, td, row, col, prop, value, cellProperties) {\n        Handsontable.TextCell.renderer.apply(this, arguments);\n        if(td.className.indexOf('AlternateColor') == -1) //check if does not contain the class already\n        {\n            td.className += (checkAlternateColor(col) ? ' AlternateColor' : '' ) ;  \n        }\n\n        //replace -1 by '' because its necessary to have a value in the cells\n        if(value == -1){\n            value = ' '; \n        }   \n\n        // Has Maximum slice up and down to check?\n        if( PPThermalSlicer.footer.length > 0 ) {\n            // Compare data table row position with the value in the Max Usable Slice Down/Up to check which slices are selected\n            var rowPositionCurrent = row + 1;\n            var rowPositionSliceDown = PPThermalSlicer.footer[0][col];\n            var rowPositionSliceUp = PPThermalSlicer.footer[1][col];\n\n                //is first row and Min push down or Max push up is zero, set sliceMaxZero\n            if(row == 0 && (row == rowPositionSliceDown || row == rowPositionSliceUp))\n                 { $(td).addClass('sliceMaxZero'); }\n            if( rowPositionCurrent == rowPositionSliceDown )\n                { $(td).addClass('sliceMaxDown'); }\n            if( rowPositionCurrent == rowPositionSliceUp ) \n                { $(td).addClass('sliceMaxUp'); }\n\n        }\n        \n        var sliceTable = TwoTables.getRightHandsontable();\n\n        sliceHighlight(row, col, sliceTable, value);\n        applyColumnWidth(td,ThermalSlicer.DataColWidth+'px');\n    };\n\n    /** Build Table **/\n    $('#\"+headertable.Id+\"').handsontable(\n    {\n        data: PPThermalSlicer.header\n      , minSpareRows: 0\n      , cells: function (row, col, prop) {\n                return {type: {renderer: TableDataHeader}, readOnly: true};\n        }\n    });\n\n    $('#\"+RightTable.Id+\"').handsontable({\n        data: PPThermalSlicer.data\n      ,  minSpareRows: 0\n      , cells: function (row, col, prop) {\n            return {type: {renderer: alternateColor}, readOnly: true};\n        }\n    });\n\n    $('#\"+RightTableFooter.Id+\"').handsontable(\n    {\n        data: PPThermalSlicer.footer\n      , minSpareRows: 0\n      , fillHandle: 'horizontal'\n      , enterMoves: {row: 0, col: 0}\n      , cells: function (row, col, prop) {\n            if(row === os_FooterIndex.infeasible){\n               return {type: {renderer: infeasibleCell}, readOnly: true};\n            }\n            return {type: {renderer: editableCell} };\n        }\n      , onBeforeChange: function (changes) {\n            var i,currentCol,currentRow;\n            for(i = 0;i<changes.length;i++) {\n                currentCol = changes[i][1];\n                currentRow = changes[i][0];\n                \n                // Parse only integers\n                changes[i][3] = parseInt(changes[i][3],10);\n                \n\n                // Check if it's out of bounds and if is a positive number \n                if( changes[i][3] > PPThermalSlicer.data.length || ! isNormalInteger(changes[i][3]) ) {\n                    changes[i][3] = changes[i][2];\n                }\n                // Check if current change is Max Slice Down and if is greater or equal to Max Slice Up\n                else if( currentRow == 0 && changes[i][3] > PPThermalSlicer.footer[os_FooterIndex.sliceUp][currentCol]) {\n                    changes[i][3] = PPThermalSlicer.footer[os_FooterIndex.sliceUp][currentCol];\n                } // Check if current change is Max Slice Up and if is lower or equal to Max Slice Down\n                else if (currentRow == 1 && changes[i][3] < PPThermalSlicer.footer[os_FooterIndex.sliceDown][currentCol]) {\n                    changes[i][3] = PPThermalSlicer.footer[os_FooterIndex.sliceDown][currentCol];\n                }\n                changes[i][1] = currentCol - PlanOffset;\n            }\n            \n            // if the screen is not in the edit mode notifies the changes\n            if( !ThermalSlicer.InEditMode ) {\n                copyToShowData();\n                OsNotifyWidget(NotifyToEditMode, JSON.stringify({offset: PlanOffset, changes: changes}));\n            }\n        }\n      , onChange: function (changes,source) {\n\n            var $rightTable = $('#\"+RightTable.Id+\"');\n            if(source != 'loadData') {\n                for(i = 0;i<changes.length;i++) {\n                    if(changes[i][3] != changes[i][2]) {\n                        // Has Maximum slice up and down to check?\n                        if( PPThermalSlicer.footer.length > 0 ) {\n\n                            var $cellNew = $($rightTable.handsontable('getCell',changes[i][3]-1,changes[i][1]));\n                            var $cellOld = $($rightTable.handsontable('getCell',changes[i][2]-1,changes[i][1]));\n\n                                // for zero values it makes no sense to get changes[i][3]-1 bacuase it is zero\n                            var $cellNewZero = $($rightTable.handsontable('getCell',changes[i][3],changes[i][1]));\n                            var $cellOldZero = $($rightTable.handsontable('getCell',changes[i][2],changes[i][1]));\n                                \n                            \n                                // Check if it was changed on Max Slice UP\n                            if(changes[i][0] == os_FooterIndex.sliceUp) {\n\n                                    // if new value is Zero set border on top\n                                if(changes[i][3] == 0){\n                                    $cellNewZero.addClass('sliceMaxZero');\n                                }\n                                else {\n                                    $cellNew.addClass('sliceMaxUp');\n                                    $cellOldZero.removeClass('sliceMaxZero');\n                                }\n                                $cellOld.removeClass('sliceMaxUp');\n                                \n                                \n                                // Update values in global variable\n                                JSProdPlanSliceMaxUsable[1][changes[i][1]] = changes[i][3];\n\n                            } else {\n\n                                if(changes[i][3] == 0){\n                                   $cellNewZero.addClass('sliceMaxZero');\n                                    \n                                }else {\n                                    $cellNew.addClass('sliceMaxDown');\n                                    $cellOldZero.removeClass('sliceMaxZero');\n                                }\n                                $cellOld.removeClass('sliceMaxDown');\n\n                                // Update values in global variable\n                                JSProdPlanSliceMaxUsable[0][changes[i][1]] = changes[i][3];\n                            }\n                        }\n                    }\n                }\n\n                // Recalculates Slice off limits based on Max Usable Slice Up\n                RecalculateSliceOffLimits(changes);\n            }\n        }\n    });\n\n\n    $('#\"+LeftTableFooter.Id+\"').handsontable(\n    {\n        data: ThermalSlicer.footer\n      , minSpareRows: 0\n      , cells: function (row, col, prop) {\n                return {type: {renderer: LeftTableFooter}, readOnly: true };\n        }\n    });\n\n    /** Build Table **/\n    $('#\"+LeftTableHeader.Id+\"').handsontable(\n    {\n        data: ThermalSlicer.Header\n      , minSpareRows: 0\n      , cells: function (row, col, prop) {\n                return {type: {renderer: LeftTableHeader}, readOnly: true};\n        }\n        \n    });\n    \n    /** Build Table **/\n    $('#\"+LeftTable.Id+\"').handsontable(\n    {\n        data: ThermalSlicer.data\n      , minSpareRows: 0\n      , cells: function (row, col, prop) {\n                return {type: {renderer: LeftTable}, readOnly: true};\n        }\n    });\n    \n    // tweak to fix to row selector remove TD header\n    $('.handsontable thead').remove();\n\n    // Set Heights, widths and positions\n    $('#\"+FooterRight.Id+\"').height($('#\"+FooterContainerRight.Id+\"').height());\n        \"+\n    If(Length(RightTable_Footer) > 0,\n        \"$('#\"+Footer.Id+\"').show();\",\n        \"$('#\"+Footer.Id+\"').hide();$('#\"+FooterLeft.Id+\"').hide();\")\n    +\"\n    \n\n    var tableHeight = $('#\"+RightTable.Id+\"').height() > $('#\"+LeftTable.Id+\"').height() ? $('#\"+RightTable.Id+\"').height() : $('#\"+LeftTable.Id+\"').height(); \n    var footerHeight = $('#\"+FooterRight.Id+\"').height() > $('#\"+FooterLeft.Id+\"').height() ? $('#\"+FooterRight.Id+\"').height() : $('#\"+FooterLeft.Id+\"').height(); \n    if( $('#\"+DataContainer.Id+\"').height() > (tableHeight + footerHeight + 4 +17) )\n        $('#\"+DataContainer.Id+\"').height(tableHeight + footerHeight + 4 + 17);\n    $('#\"+Core.Id+\"').width($('#\"+DataContainer.Id+\"').width()-$('#\"+tableContainerBlocked.Id+\"').width()-17-4);\n    $('#\"+spacerV.Id+\"').height(($('#\"+RightTable.Id+\"').height() > $('#\"+LeftTable.Id+\"').height() ? $('#\"+RightTable.Id+\"').height() : $('#\"+LeftTable.Id+\"').height() ));\n    $('#\"+scrollV.Id+\"').height($('#\"+DataContainer.Id+\"').height()-17-$('#\"+Footer.Id+\"').height()-4);\n    \n    $('#\"+scrollH.Id+\"').width(($('#\"+RightTable.Id+\"').width() > $('#\"+Core.Id+\"').width() ? $('#\"+Core.Id+\"').width() : 0));\n    $('#\"+scrollH.Id+\"').height($('#\"+DataContainer.Id+\"').height() );\n    $('#\"+spacerH.Id+\"').width(($('#\"+RightTable.Id+\"').width() > $('#\"+headertable.Id+\"').width() ? $('#\"+RightTable.Id+\"').width() : $('#\"+headertable.Id+\"').width()));\n    $('#\"+spacerH.Id+\"').height($('#\"+scrollH.Id+\"').height()-17);\n    $('#\"+RightHeader.Id+\"').width($('#\"+Core.Id+\"').width());\n    $('#\"+tableContainerBlocked.Id+\"').height($('#\"+scrollV.Id+\"').height());\n    $('#\"+tableContainer.Id+\"').height($('#\"+scrollV.Id+\"').height());\n    $('#\"+FooterLeft.Id+\"').width($('#\"+tableContainerBlocked.Id+\"').width());\n    $('#\"+FooterRight.Id+\"').width($('#\"+Core.Id+\"').width());\n    $('#\"+scrollH.Id+\"').css( { left: $('#\"+Core.Id+\"').position().left + 'px' });\n    $('#\"+RightHeader.Id+\"').css( { left: $('#\"+Core.Id+\"').position().left + 'px' });\n    \n    \n\n    $('#\"+scrollH.Id+\"').scroll(function(e) {\n        var scrollLeft = $(this).scrollLeft();\n        $('#\"+RightTable.Id+\"').css( { left:  - scrollLeft + 'px' } );\n        $('#\"+headertable.Id+\"').css( { left:  - scrollLeft + 'px' } );\n        $('#\"+FooterContainerRight.Id+\"').css( { left:  - scrollLeft + 'px' } );\n        lastScrollLeft = scrollLeft;\n    });\n    \n    $('#\"+scrollV.Id+\"').scroll(function(e) {\n        var scrollTop = $(this).scrollTop();\n        $('#\"+RightTable.Id+\"').css( { top:  - scrollTop + 'px' } );\n        $('#\"+LeftTable.Id+\"').css( { top:  - scrollTop + 'px' } );\n        lastScrollTop = scrollTop;\n    });\n\n    if (typeof(lastScrollLeft) == 'undefined')\n        lastScrollLeft = 0;\n    if (typeof(lastScrollTop) == 'undefined')\n        lastScrollTop = 0;\n\n    if(lastScrollLeft)\n        $('#\"+scrollH.Id+\"').scrollLeft(lastScrollLeft);\n    if(lastScrollTop)\n        $('#\"+scrollV.Id+\"').scrollTop(lastScrollTop);\n\n    selectedOnDoubleClickCopy('\"+RightTableFooter.Id+\"');\n    metricEnd('TSM_MultipleScrollsTable DOCUMENT READY',tsstart);\n});\n\n\nvar TwoTables = {};\n\nTwoTables.reloadRightTable = function (data) {\n    $('#\"+RightTable.Id+\"').data('handsontable').loadData(data);\n}\n\nTwoTables.reloadRightTableFooter = function (data) {\n    $('#\"+RightTableFooter.Id+\"').data('handsontable').loadData(data);\n}\n\n\nTwoTables.getRightHandsontable = function() { \n    return $('#\"+RightTable.Id+\"').data('handsontable'); \n}\n\nTwoTables.getLeftHandsontable = function() { \n    return $('#\"+LeftTable.Id+\"').data('handsontable'); \n}\n\nTwoTables.getRightFooterHandsontable = function() { \n    return $('#\"+RightTableFooter.Id+\"').data('handsontable'); \n}\n\nfunction selectedOnDoubleClickCopy(tableId) {\n    var table = $('#'+tableId).data('handsontable'); ;\n    \n    var onDoubleClick = function() {\n        var selectedCell = table.getSelected();\n        \n        if(!selectedCell)\n            return;\n        \n        var row = selectedCell[2];\n        var column = selectedCell[3];\n        \n        if(!table.getCellMeta(row,column).isWritable)\n            return;\n        \n        var value = table.getDataAtCell(row,column);\n        var length = TwoTables.getRightHandsontable().getData()[row].length;\n        \n        var changes = [];\n        var change = undefined;\n        \n        for(column; column < length; column++) {\n            change = [row,column,value];\n            changes.push(change);\n        }\n        \n        table.setDataAtCell(changes,'program');\n    };\n    \n    $('#' + tableId + ' .htFillHandle').dblclick(onDoubleClick);\n}\n</script>\"","type":"Text","functions":["ToLower","If","Length"]}
{"text":"If(GetCount.List.Current.Int.Int > 0, IntegerToText(PlantTable.StartIndex + 1) + \" to \" + IntegerToText(Min(PlantTable.StartIndex + PlantTable.LineCount, GetCount.List.Current.Int.Int)) + \" of \" + GetCount.List.Current.Int.Int + \" items\", \"\")","type":"Text","functions":["If","IntegerToText","Min"]}
{"text":"Substr(AgreementTypeLegalTextTable.List.Current.AGREEMENT_TYPE_LEGAL_TEXT.SD_CONTENT_TEXT,0,100) + If(Length(AgreementTypeLegalTextTable.List.Current.AGREEMENT_TYPE_LEGAL_TEXT.SD_CONTENT_TEXT) > 100, \"...\" , \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(EntityEtrmContactTable.List.Current.EntityETRMContacts.ContactComment) > 100, Substr(EntityEtrmContactTable.List.Current.EntityETRMContacts.ContactComment, 0, 100), EntityEtrmContactTable.List.Current.EntityETRMContacts.ContactComment)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(TR_Processed.List.Current.StructDeviation.LastMensage,0,100) + If(Length(TR_Processed.List.Current.StructDeviation.LastMensage)> 100,\" ...\",\"\")\n\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TR_Closed.List.Current.StructDeviation.LastMensage,0,100) + If(Length(TR_Closed.List.Current.StructDeviation.LastMensage)> 100,\" ...\",\"\")\n\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TR_InNotification.List.Current.EmployeeAssetDeviationMessage.Description,0,100) + If(Length(TR_InNotification.List.Current.EmployeeAssetDeviationMessage.Description)> 100,\" ...\",\"\")\n\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TR_ToDo.List.Current.EmployeeAssetDeviationMessage.Description,0,100) + If(Length(TR_ToDo.List.Current.EmployeeAssetDeviationMessage.Description)> 100,\" ...\",\"\")\n\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(EmployeeAssetDeviationMessageTable.List.Current.EmployeeAssetDeviationMessage.Description,0,100) + If(Length(EmployeeAssetDeviationMessageTable.List.Current.EmployeeAssetDeviationMessage.Description)> 100,\" ...\",\"\")\n\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(TRAlerts.List.Current.Alert_List.AlertSubject) > 50, Substr(TRAlerts.List.Current.Alert_List.AlertSubject, 0, 50) + \"...\", TRAlerts.List.Current.Alert_List.AlertSubject)","type":"Text","functions":["If","Length","Substr"]}
{"text":"DateTimeToDate(TableRecords1.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords1.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.Note.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords4.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords4.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords4.List.Current.Note.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords3.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords3.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords3.List.Current.Note.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"DateTimeToDate(TableRecords2.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords2.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords2.List.Current.Note.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(Length(TableRecords1.List.Current.Note.Description) > 256, Substr(TableRecords1.List.Current.Note.Description, 0, 256) + \"...\", TableRecords1.List.Current.Note.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.Document.Filename) > 20, Substr(TableRecords1.List.Current.Document.Filename, 0, 20) + \"...\", TableRecords1.List.Current.Document.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(trList.List.Current.Synchronization.EndDate<>NullDate(),\" - \" + DiffMinutes(trList.List.Current.Synchronization.Date,trList.List.Current.Synchronization.EndDate) + \" minutos\",\"\")","type":"Text","functions":["If","NullDate","DiffMinutes"]}
{"text":"If(TRColaboratorsToReplace.List.Current.PAP.ContractDurationInDays<>0,DateTimeToDate(AddDays(TRColaboratorsToReplace.List.Current.PAP.AdmissionDate,TRColaboratorsToReplace.List.Current.PAP.ContractDurationInDays)), If(TRColaboratorsToReplace.List.Current.ContractDurationStruct.DurationMonth=999 or TRColaboratorsToReplace.List.Current.ContractDurationStruct.DurationDays = 999 ,\"Incerto\",DateTimeToDate(AddMonths(AddDays(TRColaboratorsToReplace.List.Current.PAP.AdmissionDate,TRColaboratorsToReplace.List.Current.ContractDurationStruct.DurationDays),TRColaboratorsToReplace.List.Current.ContractDurationStruct.DurationMonth) )))\n","type":"Text","functions":["If","DateTimeToDate","AddDays","AddMonths"]}
{"text":"If(TRPAPsToReplace.List.Current.PAP.ContractDurationInDays<>0,DateTimeToDate(AddDays(TRPAPsToReplace.List.Current.PAP.AdmissionDate,TRPAPsToReplace.List.Current.PAP.ContractDurationInDays)), If(TRPAPsToReplace.List.Current.ContractDurationStruct.DurationMonth=999 or TRPAPsToReplace.List.Current.ContractDurationStruct.DurationDays = 999 ,\"Incerto\",DateTimeToDate(AddMonths(AddDays(TRPAPsToReplace.List.Current.PAP.AdmissionDate,TRPAPsToReplace.List.Current.ContractDurationStruct.DurationDays),TRPAPsToReplace.List.Current.ContractDurationStruct.DurationMonth) )))","type":"Text","functions":["If","DateTimeToDate","AddDays","AddMonths"]}
{"text":"DateTimeToDate(AddDays(CurrDate(),(-1*Site.N_Days2UpdateValues)))","type":"Date","functions":["DateTimeToDate","AddDays","CurrDate"]}
{"text":"If(MaxCharacteres > 0 and Length(Text)> MaxCharacteres, Substr(Text,0,MaxCharacteres) + \"...\", Text)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ExpiringDocumentsTable.List.Current.DocumentData.ExpiresOn=NullDate(),\"\",\nIf(Sign(DiffDays(CurrDate(),ExpiringDocumentsTable.List.Current.DocumentData.ExpiresOn))=-1,\nDiffDays(CurrDate(),ExpiringDocumentsTable.List.Current.DocumentData.ExpiresOn)*-1,\nDiffDays(CurrDate(),ExpiringDocumentsTable.List.Current.DocumentData.ExpiresOn))\n)\n","type":"Text","functions":["If","NullDate","Sign","DiffDays","CurrDate"]}
{"text":"DateTimeToDate(trDocuments.List.Current.NOTE.CreatedAt) + \" \" + FormatText(Hour(trDocuments.List.Current.NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(trDocuments.List.Current.NOTE.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(Length(trAnswered.List.Current.RequestsForResidueList_Excel.Residue)> 10,   Substr(trAnswered.List.Current.RequestsForResidueList_Excel.Residue,0,9) + \"...\",Substr(trAnswered.List.Current.RequestsForResidueList_Excel.Residue,0,9))","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(trToAnswer.List.Current.OnGoingRequestsForResidueList_Excel.Residue)> 10,   Substr(trToAnswer.List.Current.OnGoingRequestsForResidueList_Excel.Residue,0,9) + \"...\",Substr(trToAnswer.List.Current.OnGoingRequestsForResidueList_Excel.Residue,0,9))","type":"Text","functions":["If","Length","Substr"]}
{"text":"Trim(Replace(ZConditioningTypesTable.List.Current.BO_ZConditioningTypesToListAndExcel.RequestType,\";\",NewLine()))\n","type":"Text","functions":["Trim","Replace","NewLine"]}
{"text":"Trim(Replace(ZResidueOperatorTable.List.Current.BO_ZResidueOperatorToListAndExcel.RequestType,\";\",NewLine()))","type":"Text","functions":["Trim","Replace","NewLine"]}
{"text":"Substr(TR_AuditFormList.List.Current.BO_ZAuditFormToList.Name,0,Min(Length(TR_AuditFormList.List.Current.BO_ZAuditFormToList.Name),50)) + If (Length(TR_AuditFormList.List.Current.BO_ZAuditFormToList.Name) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"DateTimeToDate(tRecDocuments.List.Current.Note.Date) + \" \" + FormatText(Hour(tRecDocuments.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(tRecDocuments.List.Current.Note.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(Length(TRTemplateAssociation.List.Current.Template_List.Description)>150, Substr(TRTemplateAssociation.List.Current.Template_List.Description,0,150) + \"...\", TRTemplateAssociation.List.Current.Template_List.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GetRequest.List.Current.REQUEST.CloseDateTime <> NullDate(), \n   DateToText(GetRequest.List.Current.REQUEST.CloseDateTime),\n   \"-\")","type":"Text","functions":["If","NullDate","DateToText"]}
{"text":"If(TableRecordsFichasLoteBloqueio.List.Current.ListaFichasLote.Idoc = \"\", \"\", IntegerToText(TextToInteger(TableRecordsFichasLoteBloqueio.List.Current.ListaFichasLote.Idoc)))","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecordsFichasLote.List.Current.ListaFichasLote.MsgWpms <> \"\" and TableRecordsFichasLote.List.Current.ListaFichasLote.MsgWpms <> \"N/A\" and TableRecordsFichasLote.List.Current.ListaFichasLote.MsgWpms <> \"X\", IntegerToText(TextToInteger(TableRecordsFichasLote.List.Current.ListaFichasLote.MsgWpms)), TableRecordsFichasLote.List.Current.ListaFichasLote.MsgWpms)","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecordsFichasLote.List.Current.ListaFichasLote.Idoc = \"\", \"\", IntegerToText(TextToInteger(TableRecordsFichasLote.List.Current.ListaFichasLote.Idoc)))","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecords1.List.Current.Fichas_por_ArtigoSAP.Idoc = \"\", \"\", IntegerToText(TextToInteger(TableRecords1.List.Current.Fichas_por_ArtigoSAP.Idoc)))","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecordsFornecedores.List.Current.Ficha_DC_Fornecedor.Preco_Liquido > 0, FormatDecimal ( TableRecordsFornecedores.List.Current.Ficha_DC_Fornecedor.Preco_Liquido, TextToInteger( If( TableRecordsFornecedores.List.Current.Ficha_DC_Fornecedor.PrLiq_Casas_Decimais > 0, TableRecordsFornecedores.List.Current.Ficha_DC_Fornecedor.PrLiq_Casas_Decimais, 5)), \",\", \".\"), TableRecordsFornecedores.List.Current.Ficha_DC_Fornecedor.Preco_Liquido)","type":"Text","functions":["If","FormatDecimal","TextToInteger"]}
{"text":"If(TableRecords1.List.Current.Fichas_por_ArtigoSAP.MsgWpms <> \"\" and TableRecords1.List.Current.Fichas_por_ArtigoSAP.MsgWpms <> \"N/A\" and TableRecords1.List.Current.Fichas_por_ArtigoSAP.MsgWpms <> \"X\", IntegerToText(TextToInteger(TableRecords1.List.Current.Fichas_por_ArtigoSAP.MsgWpms)), TableRecords1.List.Current.Fichas_por_ArtigoSAP.MsgWpms)","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecordsLista1.List.Current.Temp_Variantes.MsgWpms <> \"\" and TableRecordsLista1.List.Current.Temp_Variantes.MsgWpms <> \"N/A\" and TableRecordsLista1.List.Current.Temp_Variantes.MsgWpms <> \"X\", IntegerToText(TextToInteger(TableRecordsLista1.List.Current.Temp_Variantes.MsgWpms)), TableRecordsLista1.List.Current.Temp_Variantes.MsgWpms)","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"If(TableRecordsLista1.List.Current.Temp_Variantes.Idoc = \"\", \"\", IntegerToText(TextToInteger(TableRecordsLista1.List.Current.Temp_Variantes.Idoc)))","type":"Text","functions":["If","IntegerToText","TextToInteger"]}
{"text":"\"\n<script type=\"\"text/javascript\"\">\n//<![CDATA[\nvar map = null;\nvar geocoder = null;\nvar reasons = [];\n\ngoogle.load(\"\"maps\"\", \"\"2\"\", {\"\"language\"\" : \"\"\" + GetCurrentLocale() + \"\"\"});\n\nfunction place(lat,lng, info) { \n var point = new GLatLng(lat,lng); \n map.setCenter(point,14);\n var marker = new GMarker(point);\n if (info != '') {\n  GEvent.addListener(marker, 'click', function() {\n             marker.openInfoWindowHtml('\" + EncodeJavaScript(Info) + \"');\n        });\n }\n map.addOverlay(marker); \n document.getElementById('\" + message.Id + \"').innerHTML = \"\"\"\"; \n}\n\nfunction showAddress(address, info) {      \n    // ====== Perform the Geocoding ====== \n    geocoder.getLocations(address, function (result) { \n      map.clearOverlays(); \n      if (result.Status.code == G_GEO_SUCCESS) { \n        // ===== If there was more than one result, \"\"ask did you mean\"\" on them all ===== \n        if (result.Placemark.length > 1) { \n          document.getElementById('\" + message.Id + \"').innerHTML = \"\"SerÃ¡ que quis dizer:\"\"; \n          // Loop through the results \n          for (var i=0; i<result.Placemark.length; i++) { \n            var p = result.Placemark[i].Point.coordinates; \n            document.getElementById('\" + message.Id + \"').innerHTML += \"\"<br>\"\"+(i+1)+\"\": <a href='javascript:place(\"\" +p[1]+\"\",\"\"+p[0]+\"\")'>\"\"+ result.Placemark[i].address+\"\"</a>\"\"; \n          }\n        }\n        // ===== If there was a single marker ===== \n        else { \n          document.getElementById('\" + message.Id + \"').innerHTML = \"\"\"\"; \n          var p = result.Placemark[0].Point.coordinates; \n          place(p[1],p[0], info); \n        }       \n      } \n      // ====== Decode the error status ====== \n      else { \n        var reason = 'Code ' + result.Status.code; \n        if (reasons[result.Status.code]) { \n          reason = reasons[result.Status.code] \n        } \n        alert('NÃ£o encontrei ' + address + ' ' + reason); \n      } } ); \n}\n\n\n// Call this function when the page has been loaded\nfunction initialize() {\n map = new google.maps.Map2(document.getElementById('\" + GMap.Id + \"'));\n map.setCenter(new GLatLng(0,0),2);\n\" + If (ShowControls,\"\n map.addControl(new GLargeMapControl());\n map.addControl(new GMapTypeControl());\",\"\") + \"\n map.enableScrollWheelZoom();\n map.enableContinuousZoom();\n geocoder = new GClientGeocoder();\n\n // ====== Array for decoding the failure codes ====== \n reasons[G_GEO_SUCCESS] = \"\"Success\"\"; \n reasons[G_GEO_MISSING_ADDRESS] = \"\"Missing Address: The address was either missing or had no value.\"\"; \n reasons[G_GEO_UNKNOWN_ADDRESS] = \"\"Unknown Address: No corresponding geographic location could be found for the specified address.\"\"; \n reasons[G_GEO_UNAVAILABLE_ADDRESS]= \"\"Unavailable Address: The geocode for the given address cannot be returned due to legal or contractual reasons.\"\"; \n reasons[G_GEO_BAD_KEY] = \"\"Bad Key: The API key is either invalid or does not match the domain for which it was given\"\"; \n reasons[G_GEO_TOO_MANY_QUERIES] = \"\"Too Many Queries: The daily geocoding quota for this site has been exceeded.\"\"; \n reasons[G_GEO_SERVER_ERROR] = \"\"Server error: The geocoding request could not be successfully processed.\"\";\n \n \" + If (Address <> \"\", \"showAddress('\" + EncodeJavaScript(Address) + \"','\" + EncodeJavaScript(Info) + \"')\", \"\") + \"\n}\n\ngoogle.setOnLoadCallback(initialize);\n//]]>\n</script>\n\"","type":"Text","functions":["GetCurrentLocale","EncodeJavaScript","If"]}
{"text":"\"\n<script type=\"\"text/javascript\"\">\n//<![CDATA[\nvar map = null;\nvar geocoder = null;\nvar reasons = [];\nvar marker = null;\n\ngoogle.load(\"\"maps\"\", \"\"2\"\", {\"\"language\"\" : \"\"\" + GetCurrentLocale() + \"\"\"});\n\nfunction place(lat,lng) { \n var point = new GLatLng(lat,lng); \n map.setCenter(point,14);\n if (!marker)\n   marker = new GMarker(point, {draggable: true});\n else\n   marker.setLatLng(point);\n GEvent.addListener(marker, \"\"dragend\"\", function(latlng) {\n          document.getElementById('\" + InputId + \"').value = latlng.toUrlValue();\n       }); \n map.addOverlay(marker); \n document.getElementById('\" + message.Id + \"').innerHTML = \"\"\"\"; \n       document.getElementById('\" + InputId + \"').value = point.toUrlValue();\n}\n\nfunction showAddress(address) {      \n    // ====== Perform the Geocoding ====== \n    geocoder.getLocations(address, function (result) { \n      map.clearOverlays(); \n      if (result.Status.code == G_GEO_SUCCESS) { \n        // ===== If there was more than one result, \"\"ask did you mean\"\" on them all ===== \n        if (result.Placemark.length > 1) { \n          document.getElementById('\" + message.Id + \"').innerHTML = \"\"SerÃ¡ que quis dizer:\"\"; \n          // Loop through the results \n          for (var i=0; i<result.Placemark.length; i++) { \n            var p = result.Placemark[i].Point.coordinates; \n            document.getElementById('\" + message.Id + \"').innerHTML += \"\"<br>\"\"+(i+1)+\"\": <a href='javascript:place(\"\" +p[1]+\"\",\"\"+p[0]+\"\")'>\"\"+ result.Placemark[i].address+\"\"</a>\"\"; \n          }\n        }\n        // ===== If there was a single marker ===== \n        else { \n          document.getElementById('\" + message.Id + \"').innerHTML = \"\"\"\"; \n          var p = result.Placemark[0].Point.coordinates; \n          place(p[1],p[0]);\n        }       \n      } \n      // ====== Decode the error status ====== \n      else { \n        var reason = 'Code ' + result.Status.code; \n        if (reasons[result.Status.code]) { \n          reason = reasons[result.Status.code] \n        } \n        alert('NÃ£o encontrei ' + address + ' ' + reason); \n      } } ); \n}\n\n\n// Call this function when the page has been loaded\nfunction initialize() {\n map = new google.maps.Map2(document.getElementById('\" + GMap.Id + \"'));\n map.setCenter(new GLatLng(0,0),2);\n\" + If(ShowControls, \"\n map.addControl(new GLargeMapControl());\n map.addControl(new GMapTypeControl());\",\"\") + \"\n map.enableScrollWheelZoom();\n map.enableContinuousZoom();\n GEvent.addListener(map,\"\"click\"\", function(overlay, latlng) { place(latlng.lat(),latlng.lng());});\n geocoder = new GClientGeocoder();\n\n // ====== Array for decoding the failure codes ====== \n reasons[G_GEO_SUCCESS] = \"\"Success\"\"; \n reasons[G_GEO_MISSING_ADDRESS] = \"\"Missing Address: The address was either missing or had no value.\"\"; \n reasons[G_GEO_UNKNOWN_ADDRESS] = \"\"Unknown Address: No corresponding geographic location could be found for the specified address.\"\"; \n reasons[G_GEO_UNAVAILABLE_ADDRESS]= \"\"Unavailable Address: The geocode for the given address cannot be returned due to legal or contractual reasons.\"\"; \n reasons[G_GEO_BAD_KEY] = \"\"Bad Key: The API key is either invalid or does not match the domain for which it was given\"\"; \n reasons[G_GEO_TOO_MANY_QUERIES] = \"\"Too Many Queries: The daily geocoding quota for this site has been exceeded.\"\"; \n reasons[G_GEO_SERVER_ERROR] = \"\"Server error: The geocoding request could not be successfully processed.\"\";\n \n \" + If (Address <> \"\", \"showAddress('\" + EncodeJavaScript(Address) + \"')\", \"\") + \"\n}\n\ngoogle.setOnLoadCallback(initialize);\n//]]>\n</script>\n\"","type":"Text","functions":["GetCurrentLocale","If","EncodeJavaScript"]}
{"text":"Substr(TableRecords1.List.Current.CONTACTOS_COM_FORNECEDOR.Texto, 0, 80) + If(Length(TableRecords1.List.Current.CONTACTOS_COM_FORNECEDOR.Texto) > 80, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(TableRecords.List.Current.Lista_DatasImplementacao.Observacoes, 0, 20) + If(Length(TableRecords.List.Current.Lista_DatasImplementacao.Observacoes) > 20, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If (Length(TableChildTickets.List.Current.COMMENT.Comments) > 200,Substr(TableChildTickets.List.Current.COMMENT.Comments,0,197) + \"...\", TableChildTickets.List.Current.COMMENT.Comments)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Day(GetArticleById.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticleById.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticleById.List.Current.Article.PublishedFrom)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)","type":"Text","functions":["Day","Month","Year"]}
{"text":"\"<script type=\"\"text/javascript\"\">\nvar gaJsHost = ((\"\"https:\"\" == document.location.protocol) ? \"\"https://ssl.\"\" : \"\"http://www.\"\");\ndocument.write(unescape(\"\"%3Cscript src='\"\" + gaJsHost + \"\"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"\"));\n</script>\n<script type=\"\"text/javascript\"\">\ntry {\nvar pageTracker = _gat._getTracker(\"\"\" + Site.GoogleAnalyticsTrackerCode + \"\"\");\npageTracker._trackPageview();\n} catch(err) {}\n</script>\n<script type=\"\"text/javascript\"\">\n_gaq.push(['_setCustomVar',\n      1,             // This custom var is set to slot #1.  Required parameter.\n      'Access From',   // The name of the custom variable.  Required parameter.\n      '\" + If( Session.Newsletter_Tracker.NewsletterTrack.NewsletterId <> NullIdentifier() and Session.Newsletter_Tracker.NewsletterTrack.EmployeeId <> NullIdentifier(), Substr(Session.Newsletter_Tracker.NewsletterTrack.NewsletterName, 0, 116) , \"Direct Trafic\" ) + \"',      // Sets the value of 'Access Type' to 'Newsletter' or 'Direct' depending on status.  Required parameter.\n      2             // Sets the scope.  Optional parameter.\n   ]);\n\n\n_gaq.push(['_setCustomVar',\n      2,             // This custom var is set to slot #2.  Required parameter.\n      'Site',   // The name of the custom variable.  Required parameter.\n      '\" + GetMicroSite.Record.MicroSite.Label + \"',      // Sets the custom variable value.  Required parameter.\n      3             // Sets the scope.  Optional parameter.\n   ]);\n\n_gaq.push(['_setCustomVar',\n      3,             // This custom var is set to slot #3.  Required parameter.\n      'Section',   // The name of the custom variable.  Required parameter.\n      '\" + If( MicroSiteCategoryId <> NullIdentifier(), GetMicroSiteCategoryById.List.Current.MicroSiteCategory.Label, \"Homepage\" ) + \"',      // Sets the custom variable value.  Required parameter.\n      3             // Sets the scope.  Optional parameter.\n   ]);\n\" +\n\nIf( Session.Newsletter_Tracker.NewsletterTrack.NewsletterId <> NullIdentifier() and Session.Newsletter_Tracker.NewsletterTrack.EmployeeId <> NullIdentifier(),\n\"\n_gaq.push(['_setCustomVar',\n      4,             // This custom var is set to slot #6.  Required parameter.\n      'Employee Company',   // The name of the custom variable.  Required parameter.\n      '\" + Session.Newsletter_Tracker.NewsletterTrack.CompanyName + \"',      // Sets the value of 'Employee Company' to the Company Name.  Required parameter.\n      1             // Sets the scope to visitor-level.  Optional parameter.\n   ]);\n\n_gaq.push(['_setCustomVar',\n      5,             // This custom var is set to slot #7.  Required parameter.\n      'Employee Gender',   // The name of the custom variable.  Required parameter.\n      '\" + Session.Newsletter_Tracker.NewsletterTrack.Gender + \"',      // Sets the value of 'Employee Company' to the Company Name.  Required parameter.\n      1             // Sets the scope to visitor-level.  Optional parameter.\n   ]);\n\", \"\" ) + \"\n</script>\"","type":"Text","functions":["If","NullIdentifier","Substr"]}
{"text":"\"Uploaded by \"+GetNewsLetterById.List.Current.USER_MASTER.Name+\" on \"+GetNewsLetterById.List.Current.NewsLetter.CreatedOn+If(GetNewsLetterById.List.Current.NewsLetter.ModifiedBy <> NullIdentifier() and GetNewsLetterById.List.Current.NewsLetter.ModifiedOn <> NullDate(),\" and modified by \"+GetNewsLetterById.List.Current.USER_MASTER_2.Name+\" on \"+GetNewsLetterById.List.Current.NewsLetter.ModifiedOn,\"\")","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"\"Created by \"+GetNewsLetterById.List.Current.USER_MASTER.Name+\" on \"+GetNewsLetterById.List.Current.NewsLetter.CreatedOn+If(GetNewsLetterById.List.Current.NewsLetter.ModifiedBy <> NullIdentifier() and GetNewsLetterById.List.Current.NewsLetter.ModifiedOn <> NullDate(),\" and modified by \"+GetNewsLetterById.List.Current.USER_MASTER_2.Name+\" on \"+GetNewsLetterById.List.Current.NewsLetter.ModifiedOn,\"\")","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"\"<span class=\"\"data\"\">\"+Day(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Month(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Year(ListRecords1.List.Current.Article.PublishedFrom)+\"</span></li>\"","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ListRecords1.List.Current.NewsLetter.Publishdate)+\"/\"+Month(ListRecords1.List.Current.NewsLetter.Publishdate)+\"/\"+Year(ListRecords1.List.Current.NewsLetter.Publishdate)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(GetArticles.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticles.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticles.List.Current.Article.PublishedFrom)","type":"Text","functions":["Day","Month","Year"]}
{"text":"Day(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Month(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Year(ListRecords1.List.Current.Article.PublishedFrom)","type":"Text","functions":["Day","Month","Year"]}
{"text":"IdentityTable.List.Current.IdentityList.Phone+\nIf(Trim(IdentityTable.List.Current.IdentityList.Phone)=\"\",\"\",NewLine())+IdentityTable.List.Current.IdentityList.MobilePhone","type":"Text","functions":["If","Trim","NewLine"]}
{"text":"IdentityTable.List.Current.IdentityList.Phone+\nIf(Trim(IdentityTable.List.Current.IdentityList.Phone)=\"\",\"\",NewLine())+\nIf(IdentityTable.List.Current.IdentityList.DelegationID=NullIdentifier(), IdentityTable.List.Current.IdentityList.MobilePhone,\"\")","type":"Text","functions":["If","Trim","NewLine","NullIdentifier"]}
{"text":"If(Length(TRLicense.List.Current.LicenseList.LicenseObject) > 30  ,Substr(TRLicense.List.Current.LicenseList.LicenseObject,0,30) + \"...\"  ,TRLicense.List.Current.LicenseList.LicenseObject\n )","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRProject.List.Current.ProjectList.ProjectDescription) > 100, Substr(TRProject.List.Current.ProjectList.ProjectDescription, 0, 100) + \"...\", TRProject.List.Current.ProjectList.ProjectDescription)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords1.List.Current.PROJECT.Description) > 100, Substr(ListRecords1.List.Current.PROJECT.Description, 0, 100) + \"...\", ListRecords1.List.Current.PROJECT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name) >= 206 and not FromPrint, Substr(ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name, 0, 199), ListBehaviorGrades.List.Current.CompetenceGradeAppraisal.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRSystems.List.Current.REQUEST_SYSTEM.Observations)> 50,Substr(TRSystems.List.Current.REQUEST_SYSTEM.Observations,0,50)+ \"...\", TRSystems.List.Current.REQUEST_SYSTEM.Observations)\n ","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(trDecisionMotives.List.Current.PEDRequestMotives.Motive,0,90) + If(Length(trDecisionMotives.List.Current.PEDRequestMotives.Motive)>90, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(lrRequestComments.List.Current.PEDRequestCommentHistory.Comment,0, 80 - Length(lrRequestComments.List.Current.PEDRequestCommentHistory.Date + \" \" + lrRequestComments.List.Current.User.Username + \" - \")) + If(Length(lrRequestComments.List.Current.PEDRequestCommentHistory.Date + \" \" + lrRequestComments.List.Current.User.Username + \" - \" + lrRequestComments.List.Current.PEDRequestCommentHistory.Comment) > 80, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestSpecifications.List.Current.PEDRequestSpecification.Specification,0, 80-Length(lrRequestSpecifications.List.Current.PEDRequestSpecification.SpecificationDate + \" \" + lrRequestSpecifications.List.Current.User.Username + \" - \")) + If(Length(lrRequestSpecifications.List.Current.PEDRequestSpecification.SpecificationDate + \" \" + lrRequestSpecifications.List.Current.User.Username + \" - \" +  lrRequestSpecifications.List.Current.PEDRequestSpecification.Specification) > 80, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestInternalComments2.List.Current.PEDRequestComments.InternalComments,0, 110 - Length(lrRequestInternalComments2.List.Current.PEDRequestComments.InternalDate + \" \" + lrRequestInternalComments2.List.Current.User.Username + \" - \")) + If(Length(lrRequestInternalComments2.List.Current.PEDRequestComments.InternalDate + \" \" + lrRequestInternalComments2.List.Current.User.Username + \" - \" + lrRequestInternalComments2.List.Current.PEDRequestComments.InternalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestTechnicalComments2.List.Current.PEDRequestComments.TechnicalComments,0, 110 - Length(lrRequestTechnicalComments2.List.Current.PEDRequestComments.TechDate + \" \" + lrRequestTechnicalComments2.List.Current.User.Username + \" - \")) + If(Length(lrRequestTechnicalComments2.List.Current.PEDRequestComments.TechDate + \" \" + lrRequestTechnicalComments2.List.Current.User.Username + \" - \" + lrRequestTechnicalComments2.List.Current.PEDRequestComments.TechnicalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestFunctionalComments2.List.Current.PEDRequestComments.FunctionalComments,0, 110 - Length(lrRequestFunctionalComments2.List.Current.PEDRequestComments.FunctionalDate + \" \" + lrRequestFunctionalComments2.List.Current.User.Username + \" - \")) + If(Length(lrRequestFunctionalComments2.List.Current.PEDRequestComments.FunctionalDate + \" \" + lrRequestFunctionalComments2.List.Current.User.Username + \" - \" + lrRequestFunctionalComments2.List.Current.PEDRequestComments.FunctionalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestComments2.List.Current.PEDRequestComments.Comments,0, 110 - Length(lrRequestComments2.List.Current.PEDRequestComments.CommentsDate + \" \" + lrRequestComments2.List.Current.User.Username + \" - \")) + If(Length(lrRequestComments2.List.Current.PEDRequestComments.CommentsDate + \" \" + lrRequestComments2.List.Current.User.Username + \" - \" + lrRequestComments2.List.Current.PEDRequestComments.Comments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(GetSpecifications.List[GetSpecifications.List.Length-1].PEDRequestSpecification.Specification,0, 110-Length(GetSpecifications.List[GetSpecifications.List.Length-1].PEDRequestSpecification.SpecificationDate + \" \" + GetSpecifications.List[GetSpecifications.List.Length-1].User.Username + \" - \")) + If(Length(GetSpecifications.List[GetSpecifications.List.Length-1].PEDRequestSpecification.SpecificationDate + \" \" + GetSpecifications.List[GetSpecifications.List.Length-1].User.Username + \" - \" +  GetSpecifications.List[GetSpecifications.List.Length-1].PEDRequestSpecification.Specification) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(GetRequest.List.Current.PEDRequest.Motive, 0, 110) + If(Length(GetRequest.List.Current.PEDRequest.Motive) > 110, \"...\",  \"\") ","type":"Text","functions":["Substr","If","Length"]}
{"text":"Substr(lrRequestInternalComments.List.Current.PEDRequestComments.InternalComments,0, 110 - Length(lrRequestInternalComments.List.Current.PEDRequestComments.InternalDate + \" \" + lrRequestInternalComments.List.Current.User.Username + \" - \")) + If(Length(lrRequestInternalComments.List.Current.PEDRequestComments.InternalDate + \" \" + lrRequestInternalComments.List.Current.User.Username + \" - \" + lrRequestInternalComments.List.Current.PEDRequestComments.InternalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestTechnicalComments.List.Current.PEDRequestComments.TechnicalComments,0, 110 - Length(lrRequestTechnicalComments.List.Current.PEDRequestComments.TechDate + \" \" + lrRequestTechnicalComments.List.Current.User.Username + \" - \")) + If(Length(lrRequestTechnicalComments.List.Current.PEDRequestComments.TechDate + \" \" + lrRequestTechnicalComments.List.Current.User.Username + \" - \" + lrRequestTechnicalComments.List.Current.PEDRequestComments.TechnicalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestFunctionalComments.List.Current.PEDRequestComments.FunctionalComments,0, 110 - Length(lrRequestFunctionalComments.List.Current.PEDRequestComments.FunctionalDate + \" \" + lrRequestFunctionalComments.List.Current.User.Username + \" - \")) + If(Length(lrRequestFunctionalComments.List.Current.PEDRequestComments.FunctionalDate + \" \" + lrRequestFunctionalComments.List.Current.User.Username + \" - \" + lrRequestFunctionalComments.List.Current.PEDRequestComments.FunctionalComments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"Substr(lrRequestComments.List.Current.PEDRequestComments.Comments,0, 110 - Length(lrRequestComments.List.Current.PEDRequestComments.CommentsDate + \" \" + lrRequestComments.List.Current.User.Username + \" - \")) + If(Length(lrRequestComments.List.Current.PEDRequestComments.CommentsDate + \" \" + lrRequestComments.List.Current.User.Username + \" - \" + lrRequestComments.List.Current.PEDRequestComments.Comments) > 110, \"...\",  \"\")","type":"Text","functions":["Substr","Length","If"]}
{"text":"If(Length(ListRecords3.List.Current.TagsList.Name)>80, \nSubstr(ListRecords3.List.Current.TagsList.Name,0,80) + \"(...)\",\nListRecords3.List.Current.TagsList.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords2.List.Current.TagsList.Name)>80, \nSubstr(ListRecords2.List.Current.TagsList.Name,0,80) + \"(...)\",\nListRecords2.List.Current.TagsList.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(ListRecords1.List.Current.TagsList.Name)>80, \nSubstr(ListRecords1.List.Current.TagsList.Name,0,80) + \"(...)\",\nListRecords1.List.Current.TagsList.Name)\n","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimEnd(TrimStart(ScaleTable.List.Current.SCALE_L.Name))<>\"\",ScaleTable.List.Current.SCALE_L.Name,ScaleTable.List.Current.SCALE.Name)","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(TrimEnd(TrimStart(ScaleTable.List.Current.SCALE_L.Description))<>\"\",ScaleTable.List.Current.SCALE_L.Description,ScaleTable.List.Current.SCALE.Description)","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(Length(ListRecords1.List.Current.ScaleGrades_Small.IntervalValue) > 100, Substr(ListRecords1.List.Current.ScaleGrades_Small.IntervalValue, 0, 95) + \" (...)\" , ListRecords1.List.Current.ScaleGrades_Small.IntervalValue)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TrimEnd(TrimStart(ListRecords1.List.Current.SCALE_GRADE_L.TextValue))<>\"\", ListRecords1.List.Current.SCALE_GRADE_L.TextValue, ListRecords1.List.Current.SCALE_GRADE.TextValue)","type":"Text","functions":["If","TrimEnd","TrimStart"]}
{"text":"If(ApplySubstringToDescription,If(Length(GOAL_GetGoalById.GoalAndData.GOAL.Description) > 100, Substr(GOAL_GetGoalById.GoalAndData.GOAL.Description, 0, 95) + \" (...)\" , GOAL_GetGoalById.GoalAndData.GOAL.Description),GOAL_GetGoalById.GoalAndData.GOAL.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(ApplySubstringToName,If(Length(GOAL_GetGoalById.GoalAndData.GOAL.Name) > 100, Substr(GOAL_GetGoalById.GoalAndData.GOAL.Name, 0, 95) + \" (...)\" , GOAL_GetGoalById.GoalAndData.GOAL.Name),GOAL_GetGoalById.GoalAndData.GOAL.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(GoalEdit.Record.GOAL_EMPLOYEE.GoalEmployeeStatusId = Entities.GOAL_EMPLOYEE_STATUS.Draft_FromCatalog or GoalEdit.Record.GOAL_EMPLOYEE.GoalEmployeeStatusId = Entities.GOAL_EMPLOYEE_STATUS.Draft_FromHRCatalog or CurrentGoalEmployeeDataId = NullIdentifier(), \n\"up to \" + FormatDecimal(MaxWeighing, 2, \",\", \"\") + \"%\", \n\"up to \" + FormatDecimal(MaxWeighing + GoalEdit.Record.GOAL_EMPLOYEE_DATA.Weighing, 2, \",\", \"\") + \"%\")","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"If(PHASE_EVALUEE_CheckForActivity.StepBehaviour.STEP_BEHAVIOUR.CanEdit or\nPHASE_EVALUEE_CheckForActivity.StepBehaviour.STEP_BEHAVIOUR.CanView,FormatDecimal(Round(GetPhaseEvalueeById.List.Current.PHASE_EVALUEE.QuantitativeGrade,fractionalDigits:1),1,\".\",\"\") ,\"--\")","type":"Text","functions":["If","FormatDecimal","Round"]}
{"text":"If(PHASE_EVALUEE_CheckForActivity.StepBehaviour.STEP_BEHAVIOUR.CanEdit or\nPHASE_EVALUEE_CheckForActivity.StepBehaviour.STEP_BEHAVIOUR.CanView,FormatDecimal(Round(GetPhaseEvalueeById.List.Current.PHASE_EVALUEE.QualitativeGrade,fractionalDigits:1),1,\".\",\"\") ,\"--\")","type":"Text","functions":["If","FormatDecimal","Round"]}
{"text":"If(GoalEmployeeER.Record.GOAL_EMPLOYEE.GoalEmployeeStatusId = Entities.GOAL_EMPLOYEE_STATUS.Draft_FromCatalog or GoalEmployeeER.Record.GOAL_EMPLOYEE.GoalEmployeeStatusId = Entities.GOAL_EMPLOYEE_STATUS.Draft_FromHRCatalog or CurrentGoalEmployeeDataId = NullIdentifier(), \n\"up to \" + FormatDecimal(MaxWeight, 2, \",\", \"\") + \"%\", \n\"up to \" + If(NewGoal,\n                FormatDecimal(MaxWeight, 2, \",\", \"\"),\n                FormatDecimal(MaxWeight + GoalEmployeeER.Record.GOAL_EMPLOYEE_DATA.Weighing, 2, \",\", \"\")\n            ) \n+ \"%\")","type":"Text","functions":["If","NullIdentifier","FormatDecimal"]}
{"text":"\"<span class=\"\"val_A\"\" title=\"\"Qualitative Grade\"\">\"+FormatDecimal(ListRecords1.List.Current.TPV_Grades_EmployeeInfo.QualitativeGrade,2,\",\",\"\")+\"</span>\n<span class=\"\"val_B\"\" title=\"\"Quantitative Grade\"\">\"+FormatDecimal(ListRecords1.List.Current.TPV_Grades_EmployeeInfo.QuantitativeGrade,2,\",\",\"\")+\"</span>\n<span class=\"\"val_C \"+\nIf( Round(ListRecords1.List.Current.TPV_Grades_EmployeeInfo.FinalGrade,0) <> Round(ListRecords1.List.Current.TPV_Grades_EmployeeInfo.PlayerGrade,0),\"orange\",\"\")\n+\"\"\" title=\"\"Calculated Grade\"\">\"+\nFormatDecimal(ListRecords1.List.Current.TPV_Grades_EmployeeInfo.FinalGrade,2,\",\",\"\")+\"</span>\"","type":"Text","functions":["FormatDecimal","If","Round"]}
{"text":"DateTimeToDate(trDocuments.List.Current.DocumentsList.CreatedAt) + \" \" + FormatText(Hour(trDocuments.List.Current.DocumentsList.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(trDocuments.List.Current.DocumentsList.CreatedAt),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"Substr(TableRecords_Hitory.List.Current.HISTORY.Body, 0, 50) + If(Length(TableRecords_Hitory.List.Current.HISTORY.Body) > 50, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"If (trMeasures.List.Current.PURCHASE_ORDER_LINE.RequestUnits = Site.KG,\nFormatDecimal( trMeasures.List.Current.MEASURE.QuantityRejected ,2,\",\",\".\"),\nDecimalToInteger(trMeasures.List.Current.MEASURE.QuantityRejected))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"If (trMeasures.List.Current.PURCHASE_ORDER_LINE.RequestUnits = Site.KG,\nFormatDecimal( trMeasures.List.Current.PURCHASE_ORDER_LINE.QuantityReceived ,2,\",\",\".\"),\nDecimalToInteger(trMeasures.List.Current.PURCHASE_ORDER_LINE.QuantityReceived))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"If (trReport.List.Current.Suppliers_Report.Units = Site.KG,\nFormatDecimal(trReport.List.Current.Suppliers_Report.QuantityTotal,2,\",\",\".\"),\nDecimalToInteger(trReport.List.Current.Suppliers_Report.QuantityTotal))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"If (trReport.List.Current.Suppliers_Report.Units = Site.KG,\nFormatDecimal(trReport.List.Current.Suppliers_Report.QuantityRejected,2,\",\",\".\"),\nDecimalToInteger(trReport.List.Current.Suppliers_Report.QuantityRejected))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"If (trReport.List.Current.Suppliers_Report.Units = Site.KG,\nFormatDecimal(trReport.List.Current.Suppliers_Report.QuantityReceived,2,\",\",\".\"),\nDecimalToInteger(trReport.List.Current.Suppliers_Report.QuantityReceived))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"If (trReport.List.Current.Suppliers_Report.Units = Site.KG,\nFormatDecimal(trReport.List.Current.Suppliers_Report.QuantityRequested,2,\",\",\".\"),\nDecimalToInteger(trReport.List.Current.Suppliers_Report.QuantityRequested))","type":"Text","functions":["If","FormatDecimal","DecimalToInteger"]}
{"text":"Substr(TRControlsList.List.Current.Control_List.Object,Index(TRControlsList.List.Current.Control_List.Object,\" \") + 1,Length(TRControlsList.List.Current.Control_List.Object))","type":"Text","functions":["Substr","Index","Length"]}
{"text":"Abs(DiffDays(CurrDate(),ProjectList.Current.ProjectControlList.TimeToMarket)) + \" dias\"","type":"Text","functions":["Abs","DiffDays","CurrDate"]}
{"text":"ShowRecord1.Record.SGIHdrNC.Ano + \".\" + If(ShowRecord1.Record.SGIHdrNC.Arm <> NullIdentifier(), ShowRecord1.Record.SGICodDsc.Codigo, FormatText(ShowRecord1.Record.SATLojasArmazens.LojaArmazem,4,4,True,\"0\")) + \".\" + FormatText(IntegerToText(ShowRecord1.Record.SGIHdrNC.NSeq),6,6,True,\"0\")","type":"Text","functions":["If","NullIdentifier","FormatText","IntegerToText"]}
{"text":"SATLojasArmazenShow.Record.SGIHdrNC.Ano + \".\" + If(SATLojasArmazenShow.Record.SGIHdrNC.Arm <> NullIdentifier(), SATLojasArmazenShow.Record.SGICodDsc.Codigo, FormatText(SATLojasArmazenShow.Record.SATLojasArmazens.LojaArmazem,4,4,True,\"0\")) + \".\" + FormatText(IntegerToText(SATLojasArmazenShow.Record.SGIHdrNC.NSeq),6,6,True,\"0\")","type":"Text","functions":["If","NullIdentifier","FormatText","IntegerToText"]}
{"text":"\"<script language=\"\"JavaScript\"\">\n\nvar currentTime = new Date()\nvar year=\"+Year(GetReport.List.Current.REPORT.CreationDate)+\";\nvar month=\"+Month(GetReport.List.Current.REPORT.CreationDate)+\";\nvar day=\"+Day(GetReport.List.Current.REPORT.CreationDate)+\";\nvar hours=\"+Hour(GetReport.List.Current.REPORT.CreationDate)+\";\nvar minutes=\"+Minute(GetReport.List.Current.REPORT.CreationDate)+\";\nvar currentDateTime = new Date(year, month-1,day, hours, minutes);\nvar startTime = new Date(currentDateTime);\nvar start = new Date(currentDateTime);\nvar end = 0\nvar diff = 0\nvar timerID = 0\nvar msg_close =''\nvar msg_pre_close =''\nvar max_minutes=0;\nmsg_inicial='\"+msgIni+\"';\nmsg_close='\"+Site.msg_close+\"';\nmsg_pre_close='\"+Site.msg_pre_close+\"';\nmax_minutes=\"+Site.MaxMinutes2CompleatReport+\";\n\nfunction chrono(){\n\tend = new Date()\n\tdiff = end - start\n\tdiff = new Date(diff)\n\tvar msec = diff.getMilliseconds()\n\tvar sec = diff.getSeconds()\n\tvar min = diff.getMinutes()\n\tvar hr = diff.getHours()\n\tvar minutes2close = 0;\n\n\tminutes2close=max_minutes-diff.getMinutes();\n\tif (min < 10){\n\t\tmin = \"\"0\"\" + min\n\t}\n\n\n\tif ( diff.getMinutes()<1 ){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_inicial ;\n\t}else if ( minutes2close >= 2 && minutes2close <=5){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_pre_close+\"\"  \"\"+(minutes2close) + \"\" minutos! \"\";\n\t}else if( minutes2close == 1  ){\n\t\t\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_pre_close+\"\"  \"\"+(minutes2close) + \"\" minuto! \"\";\n\t\t\t\tdocument.getElementById(\"\"\"+Site.bt_gravar+\"\"\").click();\t\t\t\t\n\n\t}else if(  minutes2close < 1   ){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML = msg_close;\n\t\tdocument.getElementById(\"\"\"+Site.bt_gravar+\"\"\").click();\n\t}else {\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML = msg_inicial+\"\" DispÃµe de \"\"+(minutes2close) + \"\" minutos! \"\"\n\t}\n\t\n\ttimerID = setTimeout(\"\"chrono()\"\", 60000)\n}\nfunction chronoStart(){\n\n\tstart = new Date(start)\n\tchrono()\n\t\n}\n\n</script>\n\n\n<span id=\"\"chronotime\"\">00</span>\n<script language=\"\"JavaScript\"\">\nchronoStart();\n</script>\"\n","type":"Text","functions":["Year","Month","Day","Hour","Minute"]}
{"text":"If(TRConfrontationsByYear.List.Current.AuditsConfrontationList.AuditsPlaned > 0,\n    If(\n        Index(FormatDecimal(TRConfrontationsByYear.List.Current.AuditsConfrontationList.Realization,2,\",\",\"\"),\",00\",startIndex:,searchFromEnd:,ignoreCase:) > 0,\n        TRConfrontationsByYear.List.Current.AuditsConfrontationList.Realization + \"%\", \n        FormatDecimal(TRConfrontationsByYear.List.Current.AuditsConfrontationList.Realization,2,\",\",\"\") + \"%\"\n    ),\n\"\")","type":"Text","functions":["If","Index","FormatDecimal"]}
{"text":"If(TRConfrontationsByMonth.List.Current.AuditsConfrontationList.AuditsPlaned > 0,\n    If(\n        Index(FormatDecimal(TRConfrontationsByMonth.List.Current.AuditsConfrontationList.Realization,2,\",\",\"\"),\",00\",startIndex:,searchFromEnd:,ignoreCase:) > 0,\n        TRConfrontationsByMonth.List.Current.AuditsConfrontationList.Realization + \"%\", \n        FormatDecimal(TRConfrontationsByMonth.List.Current.AuditsConfrontationList.Realization,2,\",\",\"\") + \"%\"\n    ),\n\"\")","type":"Text","functions":["If","Index","FormatDecimal"]}
{"text":"If(SumPlaned > 0,\n    If(\n        Index(FormatDecimal(Percent,2,\",\",\"\"),\",00\",startIndex:,searchFromEnd:,ignoreCase:) > 0,\n        Percent + \"%\", \n        FormatDecimal(Percent,2,\",\",\"\") + \"%\"\n    ),\n\"\")","type":"Text","functions":["If","Index","FormatDecimal"]}
{"text":"DiffDays(CurrDate(),\nIf(TRAudits.List.Current.SUPPLIER_LOCATION_AUDIT.OriginalScheduleDate <> NullDate(),TRAudits.List.Current.SUPPLIER_LOCATION_AUDIT.OriginalScheduleDate,\nTRAudits.List.Current.SUPPLIER_LOCATION_AUDIT.Date\n) )\n","type":"Integer","functions":["DiffDays","CurrDate","If","NullDate"]}
{"text":"If(Abs(AuditList.Current.AuditList.DaysLeft) >= 31, Trunc(AuditList.Current.AuditList.DaysLeft/30) + \" meses\",\nIf(Abs(AuditList.Current.AuditList.DaysLeft) < 31 and Abs(AuditList.Current.AuditList.DaysLeft) >= 7, Trunc(AuditList.Current.AuditList.DaysLeft/7) + \" semanas\", \nAuditList.Current.AuditList.DaysLeft + \" dias\"))","type":"Text","functions":["If","Abs","Trunc"]}
{"text":"\n\nFormatDecimal(\nTRRecallAnalyis.List.Current.AnalysisSumary.Quantidade,If(ToLower(Trim(TRRecallAnalyis.List.Current.AnalysisSumary.UnidadeBase)) = \"kg\",\nSite.KG_DecimalDigits,0),\",\",\".\")","type":"Text","functions":["FormatDecimal","If","ToLower","Trim"]}
{"text":"FormatDecimal(TRRecallAnalyis.List.Current.AnalysisSumary.Quantidade,If(ToLower(Trim(TRRecallAnalyis.List.Current.AnalysisSumary.UnidadeBase))=\"kg\",Site.KG_DecimalDigits,0),\",\",\".\")\n\n","type":"Text","functions":["FormatDecimal","If","ToLower","Trim"]}
{"text":"FormatDecimal(TrRecallLine.List.Current.SubAnalysisList.Quantidade,If(ToLower(Trim(TrRecallLine.List.Current.SubAnalysisList.UnidadeBase))=\"kg\",Site.KG_DecimalDigits,0),\",\",\".\")\n\n","type":"Text","functions":["FormatDecimal","If","ToLower","Trim"]}
{"text":"FormatDecimal(TRRecallLines.List.Current.RECALL_LINE_CHANGE.NewQuantity,If(ToLower(Trim(TRRecallLines.List.Current.RECALL_LINE.BaseUnit)) = \"kg\",Site.KG_DecimalDigits,0),\",\",\".\")\n\n\n","type":"Text","functions":["FormatDecimal","If","ToLower","Trim"]}
{"text":"FormatDecimal(TRRecallLines.List.Current.RECALL_STORE_LINE.Quantity,If(ToLower(Trim(TRRecallLines.List.Current.RECALL_LINE.BaseUnit)) = \"kg\",Site.KG_DecimalDigits,0),\",\",\".\")","type":"Text","functions":["FormatDecimal","If","ToLower","Trim"]}
{"text":"If(Length(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.Message)>100,Substr(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.Message,0,99) + \" ...\", OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.Message)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.BCC)>50,Substr(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.BCC,0,49) + \" ...\", OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.BCC)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.CC)>50,Substr(OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.CC,0,49) + \" ...\", OccurenceEmailTable.List.Current.OCCURENCE_EMAIL.CC)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(TRTaskList.List.Current.TaskListExpand.Descricao <> \"\", Substr(TRTaskList.List.Current.TaskListExpand.Descricao,0,15)+If(Length(TRTaskList.List.Current.TaskListExpand.Descricao)>15,\"...\",\"\"), \"(Sem DescriÃ§Ã£o)\")","type":"Text","functions":["If","Substr","Length"]}
{"text":"If (TrimStart(TrimEnd(EmployeeName)) <> \"\", TrimStart(TrimEnd(EmployeeName)), \"\")\n","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If (TrimStart(TrimEnd(EmployeeName)) <> \"\", \" - \" + TrimStart(TrimEnd(EmployeeName)), \"\")\n","type":"Text","functions":["If","TrimStart","TrimEnd"]}
{"text":"If(\nSubstr( Nutrition_Parameters.List.Current.SPECIFICATION_NUTRITION_PARAMETER.Value, 0, Index(Nutrition_Parameters.List.Current.SPECIFICATION_NUTRITION_PARAMETER.Value, \".\", startIndex:, searchFromEnd:, ignoreCase:)) <> \"\",\nSubstr( Nutrition_Parameters.List.Current.SPECIFICATION_NUTRITION_PARAMETER.Value, 0, Index(Nutrition_Parameters.List.Current.SPECIFICATION_NUTRITION_PARAMETER.Value, \".\", startIndex:, searchFromEnd:, ignoreCase:)),\nNutrition_Parameters.List.Current.SPECIFICATION_NUTRITION_PARAMETER.Value \n)","type":"Text","functions":["If","Substr","Index"]}
{"text":"If ((ToUpper(GetUserLocaleId.strLocaleId) <> \"PT\" and ToUpper(GetUserLocaleId.strLocaleId) <> \"PT_PT\") and\nTRActivities.List.Current.ActivityHistory.ActivityDefinitionLangId <> NullIdentifier(), \nTRActivities.List.Current.ActivityHistory.ActivityDefinitionLang, \nTRActivities.List.Current.ActivityHistory.ActivityDefinition)\n","type":"Text","functions":["If","ToUpper","NullIdentifier"]}
{"text":"If ((ToUpper(GetUserLocaleId.strLocaleId) <> \"PT\" and ToUpper(GetUserLocaleId.strLocaleId) <> \"PT_PT\") and\nTRActivities.List.Current.Activity_Definition_Lang.Id <> NullIdentifier(), \nTRActivities.List.Current.Activity_Definition_Lang.Label, \nTRActivities.List.Current.Activity_Definition.Label)","type":"Text","functions":["If","ToUpper","NullIdentifier"]}
{"text":"Substr(Replace(EncodeHtml(TR_Occurences.List.Current.Occurence_List.Description),\"<br/>\",\" \"),0,50)+If(Length(Replace(EncodeHtml(TR_Occurences.List.Current.Occurence_List.Description),\"<br/>\",\" \"))> 50,\"...\",\"\")\n\n\n\n","type":"Text","functions":["Substr","Replace","EncodeHtml","If","Length"]}
{"text":"If(erStoreAudit.Record.STORE_AREA_AUDIT.DatePlanned <> NullDate(), \n\tDateTimeToTime(erStoreAudit.Record.STORE_AREA_AUDIT.DatePlanned), \"\")","type":"Text","functions":["If","NullDate","DateTimeToTime"]}
{"text":"If(erStoreAudit.Record.STORE_AREA_AUDIT.DatePlanned <> NullDate(), \n\tDateTimeToDate(erStoreAudit.Record.STORE_AREA_AUDIT.DatePlanned), \"\")","type":"Text","functions":["If","NullDate","DateTimeToDate"]}
{"text":"\"<script language=\"\"javascript\"\">\n\nfunction getRandomTs() {\n return Math.random();\n}\n\nvar myLockUpdater = new Ajax.PeriodicalUpdater('\" + myHiddenContainer.Id + \"', '/\" + \"ScreenLock\" + \"/LockObject.\" + If(GetApplicationServerType()=\"J2EE\",\"jsp\",\"aspx\") + \"?ApplicationName=\"+ EncodeUrl(GetEntryEspaceName()) + \"&ObjectClassName=\"+ EncodeUrl(ObjectClassName)+ \"&ObjectInstanceId=\"+EncodeUrl(ObjectInstanceId) + \"&OwnerId=\" + EncodeUrl(OwnerId) + \"&LockTimeOutSeconds=\"+ EncodeUrl(LockTimeOutSeconds) + \"&ts=\" + GeneratePassword(8,True) + \"', { method: 'post', frequency: 10, decay: 1, parameters: 'ts2=' + getRandomTs(), asynchronous: true }); \n\n</script>\"","type":"Text","functions":["If","GetApplicationServerType","EncodeUrl","GetEntryEspaceName","GeneratePassword"]}
{"text":"Substr(Table.List.Current.ROLE.Name, Length(GetEntryEspaceName()) + 1, 50)","type":"Text","functions":["Substr","Length","GetEntryEspaceName"]}
{"text":"If(Length(TRScripts.List.Current.SCRIPT.Description) > 50 , Substr(TRScripts.List.Current.SCRIPT.Description,0,50) + \"...\" , TRScripts.List.Current.SCRIPT.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRScriptTypes.List.Current.SCRIPT_TYPE.Description) > 50 , Substr(TRScriptTypes.List.Current.SCRIPT_TYPE.Description,0,50) + \"...\" , TRScriptTypes.List.Current.SCRIPT_TYPE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TRScriptSteps.List.Current.SCRIPT_STEP.Description) > 50 , Substr(TRScriptSteps.List.Current.SCRIPT_STEP.Description,0,50) + \"...\" , TRScriptSteps.List.Current.SCRIPT_STEP.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"Substr(Replace(Comment,NewLine(),\" \"),0,150) + If(Length(Replace(Comment,NewLine(),\" \"))>150,\"...\",\"\")","type":"Text","functions":["Substr","Replace","NewLine","If","Length"]}
{"text":"If(TextToDate(TableInfoShow.List.Current.InformationRendered_Show.InformationValue)=NullDate(),\"No answer given\",TableInfoShow.List.Current.InformationRendered_Show.InformationValue)","type":"Text","functions":["If","TextToDate","NullDate"]}
{"text":"Replace(\nIf(Length(TRNonConformities.List.Current.NonConformitiesReport.Lojas)> 70, Substr(TRNonConformities.List.Current.NonConformitiesReport.Lojas,0,70)+\"(...)\",TRNonConformities.List.Current.NonConformitiesReport.Lojas),\";\",\"<br/>\")\n","type":"Text","functions":["Replace","If","Length","Substr"]}
{"text":"DateTimeToDate(TableRecords1.List.Current.NOTE.Date) + \" \" + FormatText(Hour(TableRecords1.List.Current.NOTE.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.NOTE.Date),2,2,True,\"0\")","type":"Text","functions":["DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"GetAccao.List.Current.Accao.NrOrdem + \" - \" + If(AccaoId = NullIdentifier(),\"Nova AcÃ§Ã£o\",Substr(GetAccao.List.Current.Accao.Titulo,0,99) + If(Length(GetAccao.List.Current.Accao.Titulo) > 99,\"(...)\",\"\"))","type":"Text","functions":["If","NullIdentifier","Substr","Length"]}
{"text":"\"Diff \" + Substr(Session.Filter_IncrementComparisonCompany.Filter_IncrementComparisonCompany.Year,2,2) + \"/\" + Substr(IntegerToText(TextToInteger(Session.Filter_IncrementComparisonCompany.Filter_IncrementComparisonCompany.Year) - 1),2,2)","type":"Text","functions":["Substr","IntegerToText","TextToInteger"]}
{"text":"If(AccidentsTR.List.Current.Pending_AT.Date = NullDate(), \"(nÃ£o definida)\", DateTimeToDate(AccidentsTR.List.Current.Pending_AT.Date) + \" \" + FormatText(Hour(AccidentsTR.List.Current.Pending_AT.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(AccidentsTR.List.Current.Pending_AT.Date),2,2,True,\"0\"))","type":"Text","functions":["If","NullDate","DateTimeToDate","FormatText","Hour","Minute"]}
{"text":"If(AccidentDataShowRecord.Record.ACCIDENT_DATA.AbsenceStartDateTime = NullDate(), \"\", Substr(AccidentDataShowRecord.Record.ACCIDENT_DATA.AbsenceStartDateTime, 0, Length(AccidentDataShowRecord.Record.ACCIDENT_DATA.AbsenceStartDateTime)-3))","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"If(AccidentDataShowRecord.Record.ACCIDENT_DATA.DateTime = NullDate(), \"\", Substr(AccidentDataShowRecord.Record.ACCIDENT_DATA.DateTime, 0, Length(AccidentDataShowRecord.Record.ACCIDENT_DATA.DateTime)-3))","type":"Text","functions":["If","NullDate","Substr","Length"]}
{"text":"Substr(TableRecords1.List.Current.SURVEY.Description,0,Min(Length(TableRecords1.List.Current.SURVEY.Description),50)) + If (Length(TableRecords1.List.Current.SURVEY.Description) <= 50, \"\", \"...\")","type":"Text","functions":["Substr","Min","Length","If"]}
{"text":"\"<iframe src=\"\"\" + If( not LoadOnExternalEvent, AddPersonalAreaToURLPath(\"/SurveyingServices/AnswerSurvey.aspx?Solution=\" + GetEntryEspaceName() + \"&SurveyId=\" + (PublicationId + If (CSSURL <> \"\", \"&CSSURL=\" + EncodeUrl(CSSURL), \"\") ) + \"&Locale=\" + Locale + \"&ExternalId=\" + ExternalId + \"&ModuleName=\" +ModuleName + \"&OnSurveySave=\" + OnSurveySave + \"&ForceOpen=\" + ForceOpen), \"\") +   \"\"\" width=\"\"\" + width + \"\"\" frameborder=\"\"0\"\" scrolling=\"\"auto\"\" height=\"\"\" + height + \"\"\" id=\"\"cfgiframe\"\" name=\"\"cfgiframe\"\"></iframe>\"","type":"Text","functions":["If","AddPersonalAreaToURLPath","GetEntryEspaceName","EncodeUrl"]}
{"text":"FormatText(Hour(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.StartHour), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.StartHour), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"FormatText(Hour(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.EndHour), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.EndHour), 2, 2, True, \"0\")","type":"Text","functions":["FormatText","Hour","Minute"]}
{"text":"NewLine()+\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded' style='display: block' \"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\"\n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'block');\"+NewLine()+\" \n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'none');\"+NewLine()+\"\n\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'none');\"\" >\"+NewLine()+\n\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_closed\",\"_expanded\")+NewLine()\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+\"  \"+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Gera um gera o grÃ¡fico desta Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/G_Pie.gif\"\"></a>\"+\n\n\"</div>\"+\n\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_closed' style='display: none'\"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'block');\"+NewLine()+\"  \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'none');\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'block');\"\" >\"+NewLine()+\n\t\t\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_expanded\",\"_closed\")\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Gera um gera o grÃ¡fico desta Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/G_Pie.gif\"\"></a>\"+\n\"</div>\"+NewLine()\n+ListAreas.List.Current.TreeRow.HTML_DIV\n","type":"Text","functions":["NewLine","Replace","ToLower"]}
{"text":"If(Length(TableRecords1.List.Current.NOTE.Description) > 256, Substr(TableRecords1.List.Current.NOTE.Description, 0, 256) + \"...\", TableRecords1.List.Current.NOTE.Description)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(TableRecords1.List.Current.DOCUMENT.Filename) > 20, Substr(TableRecords1.List.Current.DOCUMENT.Filename, 0, 20) + \"...\", TableRecords1.List.Current.DOCUMENT.Filename)","type":"Text","functions":["If","Length","Substr"]}
{"text":"NewLine()+\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded' style='display: block' \"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\"\n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'block');\"+NewLine()+\" \n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'none');\"+NewLine()+\"\n\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'none');\"\" >\"+NewLine()+\n\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_closed\",\"_expanded\")+NewLine()\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+\"  \"+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Edita Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/arrow.png\"\"></a>\"+\n\n\"</div>\"+\n\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_closed' style='display: none'\"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'block');\"+NewLine()+\"  \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'none');\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'block');\"\" >\"+NewLine()+\n\t\t\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_expanded\",\"_closed\")\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Edita Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/arrow.png\"\"></a>\"+\n\"</div>\"+NewLine()\n+ListAreas.List.Current.TreeRow.HTML_DIV\n","type":"Text","functions":["NewLine","Replace","ToLower"]}
{"text":"TrimEnd(TrimStart(Substr(VendasDivisaoTable.List.Current.VendasDivisao.Divisao,0,7)))","type":"Text","functions":["TrimEnd","TrimStart","Substr"]}
{"text":"Substr(HistoryTable.List.Current.HISTORY.Message, 0, 50) + If(Length(HistoryTable.List.Current.HISTORY.Message) > 50, \"...\", \"\")","type":"Text","functions":["Substr","If","Length"]}
{"text":"Hour(DateTimeToTime(TableRecordsPlannedMaintenances2.List.Current.PLANNED_MAINTENANCE.DateTimePLanned))+\":\"+\nMinute(DateTimeToTime(TableRecordsPlannedMaintenances2.List.Current.PLANNED_MAINTENANCE.DateTimePLanned))","type":"Text","functions":["Hour","DateTimeToTime","Minute"]}
{"text":"If(ERChangeTax.Record.VALIDATION.ValidatedBy = NullIdentifier(), If(ERChangeTax.Record.VALIDATION.Status = Entities.VALIDATION_STATUS.VALIDATED, \"Sistema (automaticamente)\", \"-\"),ERChangeTax.Record.USER_MASTER_5.Name) + If( ERChangeTax.Record.VALIDATION.ValidationDate = NullDate(),\"\",\" em \" +ERChangeTax.Record.VALIDATION.ValidationDate)","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"If(ERChangeTax.Record.VALIDATION.CreatedBy = NullIdentifier(),\"-\",ERChangeTax.Record.USER_MASTER_3.Name) + If(ERChangeTax.Record.VALIDATION.CreationDate = NullDate(),\"\",\" em \" + ERChangeTax.Record.VALIDATION.CreationDate)","type":"Text","functions":["If","NullIdentifier","NullDate"]}
{"text":"Substr(TRClauseDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION_IMPORT.Descricao,0,50) + If(Length(TRClauseDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION_IMPORT.Descricao) > 50,\"...\",\"\")\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"\"Entre \" + OverridedDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION.Startdate + \" e \" + OverridedDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION.Enddate + \" - \" + Substr(OverridedDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION.Description,0,47) + If(Length(OverridedDescriptions.List.Current.CLAUSE_CODE_DESCRIPTION.Description) > 47 , \"...\", \"\")\n\n","type":"Text","functions":["Substr","If","Length"]}
{"text":"If(Length(OccurrenceTable.List.Current.DD_ENTITY_4.Name)>30, Substr(OccurrenceTable.List.Current.DD_ENTITY_4.Name,0,26)+\"...\", OccurrenceTable.List.Current.DD_ENTITY_4.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OccurrenceTable.List.Current.DD_ENTITY_3.Name)>30, Substr(OccurrenceTable.List.Current.DD_ENTITY_3.Name,0,26)+\"...\", OccurrenceTable.List.Current.DD_ENTITY_3.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OccurrenceTable.List.Current.DD_ENTITY_2.Name)>30, Substr(OccurrenceTable.List.Current.DD_ENTITY_2.Name,0,26)+\"...\", OccurrenceTable.List.Current.DD_ENTITY_2.Name)","type":"Text","functions":["If","Length","Substr"]}
{"text":"If(Length(OccurrenceTable.List.Current.OCCURRENCE.Description)>30, Substr(OccurrenceTable.List.Current.OCCURRENCE.Description,0,26)+\"...\", OccurrenceTable.List.Current.OCCURRENCE.Description)","type":"Text","functions":["If","Length","Substr"]}
