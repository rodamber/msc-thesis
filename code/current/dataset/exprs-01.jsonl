{"text": "FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "ToLower(Substr(GetAssetDetails.List.Current.DBBackupFrequency.Label,0,1)) + Substr(GetAssetDetails.List.Current.DBBackupFrequency.Label,1,Length(GetAssetDetails.List.Current.DBBackupFrequency.Label)-1)", "type": "Text", "functions": ["ToLower", "Substr", "Length"]}
{"text": "ToLower(Substr(VMAssetsTable.List.Current.DBBackupFrequency.Label,0,1)) + Substr(VMAssetsTable.List.Current.DBBackupFrequency.Label,1,Length(VMAssetsTable.List.Current.DBBackupFrequency.Label)-1)", "type": "Text", "functions": ["ToLower", "Substr", "Length"]}
{"text": "ToLower(Substr(VMAssetsTable.List.Current.VMBackupFrequency.Label,0,1)) + Substr(VMAssetsTable.List.Current.VMBackupFrequency.Label,1,Length(VMAssetsTable.List.Current.VMBackupFrequency.Label)-1)", "type": "Text", "functions": ["ToLower", "Substr", "Length"]}
{"text": "\"Sprint: \"+TrimStart(Substr(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint,Index(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint,\"-\")+1,Length(TableRecordsWorkitems.List.Current.ANP_TIMESHEET_ITEM.Sprint)))\n\n\n\n", "type": "Text", "functions": ["TrimStart", "Substr", "Index", "Length"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AuditEvents_List.Duration)/1000-60*Trunc(AuditList.List.Current.AuditEvents_List.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AuditEvents_List.Duration)/1000-60*Trunc(AuditList.List.Current.AuditEvents_List.Duration/60000),0,\",\",\" \"),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "\"Sprint: \"+TrimStart(Substr(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint,Index(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint,\"-\")+1,Length(TableRecordsWorkitemsPA.List.Current.ANP_TIMESHEET_ITEM.Sprint)))\n\n\n\n", "type": "Text", "functions": ["TrimStart", "Substr", "Index", "Length"]}
{"text": "TrimEnd(Substr(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,0,Index(TableRecordsTimesheets.List.Current.ExportAllTimesheets.WorkItem_Description,\"\\\")))", "type": "Text", "functions": ["TrimEnd", "Substr", "Index"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "DecimalToInteger(Abs(DiffDays(CurrDateTime(),GetPlayerById.List.Current.Player.DateOfBirth)/365)) + \" Anos\"", "type": "Text", "functions": ["DecimalToInteger", "Abs", "DiffDays", "CurrDateTime"]}
{"text": "Substr(FormatDateTime(DateTimeToTime(ValueComparisonTableRecords.List.Current.ProfileValueComparison.EndDate), \"HH:mm:ss\"), 0, 5)", "type": "Text", "functions": ["Substr", "FormatDateTime", "DateTimeToTime"]}
{"text": "Substr(FormatDateTime(DateTimeToTime(ValueComparisonTableRecords.List.Current.ProfileValueComparison.StartDate), \"HH:mm:ss\"), 0, 5)", "type": "Text", "functions": ["Substr", "FormatDateTime", "DateTimeToTime"]}
{"text": "Substr(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version, \n       Index(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ApplicationVersions[SecondVersionIndex].Eindhoven_ApplicationVersion.Version)\n)", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version, \n       Index(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ApplicationVersions[Index].Eindhoven_ApplicationVersion.Version)\n)", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version, \n       Index(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version, \".\") +1, \n       Length(ListVersions.List.Current.Eindhoven_ApplicationVersion.Version)\n)", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Replace(Replace(Replace(Replace(Replace(Replace(SyncErrors.List.Current.Eindhoven_SyncErrorDetail.Detail,Chr(13),\"\"), Chr(10),\"\"),\"\\r\\n\",\"\"),\"\\n\",\"\"),NewLine(),\"\"),\"<br>\",\"\")", "type": "Text", "functions": ["Replace", "Chr", "NewLine"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "FormatText(Hour(AddHours(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate,1)), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "AddHours", "Minute"]}
{"text": "FormatText(Hour(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.sGasContractsHourlyDetails.StartDate), 2, 2, True, \"0\")\n", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "\"Details on \" + FormatText(Hour(StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecords1.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecords.List.Current.Position.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.Position.StartInterval), 2, 2, True, \"0\")\n", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(ProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")\n", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecordsProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecordsProfileValues.List.Current.ProfileValue.StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "Substr(ReportsTR.List.Current.Report_PivotData.Name, Index(ReportsTR.List.Current.Report_PivotData.Name, \"/\") + 1, Length(ReportsTR.List.Current.Report_PivotData.Name)-5 - Index(ReportsTR.List.Current.Report_PivotData.Name, \"/\"))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(ReportsTR.List.Current.Report_PivotData.Name, Index(ReportsTR.List.Current.Report_PivotData.Name, \"_\") + 1, Length(ReportsTR.List.Current.Report_PivotData.Name)-6)", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr( Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)), 0, 200) +\n\nSubstr( Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)), \n        200,\n        Index(\n               Substr(\n                       Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32)),\n                       200,\n                       Length(Replace( TableRecords1.List.Current.NewWorkload.issueDesc, Chr(10), Chr(32))) - 200\n), \n               \" \"\n)\n) +\n\n\"...\"\n\n ", "type": "Text", "functions": ["Substr", "Replace", "Chr", "Index", "Length"]}
{"text": "Substr( Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)), 0, 200) +\n\nSubstr( Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)), \n        200,\n        Index(\n               Substr(\n                       Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32)),\n                       200,\n                       Length(Replace( TableRecords1.List.Current.ISSUE.Description, Chr(10), Chr(32))) - 200\n), \n               \" \"\n)\n) +\n\n\"...\"\n\n ", "type": "Text", "functions": ["Substr", "Replace", "Chr", "Index", "Length"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(UseModalDialog)) + \", \" + ToLower(BooleanToText(ShowCloseButton)) + \", \" + ToLower(BooleanToText(CloseOnEscape)) + \");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "\"(\" + Substr(FormatDateTime(FromDate, \"dd MMMM yyyy\"),0,Length(FormatDateTime(FromDate, \"dd MMMM yyyy\")) - 5) + \" to \" + Substr(FormatDateTime(CurrDate(), \"dd MMMM yyyy\"),0,Length(FormatDateTime(CurrDate(), \"dd MMMM yyyy\")) - 5) + \")\"", "type": "Text", "functions": ["Substr", "FormatDateTime", "Length", "CurrDate"]}
{"text": "\"By <span title='\"+ListRecentUpdates.List.Current.Query_RecentUpdates.UpdateByName+\"'>\"+ListRecentUpdates.List.Current.Query_RecentUpdates.UpdateByUsername+\"</span> on \"+FormatDateTime(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt, \"yyyy-MM-dd\")+\" \"+Hour(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt)+\":\"+Minute(ListRecentUpdates.List.Current.Query_RecentUpdates.UpdatedAt)", "type": "Text", "functions": ["FormatDateTime", "Hour", "Minute"]}
{"text": "Substr(HighchartTable.List.Current.Highchart.HelpLink,Index(HighchartTable.List.Current.Highchart.HelpLink,\"#\",startIndex:,searchFromEnd:,ignoreCase:),Length(HighchartTable.List.Current.Highchart.HelpLink))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonWidgetId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "\"<script type='text/javascript'>\n\n        var containerid = '#\" + EncodeJavaScript(InputId) + \"';\n\n        $(containerid).attr('data-default-date','\"+EncodeJavaScript(FormatDateTime(defaultdate,\"MM-dd-yyyy\"))+\"');\n        $(containerid).attr('data-disabled-days','\"+EncodeJavaScript(disableddays)+\"');\n        $(containerid).attr('data-format','\"+EncodeJavaScript(format)+\"');\n        $(containerid).attr('data-fx','\"+EncodeJavaScript(ToLower(BooleanToText(fx)))+\"');\n        $(containerid).attr('data-fx-mobile','\"+EncodeJavaScript(ToLower(BooleanToText(fxmobile)))+\"');\n        $(containerid).attr('data-init-set','\"+EncodeJavaScript(ToLower(BooleanToText(initset)))+\"');\n        $(containerid).attr('data-lang','\"+EncodeJavaScript(lang)+\"');\n        $(containerid).attr('data-large-mode', '\"+EncodeJavaScript(ToLower(BooleanToText(largemode)))+\"');\n        $(containerid).attr('data-large-default','\"+EncodeJavaScript(ToLower(BooleanToText(largedefault)))+\"');\n        $(containerid).attr('data-lock','\"+EncodeJavaScript(lock)+\"');\n        $(containerid).attr('data-jump','\"+EncodeJavaScript(jump)+\"');\n        $(containerid).attr('data-max-year','\"+EncodeJavaScript(Year(maxYear))+\"');\n        $(containerid).attr('data-min-year','\"+EncodeJavaScript(Year(minYear))+\"');\n        $(containerid).attr('data-modal','\"+EncodeJavaScript(ToLower(BooleanToText(modal)))+\"');\n        $(containerid).attr('data-theme','\"+EncodeJavaScript(theme)+\"');\n        $(containerid).attr('data-translate-mode','\"+EncodeJavaScript(ToLower(BooleanToText(translatemode)))+\"');\n\n        $(containerid).dateDropper();\n\n</script>\"", "type": "Text", "functions": ["EncodeJavaScript", "FormatDateTime", "ToLower", "BooleanToText", "Year"]}
{"text": "\"<iframe src=\"\"\"+Substr(GetBookmarkableURL(),0,Index(GetBookmarkableURL(),\"/\",8)) + GetOwnerURLPath() + \"EntryViewerHTML.aspx?file=\" + EncodeUrl(URL) +\"\"\" style=\"\"width: \"+FrameWidth+\";height: \"+FrameHeight+\";\"\" ></iframe>\"\n", "type": "Text", "functions": ["Substr", "GetBookmarkableURL", "Index", "GetOwnerURLPath", "EncodeUrl"]}
{"text": "\"<Script>\n$(document).ready(function() {\n    Magnific_Popup_Iframe_init('\"+ EncodeJavaScript(LinkOrButtonWidgetId) +\"','\"+\n                                   Magnific_Popup.RuntimeId + \"',\"+\n                                   ToLower(BooleanToText(IsModal)) + \",\" +\n                                   ToLower(BooleanToText(ShowCloseBtn)) + \",'\" +\n                                   EncodeJavaScript(MaxWidth) + \"');\n\n});\n</Script>\"", "type": "Text", "functions": ["EncodeJavaScript", "ToLower", "BooleanToText"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "\"<script>\n    $(document).ready(function() {\n        $('#\"+StickyPlace.Id+\"').sticky({\n            topSpacing: \" + EncodeJavaScript(TopSpacing) + \",\n            bottomSpacing: \" + EncodeJavaScript(BottomSpacing) + \",\n            className: '\" + EncodeJavaScript(className) + \"',\n            wrapperClassName: '\" + EncodeJavaScript(wrapperClassName) + \"',\n            center: \" + EncodeJavaScript(ToLower(BooleanToText(center))) + \",\n            getWidthFrom: '\" + EncodeJavaScript(getWidthFrom) + \"',\n            widthFromWrapper: \" + EncodeJavaScript(ToLower(BooleanToText(widthFromWrapper))) + \",\n            responsiveWidth: \" + EncodeJavaScript(ToLower(BooleanToText(responsiveWidth))) + \",\n            zIndex: '\" + EncodeJavaScript(zIndex) + \"'\n        });\n    });\n</script>\"", "type": "Text", "functions": ["EncodeJavaScript", "ToLower", "BooleanToText"]}
{"text": "\"<script>\n    $('#\" + EncodeJavaScript(InputId) + \"').timeDropper({\n        autoswitch: \" + EncodeJavaScript(ToLower(BooleanToText(autoswitch))) + \",\n        meridians: \" + EncodeJavaScript(ToLower(BooleanToText(meridians))) + \",\n        format: '\" + EncodeJavaScript(format) + \"',\n        mousewheel: \" + EncodeJavaScript(ToLower(BooleanToText(mousewheel))) + \",\n        init_animation: '\" + EncodeJavaScript(init_animation) + \"',\n        setCurrentTime: \" + EncodeJavaScript(ToLower(BooleanToText(setCurrentTime))) + \",\n        primaryColor: '\" + EncodeJavaScript(primaryColor) + \"',\n        textColor: '\" + EncodeJavaScript(textColor) + \"',\n        backgroundColor: '\" + EncodeJavaScript(backgroundColor) + \"',\n        borderColor: '\" + EncodeJavaScript(borderColor) + \"'\n    });\n</script>\"", "type": "Text", "functions": ["EncodeJavaScript", "ToLower", "BooleanToText"]}
{"text": "Hour(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)+\":\"+Minute(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)+\":\"+Second(TestCaseListRecords.List.Current.TestScriptRuntime.UpdatedOn)", "type": "Text", "functions": ["Hour", "Minute", "Second"]}
{"text": "Hour(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)+\":\"+Minute(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)+\":\"+Second(TestCaseListRecords.List.Current.TestScriptRuntime.CreatedOn)", "type": "Text", "functions": ["Hour", "Minute", "Second"]}
{"text": "\"<script>\n    $(document).ready(function() {\n        $('#\" + EncodeJavaScript(ElementId) + \"').tubular({\n            videoId: '\" + EncodeJavaScript(VideoId) + \"',\n            mute: \" + EncodeJavaScript(ToLower(BooleanToText(Mute))) + \",\n            repeat: \" + EncodeJavaScript(ToLower(BooleanToText(Repeat))) + \",\n            wrapperZIndex: \" + EncodeJavaScript(WrapperZIndex) + \",\n            start: \" + EncodeJavaScript(Start) + \"\n        });\n    })\n</script>\"", "type": "Text", "functions": ["EncodeJavaScript", "ToLower", "BooleanToText"]}
{"text": "Substr(FormatDateTime(Date, \"dd:MMMM\"),Index(FormatDateTime(Date, \"dd:MMMM\"),\":\") + 1,(Length(FormatDateTime(Date, \"dd:MMMM\")) - Index(FormatDateTime(Date, \"dd:MMMM\"),\":\"))) + \" of \" + Year(Date)", "type": "Text", "functions": ["Substr", "FormatDateTime", "Index", "Length", "Year"]}
{"text": "Substr(\n    LogTable.List.Current.Log.Message,\n    0,\n    Min(\n        Index(LogTable.List.Current.Log.Message, Chr(10)),\n        150\n    )\n)", "type": "Text", "functions": ["Substr", "Min", "Index", "Chr"]}
{"text": "Substr(\n    GetLogById.List.Current.Log.Message,\n    0,\n    Min(\n        Index(GetLogById.List.Current.Log.Message, Chr(10)),\n        150\n    )\n)", "type": "Text", "functions": ["Substr", "Min", "Index", "Chr"]}
{"text": "FormatText(Day(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")\n\n", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year", "Hour", "Minute"]}
{"text": "\"Email Message To \" + GetEmailMessageDetailsById.List.Current.EmailMessage.To + \" On \" + FormatText(Day(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(GetEmailMessageDetailsById.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")\n\n", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year", "Hour", "Minute"]}
{"text": "FormatText(Day(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(FailedImportNotificationTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year", "Hour", "Minute"]}
{"text": "FormatText(Day(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+FormatText(Month(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\"-\"+Year(EmailMessageTable.List.Current.EmailMessage.DateTimeSent)+\" \"+FormatText(Hour(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")+\":\"+FormatText(Minute(EmailMessageTable.List.Current.EmailMessage.DateTimeSent),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year", "Hour", "Minute"]}
{"text": "DateTimeToDate(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn) +\" \"+ Hour(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn) + \":\" + FormatText(Minute(ProdPlanRemarkTable.List.Current.ProdPlan_Remarks.ChangeOn),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt, \"yyyy-MM-dd\")\n+ \" \" +\nFormatText(Hour(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt),2,2,True,\"0\")\n+ \":\" +\nFormatText(Minute(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.StartedAt),2,2,True,\"0\")\n\n", "type": "Text", "functions": ["FormatDateTime", "FormatText", "Hour", "Minute"]}
{"text": "FormatDateTime(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt, \"yyyy-MM-dd\")\n+ \" \" +\nFormatText(Hour(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt),2,2,True,\"0\")\n+ \":\" +\nFormatText(Minute(RealizedProcessDetail_Record.AccountingRealizedProcessDetail.UpdatedStatusAt),2,2,True,\"0\")\n", "type": "Text", "functions": ["FormatDateTime", "FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(AddHours(StartInterval,OffSet)), 2, 2, True, \"0\") + \":\" + FormatText(Minute(AddHours(StartInterval,OffSet)), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "AddHours", "Minute"]}
{"text": "FormatText(Hour(TableRecords.List.Current.TimeSeriesData.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords.List.Current.TimeSeriesData.StartInterval), 2, 2, True, \"0\")\n", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "Substr(LogShow.Record.LogList.FileName,\n       Index(LogShow.Record.LogList.FileName,\"\\\",0,True) + 1, \n       Length(LogShow.Record.LogList.FileName))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "FormatText(Hour(TableRecordsUMM.List.Current.UMSContent.ChangedOn),2,2,True,\"0\")\n + \":\" + FormatText(Minute(TableRecordsUMM.List.Current.UMSContent.ChangedOn),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatDateTime(AddMonths(NewDate(Year,Month,1),1), \"MMMM yyyy\") + \" >\"", "type": "Text", "functions": ["FormatDateTime", "AddMonths", "NewDate"]}
{"text": "\"< \" + FormatDateTime(AddMonths(NewDate(Year,Month,1),-1), \"MMMM yyyy\")", "type": "Text", "functions": ["FormatDateTime", "AddMonths", "NewDate"]}
{"text": "\"hÃ¡ \" + DiffHours(CurrTime(),TextToTime(R_Certificado.Cursor_SaberCertificadoProvPN.HORA_EMISSAO)) + \" hora(s)\"", "type": "Text", "functions": ["DiffHours", "CurrTime", "TextToTime"]}
{"text": "Substr(FormatDateTime(CurrDate, \"dd MMMM yyyy\"), 3, Length(FormatDateTime(CurrDate, \"dd MMMM yyyy\")))", "type": "Text", "functions": ["Substr", "FormatDateTime", "Length"]}
{"text": "Substr(FormatDateTime(AddMonths(CurrDate, -1), \"dd MMMM yyyy\"), 3, Length(FormatDateTime(AddMonths(CurrDate, -1), \"dd MMMM yyyy\")))", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddMonths", "Length"]}
{"text": "Day(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Month(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Year(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Month(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Year(SupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Month(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate) + \"-\" + Year(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.EndDate)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Month(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate) + \"-\" + Year(GeneralSupplyCapacityNeedTableDetails.List.Current.AggregateNeedsStruct.StartDate)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "\"<script language='javascript' type='text/javascript'>\n$(document).ready(function(){\n    var url = $('.MainBanner .'+$('.MainBanner:nth-child(1)').attr('backImage')+' ').attr('src');\n    $('.Main_Background').css('background', \"\"url('\"\" + url + \"\"') no-repeat\"\").fadeIn(10);\n    $.cookie('PN_BACKGROUND', url, { expires: 7, path: '/' });\n\n    var bannerStatusAux = $.cookie('PN_BANNERSTATUS');\n    if(bannerStatusAux != null){\n        var bannerStatus = bannerStatusAux.split('.')[0];\n        var bannerDate = bannerStatusAux.split('.')[1];\n\n        if(bannerDate<'\"+DateToText(GetNews.List.Current.News.NewsDate)+\"') {\n            if(bannerStatus == 'colapsed'){\n                $.cookie('PN_BANNERSTATUS', 'expanded', { expires: 7, path: '/' });\n                bannerStatus = 'expanded';\n            }   \n        }  \n    }\n\n    /*Tooltip*/\n    var moreNewsLnk = $('#\" + MoreNews.Id + \"');\n    if((bannerDate<'\"+DateToText(GetNews.List.Current.News.NewsDate)+ \"') || (bannerDate==null && \"+ToLower(GetNews.List.Current.News.NewsDate>=CurrDate())+\"==true)) {\n            /*Mostra tooltip para quando existe uma noticia nova*/\n            moreNewsLnk.tooltipster('show').tooltipster('disable');\n\n            /*Esconde a tooltip ao fim de 5 segundos*/\n            setTimeout(function() { \n                moreNewsLnk.tooltipster('hide').tooltipster('disable'); \n            },5000); \n     } else {\n            /*Por omissao esconde a tooltip*/\n            moreNewsLnk.tooltipster('hide').tooltipster('disable'); \n    }   \n\n    if(bannerStatus == null || bannerStatus != 'colapsed'){\n        $('.BannerExpanded').show()\n        setupCarrousel('\" + BannerContainer.Id + \"','\" + DivPagination.Id + \"','\" + lnkPrevious.Id + \"','\" + lnkNext.Id + \"');\n    }\n    else{\n        var htmlText = $('.MainBanner:nth-child(1) .MainBannerTitle').html().replace(/<br>/g,' ');\n        $('.BannerColapsedText').html(htmlText);\n        \n        if($.browser.msie && $.browser.version <= 8)\n            $('.Main_Background_Overlay').css('filter', 'alpha(opacity=90)');\n        \n        $('.Main_Background_Overlay').fadeIn();\n\n        $('.BannerColapsed').show();\n    }  \n\n    $('#\" + BtnColapse.Id + \"').click(function(){\n        var htmlText = $('.MainBanner:visible .MainBannerTitle').html().replace(/<br>/g,' ');\n        $('.BannerColapsedText').html(htmlText);\n        $('#\" + BannerContainer.Id + \"').trigger('stop', true);\n        \n        $('#\" + MoreNews.Id + \"').tooltipster('hide').tooltipster('disable'); \n        $.cookie('PN_BANNERSTATUS', 'colapsed.'+'\"+GetNews.List.Current.News.NewsDate+\"', { expires: 7, path: '/' });\n\n        var originalHeight = $('.BannerExpanded').css('height');\n        var newHeight = $('.BannerColapsed').css('height');\n\n        $('.BannerExpanded').animate({height: newHeight}, 1000, function(){\n            $('.BannerExpanded').hide();\n            $('.BannerExpanded').css('height', originalHeight);\n                    \n            if($.browser.msie && $.browser.version <= 8)\n               $('.Main_Background_Overlay').css('filter', 'alpha(opacity=90)');\n            \n            $('.Main_Background_Overlay').fadeIn();\n           \n            $('.BannerColapsed').show();\n        });\n    });\n\n    $('#\" + BtnExpand.Id + \"').click(function(){\n        $.cookie('PN_BANNERSTATUS', 'expanded', { expires: 7, path: '/' });\n        $('.BannerColapsed').hide();\n        \n        if($('#\" + BannerContainer.Id + \"').data('inited')){\n            $('.BannerExpanded').slideDown(1000);\n            $('#\" + BannerContainer.Id + \"').trigger('play', true);\n        }\n        else{\n            $('.BannerExpanded').slideDown(1000, function(){\n                setupCarrousel('\" + BannerContainer.Id + \"','\" + DivPagination.Id + \"','\" + lnkPrevious.Id + \"','\" + lnkNext.Id + \"');\n            });\n        }\n        //$('#\" + BannerContainer.Id + \"').trigger('next', true);\n        $('.Main_Background_Overlay').fadeOut();\n    });\n});\n</script>\"", "type": "Text", "functions": ["DateToText", "ToLower", "CurrDate"]}
{"text": "Substr(NewTime(Hour(EventActivityRec.EndDateTime_Local),Minute(EventActivityRec.EndDateTime_Local),0),0,Length(NewTime(Hour(EventActivityRec.EndDateTime_Local),Minute(EventActivityRec.EndDateTime_Local),0))-3)", "type": "Text", "functions": ["Substr", "NewTime", "Hour", "Minute", "Length"]}
{"text": "Substr(NewTime(Hour(EventActivityRec.StartDateTime_Local),Minute(EventActivityRec.StartDateTime_Local),0),0,Length(NewTime(Hour(EventActivityRec.StartDateTime_Local),Minute(EventActivityRec.StartDateTime_Local),0))-3)", "type": "Text", "functions": ["Substr", "NewTime", "Hour", "Minute", "Length"]}
{"text": "Substr(NewTime(Hour(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),Minute(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),0),0,Length(NewTime(Hour(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),Minute(GetTimelogLineById.List.Current.TimelogEntry.LineDateTime_Local),0))-3)", "type": "Text", "functions": ["Substr", "NewTime", "Hour", "Minute", "Length"]}
{"text": "\"Planning: \"+Day(WITable.List.Current.PlanningDateTime)+\"-\"+Month(WITable.List.Current.PlanningDateTime) + \" \" + Substr(DateTimeToTime(WITable.List.Current.PlanningDateTime),0,5)", "type": "Text", "functions": ["Day", "Month", "Substr", "DateTimeToTime"]}
{"text": "\"Planning: \"+Day(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime)+\"-\"+Month(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime) + \" \" + Substr(DateTimeToTime(WITable.List.Current.SelectWorkInstructionStr.PlanningDateTime),0,5)", "type": "Text", "functions": ["Day", "Month", "Substr", "DateTimeToTime"]}
{"text": "NewDate(Year(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(trListarPdCs.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsPedidoCotacaoById.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ImpostoSelo,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.IRS,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoPremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoPremiosNaoVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoEstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.ComissaoEstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.EstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.EstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.PremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas2.PremiosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "NewDate(Year(ListaTarefas.Current.GAC_TAREFA.DataSituacao),Month(ListaTarefas.Current.GAC_TAREFA.DataSituacao),Day(ListaTarefas.Current.GAC_TAREFA.DataSituacao))\n", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(ListaTarefas.Current.GAC_TAREFA.DataActivacao),Month(ListaTarefas.Current.GAC_TAREFA.DataActivacao),Day(ListaTarefas.Current.GAC_TAREFA.DataActivacao))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim),Month(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim),Day(ListaAccoes.Current.GAC_HomeTrAccoes.DataFim))\n", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio),Month(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio),Day(ListaAccoes.Current.GAC_HomeTrAccoes.DataInicio))\n", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(TRTarefas.List.Current.GAC_TAREFA.DataActivacao),Month(TRTarefas.List.Current.GAC_TAREFA.DataActivacao),Day(TRTarefas.List.Current.GAC_TAREFA.DataActivacao))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewTime(Hour(TRContactos.List.Current.GAC_CONTACTO.DataHora),Minute(TRContactos.List.Current.GAC_CONTACTO.DataHora),Second(TRContactos.List.Current.GAC_CONTACTO.DataHora))", "type": "Time", "functions": ["NewTime", "Hour", "Minute", "Second"]}
{"text": "NewDate(Year(TRContactos.List.Current.GAC_CONTACTO.DataHora),Month(TRContactos.List.Current.GAC_CONTACTO.DataHora),Day(TRContactos.List.Current.GAC_CONTACTO.DataHora))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(ShowRecord1.Record.GAC_ALERTA.DataFinal),Month(ShowRecord1.Record.GAC_ALERTA.DataFinal),Day(ShowRecord1.Record.GAC_ALERTA.DataFinal))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(ShowRecord1.Record.GAC_ALERTA.DataInicial),Month(ShowRecord1.Record.GAC_ALERTA.DataInicial),Day(ShowRecord1.Record.GAC_ALERTA.DataInicial))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "DateTimeToDate(TableNotes.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords1.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords1.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords4.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords4.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords4.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords3.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords3.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords3.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords2.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TableRecords2.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords2.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TablePublicNotes.List.Current.EP_NOTE.CreatedAt) + \" \" + FormatText(Hour(TablePublicNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(TablePublicNotes.List.Current.EP_NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableClosedIssues.List.Current.ISSUE.ClosedAt)+\" \"+Hour(TableClosedIssues.List.Current.ISSUE.ClosedAt)+\":\"+Minute(TableClosedIssues.List.Current.ISSUE.ClosedAt)", "type": "Text", "functions": ["DateTimeToDate", "Hour", "Minute"]}
{"text": "FormatText(Hour(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\":\"+FormatText(Minute(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\" | \"+FormatText(Hour(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DuracaoPrevista),2,2,True,\"0\")+\"h\"+FormatText(Minute(TablePreAgendamentos.List.Current.AG_PROP.Cirurgia_DuracaoPrevista),2,2,True,\"0\")+\"m\"\n\n", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableNovasCNPP.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")+\":\"+FormatText(Minute(TableNovasCNPP.List.Current.AG_PROP.Cirurgia_DataHora_Proposta),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecords1.List.Current.PROFILE_VALUE.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.PROFILE_VALUE.StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "Substr(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,0,Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\") ) + NewLine() + Substr(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\")+2, Length(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address) - Index(TableMACGDNotification.List.Current.st_NewMA_Notification_CGC.Connection_Address,\",\") - 2)", "type": "Text", "functions": ["Substr", "Index", "NewLine", "Length"]}
{"text": "NewTime(Hour(ListRecords1.List.Current.ContactActivityList_LogList.Datetime),Minute(ListRecords1.List.Current.ContactActivityList_LogList.Datetime),Second(ListRecords1.List.Current.ContactActivityList_LogList.Datetime))", "type": "Time", "functions": ["NewTime", "Hour", "Minute", "Second"]}
{"text": "FormatDateTime(TableRecordsEmails.List.Current.Email.DATERECEIVED, \"dd MMMM\") + \"@\" +\nHour(TableRecordsEmails.List.Current.Email.DATERECEIVED) + \":\" + FormatText(Minute(TableRecordsEmails.List.Current.Email.DATERECEIVED), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(TableRecordsLicenses.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsLicenses.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsLicenses.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(TableRecordsRequests.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsRequests.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsRequests.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(TableRecordsHubServers.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsHubServers.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsHubServers.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(GetChangeLog.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(GetChangeLog.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(GetChangeLog.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "DateTimeToDate(AddDays(ShowRecord1.Record.ChangeLog.Created,TextToInteger(ShowRecord1.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "TextToInteger"]}
{"text": "\"(\" + DiffDays(CurrDate(), AddDays(ShowRecord1.Record.ChangeLog.Created,TextToInteger(ShowRecord1.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) + \")\"", "type": "Text", "functions": ["DiffDays", "CurrDate", "AddDays", "TextToInteger"]}
{"text": "FormatDateTime(TableRecordsSolutions.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsSolutions.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsSolutions.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(TableRecordsEditions.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsEditions.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsEditions.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "FormatDateTime(TableRecordsFeatures.List.Current.ChangeLog.LastModified, \"dd MMMM\") + \"@\" +\nHour(TableRecordsFeatures.List.Current.ChangeLog.LastModified) + \":\" + FormatText(Minute(TableRecordsFeatures.List.Current.ChangeLog.LastModified), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatDateTime", "Hour", "FormatText", "Minute"]}
{"text": "RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Minute", "Second"]}
{"text": "AddPersonalAreaToURLPath(\"http://\" + Site.Hostname + \"/SupportCenter/EmailInvitationAccept.aspx?Key=\" + RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\"))", "type": "Text", "functions": ["AddPersonalAreaToURLPath", "FormatText", "Minute", "Second"]}
{"text": "AddPersonalAreaToURLPath(\"http://\" + Site.Hostname + \"/SupportCenter/EmailRegistrationAccept.aspx?Key=\" + RegistrationLogId + FormatText(Minute(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\") + FormatText(Second(GetRegistrationLog.List.Current.RegistrationLog.Timestamp),2,2,True,\"0\"))", "type": "Text", "functions": ["AddPersonalAreaToURLPath", "FormatText", "Minute", "Second"]}
{"text": "\"Your sizing has been rejected on \" + \nYear(GetEstimate.List.Current.Estimate.RejectedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.RejectedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.RejectedDate)\n", "type": "Text", "functions": ["Year", "Month", "Day"]}
{"text": "\"Your sizing has been approved on \" + \nYear(GetEstimate.List.Current.Estimate.ApprovedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.ApprovedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.ApprovedDate)\n", "type": "Text", "functions": ["Year", "Month", "Day"]}
{"text": "\"You have submited  your sizing on \" + \nYear(GetEstimate.List.Current.Estimate.SubmitedDate) + \"-\" +\nMonth(GetEstimate.List.Current.Estimate.SubmitedDate) + \"-\" +\nDay(GetEstimate.List.Current.Estimate.SubmitedDate)", "type": "Text", "functions": ["Year", "Month", "Day"]}
{"text": "\"em \" + DateTimeToDate(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn) + \" \" + FormatText(Hour(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.AUDIT_CHANGES.ChangedOn),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(AddDays(PromotionER.Record.PROMOTION.ExpectedEndDate, DiffDays(PromotionER.Record.PROMOTION_STEP.ExpectedEndDate, CurrDate())))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "DiffDays", "CurrDate"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(List2.List.Current.AUDIT.Duration)/1000-60*Trunc(List2.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(List2.List.Current.AUDIT.Duration)/1000-60*Trunc(List2.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "ToUpper(Substr(PontosVerificacaoAuditoria.List.Current.CQ_PV.Descricao,0,1))+\nToLower(Substr(PontosVerificacaoAuditoria.List.Current.CQ_PV.Descricao,1,119))", "type": "Text", "functions": ["ToUpper", "Substr", "ToLower"]}
{"text": "ToUpper(Substr(PontosVerificacaoAuditoria.List.Current.PontosVerificacaoAuditoria.PVA,0,1))+\nToLower(Substr(PontosVerificacaoAuditoria.List.Current.PontosVerificacaoAuditoria.PVA,1,99))", "type": "Text", "functions": ["ToUpper", "Substr", "ToLower"]}
{"text": "ToUpper(Substr(TableRecordsPV.List.Current.CQ_PV.Descricao,0,1))+\nToLower(Substr(TableRecordsPV.List.Current.CQ_PV.Descricao,1,119))", "type": "Text", "functions": ["ToUpper", "Substr", "ToLower"]}
{"text": "NewDate(TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,0,4)), TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,4,2)), TextToInteger(Substr(ListRecords1.List.Current.Invoice.RawDate,6,2)))", "type": "Date", "functions": ["NewDate", "TextToInteger", "Substr"]}
{"text": "NewTime(Hour(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Minute(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio),0)  ", "type": "Time", "functions": ["NewTime", "Hour", "Minute"]}
{"text": "NewTime(Hour(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Minute(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim),0)  ", "type": "Time", "functions": ["NewTime", "Hour", "Minute"]}
{"text": "NewDate(Year(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Month(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio), Day(GetCursoLeccionado.List.Current.CursoLeccionado.DataInicio))  ", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Month(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim), Day(GetCursoLeccionado.List.Current.CursoLeccionado.DataFim))  ", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewTime(Hour(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Minute(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio),0)  ", "type": "Time", "functions": ["NewTime", "Hour", "Minute"]}
{"text": "NewTime(Hour(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Minute(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim),0)  ", "type": "Time", "functions": ["NewTime", "Hour", "Minute"]}
{"text": "NewDate(Year(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Month(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio), Day(GetAccaoFormacao.List.Current.CursoLeccionado.DataInicio))  ", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Month(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim), Day(GetAccaoFormacao.List.Current.CursoLeccionado.DataFim))  ", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "Day(List.List.Current.Ocorrencias.DataResolucao) + \"/\" + Month(List.List.Current.Ocorrencias.DataResolucao) + \"/\" + Year(List.List.Current.Ocorrencias.DataResolucao) \n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(List.List.Current.Ocorrencias.Data) + \"/\" + Month(List.List.Current.Ocorrencias.Data) + \"/\" + Year(List.List.Current.Ocorrencias.Data)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao) + \"/\" + Month(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao) + \"/\" + Year(TR_Ocorrencias.List.Current.Ocorrencias.DataResolucao)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(TableRecords1.List.Current.AUDIT.Duration)/1000-60*Trunc(TableRecords1.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(TableRecords1.List.Current.AUDIT.Duration)/1000-60*Trunc(TableRecords1.List.Current.AUDIT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "DateTimeToDate(TR_Ocorrencias.List.Current.StructIdDataHora.DataHora) + NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataResponsabilidade + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataResponsabilidade,1,\",\",\".\") + \"h)\"", "type": "Text", "functions": ["DateTimeToDate", "NewLine", "FormatDecimal"]}
{"text": "DateTimeToDate(TR_Ocorrencias.List.Current.StructProcuraOcorrencias.OcorrenciasData) + NewLine() + \"(\" + TR_Ocorrencias.List.Current.StructDiasUteis.DataCriacao + \"d) (\" + FormatDecimal(TR_Ocorrencias.List.Current.StructHorasUteis.DataCriacao,1,\",\",\".\") + \"h)\"", "type": "Text", "functions": ["DateTimeToDate", "NewLine", "FormatDecimal"]}
{"text": "DateTimeToDate(TabelaOcorrencias.List.Current.StructIdDataHora.DataHora) + \" (\" + DiffDays(DateTimeToDate(TabelaOcorrencias.List.Current.StructIdDataHora.DataHora),CurrDate()) + \")\"", "type": "Text", "functions": ["DateTimeToDate", "DiffDays", "CurrDate"]}
{"text": "DateTimeToDate(TabelaOcorrencias.List.Current.Ocorrencias.Data) + \" (\" + DiffDays(DateTimeToDate(TabelaOcorrencias.List.Current.Ocorrencias.Data),CurrDate()) + \")\"", "type": "Text", "functions": ["DateTimeToDate", "DiffDays", "CurrDate"]}
{"text": "Substr(DateTimeToText(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(ReceiptTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionsToApplyTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TransactionTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TransactionsTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(TransactionsTable.List.Current.RWB_TRX_HEADERS.CREATION_DATE)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE), 0,\nLength(DateTimeToText(ReceiptsTable.List.Current.RWB_RECEIPT_HEADERS.CREATION_DATE)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "\"<iframe src =\" + AddPersonalAreaToURLPath(URL) + \"?GroupID=\"+GroupId+\"&width=\"+ DecimalToInteger((TextToInteger(Width)/2)-20)+\"&height=\"+ DecimalToInteger(((TextToInteger(Height)/2) - 20))+\"   width='\"+Width+\"' height='\"+Height+\"' frameborder='0'>\"\n", "type": "Text", "functions": ["AddPersonalAreaToURLPath", "DecimalToInteger", "TextToInteger"]}
{"text": "\"Pago em \" + Day(GetPaymentByUser.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(GetPaymentByUser.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(GetPaymentByUser.List.Current.PAYMENT.PaymentDate)\n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Substr(DateTimeToText(TRMeetings.List.Current.MEETING.EndDateTime),0,Length(DateTimeToText(TRMeetings.List.Current.MEETING.EndDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRMeetings.List.Current.MEETING.StartDateTime),0,Length(DateTimeToText(TRMeetings.List.Current.MEETING.StartDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime),0,Length(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime),0,Length(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.StartDateTime)),0,Length(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.StartDateTime)))-3) ", "type": "Text", "functions": ["Substr", "TimeToText", "DateTimeToTime", "Length"]}
{"text": "Substr(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.EndDateTime)),0,Length(TimeToText(DateTimeToTime(SRMeeting.Record.MEETING.EndDateTime)))-3) ", "type": "Text", "functions": ["Substr", "TimeToText", "DateTimeToTime", "Length"]}
{"text": "Substr(DateTimeToText(TRMyResources.List.Current.RESERVE2.EndDateTime),0,Length(DateTimeToText(TRMyResources.List.Current.RESERVE2.EndDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRMyResources.List.Current.RESERVE2.StartDateTime),0,Length(DateTimeToText(TRMyResources.List.Current.RESERVE2.StartDateTime))-3) ", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime), 0, Length(DateTimeToText(TRResources.List.Current.RESERVE2.EndDateTime)) - 3)\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime), 0, Length(DateTimeToText(TRResources.List.Current.RESERVE2.StartDateTime)) - 3)\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Day(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetMeetingEntrevista.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetMeetingEntrevista.List.Current.RESOURCE.Name", "type": "Text", "functions": ["Day", "Month", "Hour", "Minute"]}
{"text": "Day(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetMeetingPAC.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetMeetingPAC.List.Current.RESOURCE.Name", "type": "Text", "functions": ["Day", "Month", "Hour", "Minute"]}
{"text": "Substr(DateTimeToText(TRReservations.List.Current.RESERVE2.EndDateTime), 0, Length(DateTimeToText(TRReservations.List.Current.RESERVE2.EndDateTime)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TRReservations.List.Current.RESERVE2.StartDateTime), 0, Length(DateTimeToText(TRReservations.List.Current.RESERVE2.StartDateTime)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "IntegerToText(Hour(trDetails.List.Current.TransactionList.TransactionDate)) + \":\" + \nIntegerToText(Minute(trDetails.List.Current.TransactionList.TransactionDate)) + \":\" + \nIntegerToText(Second(trDetails.List.Current.TransactionList.TransactionDate))", "type": "Text", "functions": ["IntegerToText", "Hour", "Minute", "Second"]}
{"text": "Day(GetEntrevista.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetEntrevista.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetEntrevista.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetEntrevista.List.Current.MEETING.StartDateTime) + \"m, na sala \" + GetEntrevista.List.Current.RESOURCE.Name", "type": "Text", "functions": ["Day", "Month", "Hour", "Minute"]}
{"text": "Day(GetPAC.List.Current.MEETING.StartDateTime) + \"/\" + Month(GetPAC.List.Current.MEETING.StartDateTime) + \" Ã s \" + Hour(GetPAC.List.Current.MEETING.StartDateTime) + \"h\" + Minute(GetPAC.List.Current.MEETING.StartDateTime) + \"m, na sala \" +GetPAC.List.Current.RESOURCE.Name", "type": "Text", "functions": ["Day", "Month", "Hour", "Minute"]}
{"text": "\"Pago em \" + Day(GetApplicationPayment.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(GetApplicationPayment.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(GetApplicationPayment.List.Current.PAYMENT.PaymentDate)\n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(TableRecords1.List.Current.PAYMENT.PaymentDate) + \"/\"+\nMonth(TableRecords1.List.Current.PAYMENT.PaymentDate) + \"/\"+\nYear(TableRecords1.List.Current.PAYMENT.PaymentDate)\n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.ActualDateToSolve) \n\n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.EstimatedDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.EstimatedDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.EstimatedDateToSolve) \n\n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.ReminderDate) \n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.DueDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.DueDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.DueDate) ", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ActualDateToSolve) + \"-\" +\nYear(ShowRecord1.Record.RFS.ActualDateToSolve) \n", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nMonth(ShowRecord1.Record.RFS.ReminderDate) + \"-\" +\nYear(ShowRecord1.Record.RFS.ReminderDate) ", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Replace(Substr(TableRecords1.List.Current.DocumentInformation.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "Replace(Substr(TableRecords1.List.Current.DOCUMENT2.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "ToUpper(Substr(GetUserById.List.Current.Branch.Name,0,1)) + ToLower(Substr(GetUserById.List.Current.Branch.Name,1,Length(GetUserById.List.Current.Branch.Name)))", "type": "Text", "functions": ["ToUpper", "Substr", "ToLower", "Length"]}
{"text": "Substr(GetMembershipByPerformerId.List.Current.User.Email,Index(GetMembershipByPerformerId.List.Current.User.Email,\"@\"), Length(GetMembershipByPerformerId.List.Current.User.Email) - Index(GetMembershipByPerformerId.List.Current.User.Email,\"@\"))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "\"Necessita de aprovaÃ§Ã£o urgente (\"+ DiffMinutes(CurrDateTime(),AddHours(GetCustomerCreditAssestments.List.Current.Customer_Credit_Assestment.RequestedAt,6)) +\" m)\"", "type": "Text", "functions": ["DiffMinutes", "CurrDateTime", "AddHours"]}
{"text": "\"Necessita de aprovaÃ§Ã£o urgente (\"+ DiffMinutes(CurrDateTime(),AddHours(GetCustomerCreditAssestments.List.Current.Customer_Credit_Assestment.RequestedAt,1)) +\" m)\"", "type": "Text", "functions": ["DiffMinutes", "CurrDateTime", "AddHours"]}
{"text": "FormatDecimal(Round((Project_CalculateTotals.Totals.ProjectValues.Actual / Max(1,Project_CalculateTotals.Totals.ProjectValues.Expected)) * 100), 1, \",\", \".\") + \" %\"", "type": "Text", "functions": ["FormatDecimal", "Round", "Max"]}
{"text": "FormatDecimal(Round((TR_StoryList.List.Current.Story.ActualEffort / Max(TR_StoryList.List.Current.Story.EstimatedEffort,1) )*100), 1, \",\", \".\") + \" %\"", "type": "Text", "functions": ["FormatDecimal", "Round", "Max"]}
{"text": "Substr(FormatDecimal(ProposalGetSummary.Totals.PS_Product.Activation - Trunc(ProposalGetSummary.Totals.PS_Product.Activation),2,\",\",\".\"),2,2)\n", "type": "Text", "functions": ["Substr", "FormatDecimal", "Trunc"]}
{"text": "Substr(FormatDecimal(ProposalGetSummary.Totals.PS_Product.MonthlyFee - Trunc(ProposalGetSummary.Totals.PS_Product.MonthlyFee),2,\",\",\".\"),2,2)\n", "type": "Text", "functions": ["Substr", "FormatDecimal", "Trunc"]}
{"text": "FormatDateTime(DateTimeToTime(AddSeconds(NewTime(0,0,0),BillingLineTable.List.Current.BillingLine.Seconds)), \"HH:mm:ss\")", "type": "Text", "functions": ["FormatDateTime", "DateTimeToTime", "AddSeconds", "NewTime"]}
{"text": "FormatDateTime(AddSeconds(NewTime(0,0,0),TotaUsageTime.List.Current.TotaltimeloggedByToolSum), \"HH:mm:ss\") ", "type": "Text", "functions": ["FormatDateTime", "AddSeconds", "NewTime"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ EncodeJavaScript(LinkOrButtonWidgetId) +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "FormatText(Hour(TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.PROFILE_VALUE.STARTINTERVAL), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecords1.List.Current.sProfileValue.StartInterval), 2, 2, True, \"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.sProfileValue.StartInterval), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(TableRecords1.List.Current.TimeSerie.Interval),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.TimeSerie.Interval),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Year(ListRecords1.List.Current.Date.Date), 4, 4, True, \"0\") + \"-\" + \nFormatText(Month(ListRecords1.List.Current.Date.Date), 2, 2, True, \"0\") + \"-\" + \nFormatText(Day(ListRecords1.List.Current.Date.Date), 2, 2, True, \"0\") + \" \" + \n\nFormatText(Hour(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Year", "Month", "Day", "Hour", "Minute"]}
{"text": "FormatText(Hour(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListRecords1.List.Current.DateTime.Value), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "Substr(FormatDateTime(TRPost.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(TRPost.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)", "type": "Text", "functions": ["Substr", "FormatDateTime", "Length"]}
{"text": "Substr(FormatDateTime(AQryTopics.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(AQryTopics.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)", "type": "Text", "functions": ["Substr", "FormatDateTime", "Length"]}
{"text": "Substr(FormatDateTime(TRPosts.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"),0,Length(FormatDateTime(TRPosts.List.Current.POST.CreateTime, \"yyyy-MM-dd HH:mm:ss\"))-3)", "type": "Text", "functions": ["Substr", "FormatDateTime", "Length"]}
{"text": "Substr(\nDateTimeToText(\nTR_History.List.Current.ACTIVITY_ANUAL_SUMMARY_HISTORY.TimeStamp\n),\n0,\nLength(\nDateTimeToText(\nTR_History.List.Current.ACTIVITY_ANUAL_SUMMARY_HISTORY.TimeStamp\n))-3)\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TR_History.List.Current.GROUP_HISTORY.TimeStamp),0,Length(DateTimeToText(TR_History.List.Current.GROUP_HISTORY.TimeStamp))-3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TableRecords1.List.Current.GROUP_HISTORY.TimeStamp),0,Length(DateTimeToText(TableRecords1.List.Current.GROUP_HISTORY.TimeStamp))-3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityStartDate),0,Length(DateTimeToText(TableRecordsHistory.List.Current.Lbpm_HistoryItem.ActivityStartDate)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TableRecords3.List.Current.FILE_DATA.CreatedDateTime),0,Length(DateTimeToText(TableRecords3.List.Current.FILE_DATA.CreatedDateTime)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "\"- GetDOCUMENT.current.DOCUMENT.DispatchDepartment=\" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.DispatchDepartment) + \n\"- GetDOCUMENT.current.DOCUMENT.DispatchCD=\" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.DispatchCD) + \n\"DEBUG INFORMATION --> \" + \"OutputControl = [\" + HandleDispatchVisibility.OutputControl  + \"] [\" + EditRecord.Record.STATE.Code + \"]\" + \"SelectedResponsibleName=[\" + SelectedResponsibleName + \"] - DocumentNature=\" + DocumentNature + \" - DocumentNatureId =\" + IntegerToText(EditRecord.Record.DOCUMENT.DocumentNatureId)  + \" - IdInterno =\" + IntegerToText(IDInterno) + \n\" - IDentrada=\" + IntegerToText(IDentrada) + \n\"IsPostBack =\" + BooleanToText(IsPostBack)  + \n\"GetDOCUMENT.current.DOCUMENT.Id  = NullIdentifier() =\" + BooleanToText(GetDOCUMENT.List.Current.DOCUMENT.Id   = NullIdentifier())  + \n\"- DocumentId=\" + IntegerToText(DocumentId) + \n\" - GetDOCUMENT.current.DOCUMENT.Id = \" + IntegerToText(GetDOCUMENT.List.Current.DOCUMENT.Id) + \n\" - GetDOCUMENT.current.DOCUMENT.Priority=\" + GetDOCUMENT.List.Current.DOCUMENT.Priority + \"<br>\" + \nDebugMessage + \" - NewDocument = \" + BooleanToText(NewDocument) + \n\" - NewClassificationSelected = [\" + NewClassificationSelected + \"]\" + \"<br>\"", "type": "Text", "functions": ["IntegerToText", "BooleanToText", "NullIdentifier"]}
{"text": "Substr(DateTimeToText(TR_History.List.Current.Lbpm_HistoryItem.ActivityStartDate),0,Length(DateTimeToText(TR_History.List.Current.Lbpm_HistoryItem.ActivityStartDate)) - 3) \n\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TR_Files.List.Current.FILE_DATA.CreatedDateTime),0,Length(DateTimeToText(TR_Files.List.Current.FILE_DATA.CreatedDateTime)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TableRecordsINCUMP_PE_HIST.List.Current.AN_INCUMP_PE_HISTORY.InsertedAt\n),0,Length(DateTimeToText(TableRecordsINCUMP_PE_HIST.List.Current.AN_INCUMP_PE_HISTORY.InsertedAt\n))-3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TableRecordsINCUMP_ZA_HISTORY.List.Current.AN_INCUMP_ZA_HISTORY.InsertedAt\n),0,Length(DateTimeToText(TableRecordsINCUMP_ZA_HISTORY.List.Current.AN_INCUMP_ZA_HISTORY.InsertedAt\n))-3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(TR_History.List.Current.PROCESS_HISTORY.Timestamp),0,Length(DateTimeToText(TR_History.List.Current.PROCESS_HISTORY.Timestamp)) - 3)", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(trHistorico.List.Current.PCQA_History.InsertedAt),0,Length(DateTimeToText(trHistorico.List.Current.PCQA_History.InsertedAt))-3)\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Substr(DateTimeToText(trHistorico.List.Current.PCQA_CLONE_History.InsertedAt),0,Length(DateTimeToText(trHistorico.List.Current.PCQA_CLONE_History.InsertedAt))-3)\n", "type": "Text", "functions": ["Substr", "DateTimeToText", "Length"]}
{"text": "Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.REQUEST_DELIVERY_DATE)", "type": "Text", "functions": ["Month", "Day", "Year"]}
{"text": "Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE)", "type": "Text", "functions": ["Month", "Day", "Year"]}
{"text": "Month(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Day(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \"/\" + Year(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \" \" + Hour(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \":\" + Minute(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE) + \":\" + Second(PrfSapExceptionTable.List.Current.PRF_SAP_EXCEPTION.EXCEPTION_CREATED_DATE)", "type": "Text", "functions": ["Month", "Day", "Year", "Hour", "Minute", "Second"]}
{"text": "\" \"+Round(DiffDays(OperationEntryDate,CurrDateTime())/7,0)", "type": "Text", "functions": ["Round", "DiffDays", "CurrDateTime"]}
{"text": "Substr(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,Index(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,\"{\",0,False,True)+1,Length(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId)-Index(TableRecords1.List.Current.DocumentInfo_Contract.UniqueId,\"{\",0,False,True)-2)\n", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "FormatDecimal(Round(TextToDecimal(CurrWeekSalesTR.List.Current.DrillDown_CurrWeekSales.TEB),2),2,\".\",\",\")", "type": "Text", "functions": ["FormatDecimal", "Round", "TextToDecimal"]}
{"text": "FormatDecimal(Round(TextToDecimal(CurrWeekSalesTR.List.Current.DrillDown_CurrWeekSales.TEB),2),2,\".\",\",\")\n", "type": "Text", "functions": ["FormatDecimal", "Round", "TextToDecimal"]}
{"text": "Substr(Replace(GetErrorLog.List.Current.LogErrorDetail.Message,Chr(10),\"\"),0,90)", "type": "Text", "functions": ["Substr", "Replace", "Chr"]}
{"text": "NewDate(Year(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))), Month(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))), Day(AddDays(SurgeriesPrint.SurgeriesPrint.Date, -Round((MaxHoursBeforeOTToCheckIn / 24),fractionalDigits:0))))", "type": "Date", "functions": ["NewDate", "Year", "AddDays", "Round", "Month", "Day"]}
{"text": "DateTimeToTime(\n    AddSeconds(NewDateTime(0,0,0,0,0,0), DiffSeconds(MigrationRunTable.List.Current.MigrationRun.StartDateTime,\n    MigrationRunTable.List.Current.MigrationRun.EndDateTime))\n)", "type": "Time", "functions": ["DateTimeToTime", "AddSeconds", "NewDateTime", "DiffSeconds"]}
{"text": "DateTimeToTime(\n    AddSeconds(NewDateTime(0,0,0,0,0,0), DiffSeconds(MigrationRunTable.List.Current.MigrationRun.StartDateTime,\n    CurrDateTime()))\n)", "type": "Time", "functions": ["DateTimeToTime", "AddSeconds", "NewDateTime", "DiffSeconds", "CurrDateTime"]}
{"text": "Replace(MessageLogTable.List.Current.MessageLog.Message, Chr(13), NewLine())", "type": "Text", "functions": ["Replace", "Chr", "NewLine"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,6), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,5), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,4), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,3), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,2), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "Substr(FormatDateTime(AddDays(StartDate,1), \"dd MMMM\"),0,6)", "type": "Text", "functions": ["Substr", "FormatDateTime", "AddDays"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(ShowRecordAudit.Record.AUDIT_EVENT.Duration)/1000-60*Trunc(ShowRecordAudit.Record.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(ShowRecordAudit.Record.AUDIT_EVENT.Duration)/1000-60*Trunc(ShowRecordAudit.Record.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText(FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT_EVENT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "FormatText( FormatDecimal(IntegerToDecimal(AuditList.List.Current.AUDIT_EVENT.Duration)/1000-60*Trunc(AuditList.List.Current.AUDIT_EVENT.Duration/60000),3,\".\",\" \"),6,6,True,\"0\")", "type": "Text", "functions": ["FormatText", "FormatDecimal", "IntegerToDecimal", "Trunc"]}
{"text": "Replace(Substr(DocumentsTable.List.Current.DocumentInformation.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "Replace(Substr(Documents.List.Current.Folder_Document_List.DocumentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "Replace(Substr(Documents.List.Current.ArchiveDocument_Information.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(True)) + \", \" + ToLower(BooleanToText(AutoResize)) + \", \" + ToLower(BooleanToText(RecenterOnResize)) + \", \" + ToLower(BooleanToText(HideCloseButton))+\");\n </script>\"", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "Replace(Substr(Documents.List.Current.Document_List.DocumentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "Replace(Substr(DocsTable.List.Current.EM_Document_Information.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "Replace(Substr(FraudDocs.List.Current.FraudDocuments.ContentDescription,0,30),NewLine(),\" \") ", "type": "Text", "functions": ["Replace", "Substr", "NewLine"]}
{"text": "FormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame,\"hh\") + \nSubstr(TimeToText(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame),2,3) + \nFormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.EndTimeFrame,\" tt\")\n\n", "type": "Text", "functions": ["FormatDateTime", "Substr", "TimeToText"]}
{"text": "FormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7)].Schedule.StartTimeFrame,\"hh\") + \nSubstr(TimeToText(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.StartTimeFrame),2,3) + \nFormatDateTime(GetSchedule.List[(TimeSlot.List.CurrentRowNumber * 7) ].Schedule.StartTimeFrame,\" tt\")\n\n\n\n\n", "type": "Text", "functions": ["FormatDateTime", "Substr", "TimeToText"]}
{"text": "Substr(StorageFileName,Index(StorageFileName,\".\",0,True)+1,Length(StorageFileName)-Index(StorageFileName,\".\",0,True)-1) \n", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(StorageFileName,Index(StorageFileName,\".\",0,True)+1,Length(StorageFileName)-Index(StorageFileName,\".\",0,True)-1) ", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "ToUpper(Substr(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil,0,1))+Substr(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterClientes.RL_Clientes.Current.MlCliente.EstadoCivil)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "ToUpper(Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,0,1))+Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "ToUpper(Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,0,1)) + Substr(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil,1,Length(ObterCliente.RL_Clientes.Current.MlCliente.EstadoCivil)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + PM_Popup_Editor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "ToUpper(Substr(R_ClientInfo.MlCliente.EstadoCivil,0,1))+Substr(R_ClientInfo.MlCliente.EstadoCivil,1,Length(R_ClientInfo.MlCliente.EstadoCivil)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.objectivo,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.NovasParcerias.NovasParcerias.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.falta,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.Objectivo,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.MedPrincipais.Current.MediadoresPrincipais.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.falta,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.crescimentoLiquido,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.valorActualCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.requisito,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(GetObjectivos.Forum.DadosObjectivosForum.valorInicialCarteira,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.CRESCIMENTO_LIQUIDO,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.VALOR_ACTUAL_CARTEIRA,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(ShowRecord1.Record.ResultadoIndividualDetalhe.VALOR_INICIAL_CARTEIRA,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "ToUpper(Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,0,1))+Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,1,Length(GetClientInfo.Info.Current.ClientInfo.CivilStatus)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "ToUpper(Substr(ClientInfo.ClientInfo.CivilStatus,0,1))+Substr(ClientInfo.ClientInfo.CivilStatus,1,Length(ClientInfo.ClientInfo.CivilStatus)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "ToUpper(Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,0,1)) + Substr(GetClientInfo.Info.Current.ClientInfo.CivilStatus,1,Length(GetClientInfo.Info.Current.ClientInfo.CivilStatus)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "ToUpper(Substr(LocalReceiptClientInfo.ClientInfo.CivilStatus,0,1))+Substr(LocalReceiptClientInfo.ClientInfo.CivilStatus,1,Length(LocalReceiptClientInfo.ClientInfo.CivilStatus)-1)", "type": "Text", "functions": ["ToUpper", "Substr", "Length"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init_BPM('\"+ LinkOrButtonId +\"',\n'\" + Popup_Editor_BPM.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(Site.Popup_Editor_UseModalDialog)) + \");\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "TrimEnd(TrimStart(Replace(LocalSessionDataRiskUnitAUR.SessionRiskUnitAUData.objectNumber,\" \",\"\")))", "type": "Text", "functions": ["TrimEnd", "TrimStart", "Replace"]}
{"text": "Replace(Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<new>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</new>\")\n),\"<new>\",\"\"),\"</new>\",\"\"),\"<br/>\",\" \")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "Replace(Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<old>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</old>\")\n),\"<old>\",\"\"),\"</old>\",\"\"),\"<br/>\",\" \")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "NewDate(Year(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsHisPedidoCotacaoById_RO.List.Current.BPS_HIS_PEDIDO_COTACAO.CriadoEm))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Month(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Day(trListarPdCs_Arq.List.Current.BPS_ListarPdCs.DataCriacaoPdC))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Month(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC),Day(trListarPdCs.List.Current.BPS_ListarPdCs.DataCriacaoPdC))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "NewDate(Year(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Month(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm),Day(GetBpsPedidoCotacaoById_RO.List.Current.BPS_PEDIDO_COTACAO.CriadoEm))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "Trim(FormatDecimal(TextToDecimal(UnitRiskDetail.GetMultiriskUarDetailBSGOutputData.agricultural.AgriculturalElement.resinsSpoutsValue),2,\",\",\".\"))    ", "type": "Text", "functions": ["Trim", "FormatDecimal", "TextToDecimal"]}
{"text": "Trim(FormatDecimal(TextToDecimal(UnitRiskDetail.GetMultiriskUarDetailBSGOutputData.agricultural.AgriculturalElement.occupiedArea),2,\",\",\".\"))    ", "type": "Text", "functions": ["Trim", "FormatDecimal", "TextToDecimal"]}
{"text": "FormatDecimal(TextToDecimal(Replace(TRSalario.List.Current.SalaryDataElementRasis.salary,\",\",\".\")),2,\",\",\".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"<script type='text/javascript'>\n                    var pageSubmitted = false;\n                    function VoltarListaApolicesEntidade(){\n                        if (!pageSubmitted) {   \n                            pageSubmitted = true;       \n                            document.WebForm1.action = '/CAN_ApolicesGIS/Gis_ListarApolicesCliente.aspx';\n                            if (document.getElementById('__VIEWSTATE') != null)\n                                document.getElementById('__VIEWSTATE').value = '';\n                            document.WebForm1.submit();\n                        }else {\n                            alert('Aguarde por favor, pedido em processamento.');\n                        }\n                    }\n                    function BoldEntregaExtraordinarias(){\n                        var spanElements = document.getElementsByTagName('SPAN');\n                        for (var i = 0 ; i < spanElements.length ; i++) {\n                            if (spanElements[i].innerHTML.toUpperCase() == '\"+ToUpper(Replace(Replace(Replace(Trim(Session.GisInterativo.GisInteractivo_SessionData.GisMWControl.GISMWCONTROL.titulo),\" da\",\"\"),\" de\",\"\"),\" do\",\"\"))+\"')\n                                osjs(spanElements[i]).parent().find('img').attr('src','/CAN_ApolicesGIS/img/img_next_red.gif');  \n                            if (spanElements[i].innerHTML == 'Entregas ExtraordinÃ¡rias')\n                                spanElements[i].innerHTML = '<B>Entregas ExtraordinÃ¡rias</B>';\n                            if (spanElements[i].innerHTML == 'AnulaÃ§Ã£o Entregas')\n                                spanElements[i].innerHTML = '<B>AnulaÃ§Ã£o Entregas</B>';\n                            if (spanElements[i].innerHTML == 'AnulaÃ§Ã£o SubscriÃ§Ã£o')\n                                spanElements[i].innerHTML = '<B>AnulaÃ§Ã£o SubscriÃ§Ã£o</B>';                    \n                        }\n                    }\n                    BoldEntregaExtraordinarias();\n\n                function Documentacao(referencia, numApolice) {\n                    osjs('#\"+inpRef.Id+\"').val(referencia);\n                    osjs('#\"+inpApolice.Id+\"').val(numApolice);\n                    osjs('#\"+btnDocumentacao.Id+\"').click();\n                }\n        \n                 \n                  \n</script>\"", "type": "Text", "functions": ["ToUpper", "Replace", "Trim"]}
{"text": "Substr(TR_RSC.List.Current.DailyProductionElement.mediatorManager,Index(TR_RSC.List.Current.DailyProductionElement.mediatorManager,\"-\")+1,Length(TR_RSC.List.Current.DailyProductionElement.mediatorManager))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(TR_GSC.List.Current.DailyProductionElement.branch,Index(TR_GSC.List.Current.DailyProductionElement.branch,\"-\")+1,Length(TR_GSC.List.Current.DailyProductionElement.branch))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "FormatText(Day(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+FormatText(Month(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+Year(TextToDate(SAS_listDailyProductionBSG_60.OutputData.ListDailyProductionBSGOutputData.informationDate))", "type": "Text", "functions": ["FormatText", "Day", "TextToDate", "Month", "Year"]}
{"text": "Trim(Substr(TR_CTT.List.Current.DailyProductionElement.mediatorCode,Index(TR_CTT.List.Current.DailyProductionElement.mediatorCode,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.mediatorCode)))", "type": "Text", "functions": ["Trim", "Substr", "Index", "Length"]}
{"text": "Trim(Substr(TR_CTT.List.Current.DailyProductionElement.mediatorCode,0,Index(TR_CTT.List.Current.DailyProductionElement.mediatorCode,\"-\")))", "type": "Text", "functions": ["Trim", "Substr", "Index"]}
{"text": "Substr(TR_CTT.List.Current.DailyProductionElement.mediatorManager,Index(TR_CTT.List.Current.DailyProductionElement.mediatorManager,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.mediatorManager))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(TR_CTT.List.Current.DailyProductionElement.branch,Index(TR_CTT.List.Current.DailyProductionElement.branch,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.branch))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Substr(TR_CTT.List.Current.DailyProductionElement.regionalManagement,Index(TR_CTT.List.Current.DailyProductionElement.regionalManagement,\"-\")+1,Length(TR_CTT.List.Current.DailyProductionElement.regionalManagement))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "FormatText(Day(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+FormatText(Month(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate)),2,2,True,\"0\")+\"/\"+Year(TextToDate(SAS_listDailyProductionBSG.OutputData.ListDailyProductionBSGOutputData.informationDate))", "type": "Text", "functions": ["FormatText", "Day", "TextToDate", "Month", "Year"]}
{"text": "FormatDecimal(DecimalToInteger(TextToDecimal(OutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.availableVehicles)),0,\",\",\".\")\n", "type": "Text", "functions": ["FormatDecimal", "DecimalToInteger", "TextToDecimal"]}
{"text": "FormatDecimal(DecimalToInteger(TextToDecimal(\nOutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.totalVehicles)),0,\",\",\".\")\n", "type": "Text", "functions": ["FormatDecimal", "DecimalToInteger", "TextToDecimal"]}
{"text": "FormatDecimal(DecimalToInteger(TextToDecimal(\nOutputData.GetAccountPlafondBSGOutputData.accountPlafond.Current.AccountPlafondElement.totalAccountVehicles)),0,\",\",\".\")\n", "type": "Text", "functions": ["FormatDecimal", "DecimalToInteger", "TextToDecimal"]}
{"text": "TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.sumInsured),2,\",\",\".\"))", "type": "Text", "functions": ["TrimEnd", "FormatDecimal", "TextToDecimal"]}
{"text": "TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.deductibleAmt),2,\",\",\".\") + \" â‚¬\")", "type": "Text", "functions": ["TrimEnd", "FormatDecimal", "TextToDecimal"]}
{"text": "TrimEnd(FormatDecimal(TextToDecimal(TRCobGar.List.Current.CoverageEnsElement.deductibleAmt),2,\",\",\".\")+ \" â‚¬\")", "type": "Text", "functions": ["TrimEnd", "FormatDecimal", "TextToDecimal"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.entityDamagedParty.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.medicalCenterEntity.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.destinationHospitalEntity.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.hospitalEntity.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" +\nSubstr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaPessoa.Record.subEventPersonElement.entityDamagedParty.entityElement.address.addressElement2.locality\n\n", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.address1)) + \" \" + TrimStart(TrimEnd(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.address2)) + \" \" + Substr(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + Substr(ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.zipCode,5,3) + \" \" + ErDadosSubOcorrenciaObjectoOutros.Record.subEventObjectElement.entityDamagedParty.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "TrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address1)) + \" \" + \nTrimStart(TrimEnd(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.address2)) + \" \" + \nSubstr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,0,4) + \"-\" + \nSubstr(ErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.zipCode,5,3) + \" \" + \nErDadosSubOcorrenciaViatura.Record.subEventVehicleElement.driverEntity.entityElement.address.addressElement2.locality", "type": "Text", "functions": ["TrimStart", "TrimEnd", "Substr"]}
{"text": "\"<strong>DE: </strong>\" + Replace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<old>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</old>\")\n),\"<old>\",\"\"),\"</old>\",\"\")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "\"<strong>PARA: </strong>\"+\nReplace(Replace(Substr(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\nIndex(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"<new>\"),Index(PedidosAlteracaoTable.List.Current.PedidosAlteracao.DadosXML,\"</new>\")\n),\"<new>\",\"\"),\"</new>\",\"\")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ImpostoSelo,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.IRS,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoPremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoPremiosNaoVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoEstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.ComissaoEstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.EstornosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.EstornosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"â‚¬ \" + FormatDecimal(TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.PremiosVida,\".\",\"\"),\",\",\".\"))+TextToDecimal(Replace(Replace(PrestacaoContasR.PrestacaoContas.PremiosNaoVida,\".\",\"\"),\",\",\".\")),2,\",\",\".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "\"<script type=\"\"text/javascript\"\">\" + \n\" \n  var year = new Date().getFullYear();\n  var month = new Date().getMonth();\n  var day = new Date().getDate();\n\n\n  var eventData = \" + eventData+ \";\n\n  $(document).ready(function() {\n    $('#\"+ divId +\"').weekCalendar({\n      timeslotsPerHour: 2,\n      timeslotHeigh: 10,\n      overlapEventsSeparate: true,\n      use24Hour:true,\n      readonly: true,\n      hourLine: true,\n      daysToShow:7,\n      dateFormat:'j-M-Y',\n      shortMonths: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n      longMonths: ['Janeiro', 'Fevereiro', 'MarÃ§o', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n      shortDays: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\n      longDays: ['Domingo', 'Segunda', 'TerÃ§a', 'Quarta', 'Quinta', 'Sexta', 'SÃ¡bado'],\n      businessHours:{start: 7, end: 23, limitDisplay: true },\n      dateformat:\"\"Y-M-D\"\",\n      date: \" + \"new Date(\" + Year(Date) + \", \" + (Month(Date)-1) + \",\" + Day(Date) + \")\" + \",\n      data: function(start,end, callback){\n            callback(\"+ eventData +\");\n        },\n      height: 420,\n      eventClick : function(calEvent, $event) {\n            $('#\" + notifyfield.Id + \"').val(calEvent.id);\n            $('#\" + notifyButton.Id + \"').click();\n        },\n      eventRender : function(calEvent, $event) {\n        if (calEvent.end.getTime() < new Date().getTime()) {\n          $event.css('backgroundColor', '#aaa');\n          $event.find('.time').css({'backgroundColor': '#999', 'border':'1px solid #888'});\n        }\n      },\n    });\n\n    function displayMessage(message) {\n      $('#message').html(message).fadeIn();\n    }\n\n    $('<div id=\"\"message\"\" class=\"\"ui-corner-all\"\"></div>').prependTo($('body'));\n  });\n\n\n</script>\"", "type": "Text", "functions": ["Year", "Month", "Day"]}
{"text": "\nConcat(Hour(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio),Concat(\":\",Minute(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio)))\n\n", "type": "Text", "functions": ["Concat", "Hour", "Minute"]}
{"text": "\nConcat(Hour(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio),Concat(\":\",Minute(GridStepResult.List.Current.QTPA_STEP_RESULT.Dtinicio)))\n", "type": "Text", "functions": ["Concat", "Hour", "Minute"]}
{"text": "NewTime(Hour(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Minute(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Second(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto))", "type": "Time", "functions": ["NewTime", "Hour", "Minute", "Second"]}
{"text": "NewDate(Year(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Month(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto),Day(TRContactos.List.Current.GAC_ContactosAlvo.DataContacto))", "type": "Date", "functions": ["NewDate", "Year", "Month", "Day"]}
{"text": "FormatText(Hour(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\") +\":\"+FormatText(Minute(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\") +\":\"+FormatText(Second(trContacts.List.Current.ContactInteractionElement.contactDate),2,2,True,\"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute", "Second"]}
{"text": "\"Enviado para \" + Replace(Substr(TRNotes2.List.Current.Note.VisibleAt,1,Length(TRNotes2.List.Current.Note.VisibleAt) - 2),\"|\",\", \")", "type": "Text", "functions": ["Replace", "Substr", "Length"]}
{"text": "FormatDecimal(TextToDecimal(TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LevePPR, \",\", \".\"))), 2, \",\", \".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LevePPR, \",\", \".\")) + TextToDecimal(Replace(OutputPlanoMensal.Current.OutputPlanoMensal.LeveMais, \",\", \".\"))), 2, \",\", \".\") + \" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(TextToDecimal(Replace(DadosSimulacao.LeveSimulacao.TaxaRendibilidadeUni, \",\",\".\")), 2, \",\", \".\")", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "Concat(ParType,Substr(Concat(\"00000000\",VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroPoliza), Length(VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroPoliza),8)) ", "type": "Text", "functions": ["Concat", "Substr", "Length"]}
{"text": "Concat(ParType,Substr(Concat(\"00000000\",VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroSiniestro), Length(VarResponse.response.Consulta.ConsultaSiniestroTypeOut.Siniestros.Current.ConsultaSiniestroTypeOutSiniestro.DatosGenerales.ConsultaSiniestroTypeOutSiniestroDatosGenerales.NumeroSiniestro),8)) ", "type": "Text", "functions": ["Concat", "Substr", "Length"]}
{"text": "FormatDecimal(VarLifeProposal.LIFE_PROPOSAL.ContractPremium-TextToDecimal(Replace(VarLifeProposal.LIFE_PROPOSAL.RiskPremium,\",\",\".\")),2,\",\",\".\")+\" â‚¬\"", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "FormatDecimal(Round((PROJECT_CalculateTotals.Totals.ProjectValues.Actual / Max(1,PROJECT_CalculateTotals.Totals.ProjectValues.Expected)) * 100), 1, \",\", \".\") + \" %\"", "type": "Text", "functions": ["FormatDecimal", "Round", "Max"]}
{"text": "FormatDecimal(Round((TR_StoryList.List.Current.STORY.ActualEffort / Max(TR_StoryList.List.Current.STORY.EstimatedEffort,1) )*100), 1, \",\", \".\") + \" %\"", "type": "Text", "functions": ["FormatDecimal", "Round", "Max"]}
{"text": "\"â‚¬ \"+Substr(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO),0,Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO))-2)+\",\"+\nSubstr(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO),Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO))-2,Length(TextToInteger(TrSIBS.List.Current.VDMB_SIBS.MONTANTE_PAGO)))", "type": "Text", "functions": ["Substr", "TextToInteger", "Length"]}
{"text": "DateTimeToDate(AddDays(CommunityCustomEditionTable.List.Current.COMMUNITY_CUSTOM_EDITION.CreatedOn,TextToInteger(CommunityCustomEditionTable.List.Current.COMMUNITY_CUSTOM_EDITION.Term)))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "TextToInteger"]}
{"text": "DateTimeToDate(AddDays(ShowRecordRequest.Record.ChangeLog.Created, TextToInteger(ShowRecordRequest.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)-1))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "TextToInteger"]}
{"text": "\"(\" + IntegerToText(DiffDays(CurrDate(), AddDays(ShowRecordRequest.Record.ChangeLog.Created,TextToInteger(ShowRecordRequest.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) -1)", "type": "Text", "functions": ["IntegerToText", "DiffDays", "CurrDate", "AddDays", "TextToInteger"]}
{"text": "FormatDateTime(AddDays(CurrDate(),EditRequestLicense.Record.RequestLicenseOld.LicenseTermDays), \"dd MMMM yyyy\")", "type": "Text", "functions": ["FormatDateTime", "AddDays", "CurrDate"]}
{"text": "FormatDateTime(AddDays(CurrDate(),EditLicenseRequest.Record.RequestLicenseOld.LicenseTermDays), \"dd MMMM yyyy\")", "type": "Text", "functions": ["FormatDateTime", "AddDays", "CurrDate"]}
{"text": "FormatDateTime(AddDays(CurrDate(),EditLicenseRequest.Record.LicenseRequestOld.LicenseTermDays), \"dd MMMM yyyy\")", "type": "Text", "functions": ["FormatDateTime", "AddDays", "CurrDate"]}
{"text": "DateTimeToDate(AddDays(ShowRecordRequest2.Record.ChangeLog.Created, TextToInteger(ShowRecordRequest2.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)-1))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "TextToInteger"]}
{"text": "\"(\" + IntegerToText(DiffDays(CurrDate(), AddDays(ShowRecordRequest2.Record.ChangeLog.Created,TextToInteger(ShowRecordRequest2.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) -1)", "type": "Text", "functions": ["IntegerToText", "DiffDays", "CurrDate", "AddDays", "TextToInteger"]}
{"text": "DateTimeToDate(AddDays(ChangeLogShow.Record.ChangeLog.Created,TextToInteger(ChangeLogShow.Record.Licensing_CustomEditionLicenseTemplateTerm.Term)))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "TextToInteger"]}
{"text": "\"(\" + DiffDays(CurrDate(), AddDays(ChangeLogShow.Record.ChangeLog.Created,TextToInteger(ChangeLogShow.Record.Licensing_CustomEditionLicenseTemplateTerm.Term))) + \")\"", "type": "Text", "functions": ["DiffDays", "CurrDate", "AddDays", "TextToInteger"]}
{"text": "\"<script type='text/javascript'>\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n    console.log(file);\n    console.log(file.name);    \n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val(file.name);\n        console.log('saveFileName() - filename changed');\n    }\n}\n\nfunction uploadFile() {\n    NProgress.start();\n\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n\n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n        console.log('uploadFile() - filename changed');\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + CaseId_Hash + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + FormParametersDate + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + FormParametersDate + \"T000000Z');\n        fd.append('Policy', '\" + PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    NProgress.done();\n}\n</script>\"", "type": "Text", "functions": ["Replace", "DateTimeToText", "CurrDateTime"]}
{"text": "\"<script type='text/javascript'>\nvar alreadyUploaded = false;\n$('#\" + Upload.Id + \"').change(function() {\n    alreadyUploaded = false;\n});\n\nfunction uploadFile() {\n\n\n    var file = document.getElementById('\" + Upload.Id + \"').files[0];\n\n    if (file !== undefined && file !== null && !alreadyUploaded) {\n        NProgress.start();\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + EncodeUrl(CaseGUID) + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + FormParametersDate + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + FormParametersDate + \"T000000Z');\n        fd.append('Policy', '\" + PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    alreadyUploaded = true;\n    $('#\" + hiddenSubmitEnterprise.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n</script>\"", "type": "Text", "functions": ["Replace", "DateTimeToText", "CurrDateTime", "EncodeUrl"]}
{"text": "\"<script type='text/javascript'>\nvar alreadyUploaded = false;\n$('#\" + Upload1.Id + \"').change(function() {\n    alreadyUploaded = false;\n});\n\n\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload1.Id + \"').files[0]; \n    if (file !== undefined && file !== null) {\n        $('#\" + FileNameInput.Id + \"').val(file.name);\n    }\n}\n\nfunction uploadFile() {\n    var file = document.getElementById('\"+Upload1.Id+\"').files[0];\n\n    if (file !== undefined && file !== null && !alreadyUploaded) {\n        NProgress.start();\n        var filename = '\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name;\n        \n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + EncodeUrl(CaseGUID) + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + GetFormParameters.Date + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + GetFormParameters.Date + \"T000000Z');\n        fd.append('Policy', '\" + GetFormParameters.PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + GetFormParameters.Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', function(evt){ uploadComplete(filename); }, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmit.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(filename) {\n    NProgress.done();\n    alreadyUploaded = true;\n    $('#\" + FileNameWithTimestampInput.Id + \"').val(filename);\n    $('#\" + hiddenSubmit.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    alreadyUploaded = false;\n    NProgress.done();\n}\n</script>\"", "type": "Text", "functions": ["Replace", "DateTimeToText", "CurrDateTime", "EncodeUrl"]}
{"text": "\"<script type='text/javascript'>\nfunction saveFileName() {\n    var file = document.getElementById('\" + Upload1.Id + \"').files[0]; \n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val(file.name);\n        console.log('saveFileName() - filename changed');\n    }\n}\n\nfunction uploadFile() {\n    NProgress.start();\n\n    var file = document.getElementById('\"+Upload1.Id+\"').files[0];\n\n    if (file !== undefined && file !== null) {\n        $('#\" + UploadFileName.Id + \"').val('\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"'+file.name);\n\n        var fd = new FormData();\n\n        fd.append('key', 'cases/tmp/\" + Case_Hash.CaseId_Hash + \"/\"+Replace(Replace(Replace(DateTimeToText(CurrDateTime()),\" \",\"\"),\"-\",\"\"),\":\",\"\")+\"${filename}');\n        fd.append('acl', 'private');\n        fd.append('success_action_redirect', '\" + Site.SupportPortalURL + \"/SupportPortal/ThankYou.aspx');\n        fd.append('X-Amz-Credential', '\" + Site.Amazon_AccessKey + \"/\" + GetFormParameters.Date + \"/\" + Site.Amazon_Region + \"/s3/aws4_request');\n        fd.append('X-Amz-Server-Side-Encryption', 'AES256');\n        fd.append('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n        fd.append('X-Amz-Date', '\" + GetFormParameters.Date + \"T000000Z');\n        fd.append('Policy', '\" + GetFormParameters.PolicyBlob + \"');\n        fd.append('X-Amz-Signature', '\" + GetFormParameters.Signature + \"');\n        fd.append('Content-Type', file.type);\n\n\n        fd.append('file', file);\n\n        var xhr = getXMLHTTPObject();\n\n        //xhr.upload.addEventListener('progress', uploadProgress, false);\n        xhr.addEventListener('load', uploadComplete, false);\n        xhr.addEventListener('error', uploadFailed, false);\n        xhr.addEventListener('abort', uploadCanceled, false);\n\n        xhr.open('POST', 'https://\" + Site.Amazon_Bucket + \".s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n        xhr.send(fd);\n\n        NProgress.inc();\n    } else {\n        $('#\" + hiddenSubmit.Id + \"').click();\n    }\n\n\n}\n\n\nfunction uploadProgress(evt) {\n    if (evt.lengthComputable) {\n        var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n        var progressPercentComplete = (percentComplete / 100);\n\n        NProgress.set(progressPercentComplete);\n    } else {\n        //'unable to compute';\n    }\n}\n\nfunction uploadComplete(evt) {\n    NProgress.done();\n    $('#\" + hiddenSubmit.Id + \"').click();\n}\n\nfunction uploadFailed(evt) {\n    NProgress.done();\n}\n\nfunction uploadCanceled(evt) {\n    NProgress.done();\n}\n</script>\"", "type": "Text", "functions": ["Replace", "DateTimeToText", "CurrDateTime"]}
{"text": "ListComments.List.Current.AuthorName + \" on \" + \nDateTimeToDate(ListComments.List.Current.CreatedAt) + \" \" + FormatText(Hour(ListComments.List.Current.CreatedAt), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ListComments.List.Current.CreatedAt), 2, 2, True, \"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.Cc, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.Cc, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.Cc, \">\") - 2), \">\", \"\")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.To, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.To, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.To, \">\") - 2), \">\", \"\")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "Replace(Substr(ProjectEmailTable.List.Current.ProjectEmail.From, \n    Index(ProjectEmailTable.List.Current.ProjectEmail.From, \"<\") + 1,\n    Index(ProjectEmailTable.List.Current.ProjectEmail.From, \">\") - 2), \">\", \"\")", "type": "Text", "functions": ["Replace", "Substr", "Index"]}
{"text": "FormatText(Month(TableRecords1.List.Current.ClienteMisterio.Mes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ClienteMisterio.Mes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords1.List.Current.TaxasOcupacaoHoteis.Mes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.TaxasOcupacaoHoteis.Mes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords2.List.Current.VistoriasBAR.Mes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords2.List.Current.VistoriasBAR.Mes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords1.List.Current.VistoriasBAR.Mes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords1.List.Current.VistoriasBAR.Mes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords4.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords4.List.Current.DataFechoRenda.DataMes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords3.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords3.List.Current.DataFechoRenda.DataMes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords2.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords2.List.Current.DataFechoRenda.DataMes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords1.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"-\" + Year(TableRecords1.List.Current.DataFechoRenda.DataMes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords1.List.Current.DataFechoRenda.DataMes), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.DataFechoRenda.DataMes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Month(TableRecords1.List.Current.CLOSE_MONTH.Month), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.CLOSE_MONTH.Month)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Day(TableRecords1.List.Current.ReportMovimentosSIBS.Data), 2, 2, True, \"0\") + \"/\" + FormatText(Month(TableRecords1.List.Current.ReportMovimentosSIBS.Data), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ReportMovimentosSIBS.Data)", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year"]}
{"text": "FormatText(Month(GetFechoMensalById.List.Current.FECHO_MENSAL.Mes), 2, 2, True, \"0\") + \"/\" + Year(GetFechoMensalById.List.Current.FECHO_MENSAL.Mes)", "type": "Text", "functions": ["FormatText", "Month", "Year"]}
{"text": "FormatText(Day(TableRecords1.List.Current.ReportMovimentosUNICRE.Data), 2, 2, True, \"0\") + \"/\" + FormatText(Month(TableRecords1.List.Current.ReportMovimentosUNICRE.Data), 2, 2, True, \"0\") + \"/\" + Year(TableRecords1.List.Current.ReportMovimentosUNICRE.Data)", "type": "Text", "functions": ["FormatText", "Day", "Month", "Year"]}
{"text": "NewDate(TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 0, 4)), TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 4, 2)), TextToInteger(Substr(TableRecords2.List.Current.FICHEIRO_SIBS_PAG.IdFicheiro, 6, 2)))", "type": "Date", "functions": ["NewDate", "TextToInteger", "Substr"]}
{"text": "NewDate(TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 4, 4)), TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 8, 2)), TextToInteger(Substr(TableRecords1.List.Current.FICHEIRO_SIBS_PAG.Nome, 10, 2)))", "type": "Date", "functions": ["NewDate", "TextToInteger", "Substr"]}
{"text": "\"<script type='text/javascript'>\n      RichWidgets_Popup_Editor_init('\"+ LinkOrButtonId +\"',\n'\" + ReusablePopupEditor.RuntimeId + \"','\" + EncodeJavaScript( Title) + \"',\" + HeightPx + \",\" + WidthPx + \",'\" + EncodeJavaScript(GetBookmarkableURL()) + \"', \" + ToLower(BooleanToText(True)) + \", 1);\n </script>\"\n", "type": "Text", "functions": ["EncodeJavaScript", "GetBookmarkableURL", "ToLower", "BooleanToText"]}
{"text": "\"https://\" + ToLower(Replace(Trim(Session.ClientInfo.Name), \" \", \"\")) + \".myadv.co.uk\"", "type": "Text", "functions": ["ToLower", "Replace", "Trim"]}
{"text": "FormatDecimal(\n  TextToDecimal(Replace(Replace(FacturasTable.List.Current.Listagem_FimDeDiaOuTurno_List.Total_ANA,\".\",\"\"),\",\",\".\")) + TextToDecimal(Replace(Replace(FacturasTable.List.Current.Listagem_FimDeDiaOuTurno_List.Total_NAV,\".\",\"\"),\",\",\".\")), 2, Site.DecimalSeparator, Site.GroupSeparator)", "type": "Text", "functions": ["FormatDecimal", "TextToDecimal", "Replace"]}
{"text": "DateTimeToDate(TableRecords1.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords1.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.Note.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords4.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords4.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords4.List.Current.Note.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords3.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords3.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords3.List.Current.Note.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(TableRecords2.List.Current.Note.Date) + \" \" + FormatText(Hour(TableRecords2.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords2.List.Current.Note.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "DateTimeToDate(AddDays(CurrDate(),(-1*Site.N_Days2UpdateValues)))", "type": "Date", "functions": ["DateTimeToDate", "AddDays", "CurrDate"]}
{"text": "DateTimeToDate(trDocuments.List.Current.NOTE.CreatedAt) + \" \" + FormatText(Hour(trDocuments.List.Current.NOTE.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(trDocuments.List.Current.NOTE.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "Trim(Replace(ZConditioningTypesTable.List.Current.BO_ZConditioningTypesToListAndExcel.RequestType,\";\",NewLine()))\n", "type": "Text", "functions": ["Trim", "Replace", "NewLine"]}
{"text": "Trim(Replace(ZResidueOperatorTable.List.Current.BO_ZResidueOperatorToListAndExcel.RequestType,\";\",NewLine()))", "type": "Text", "functions": ["Trim", "Replace", "NewLine"]}
{"text": "DateTimeToDate(tRecDocuments.List.Current.Note.Date) + \" \" + FormatText(Hour(tRecDocuments.List.Current.Note.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(tRecDocuments.List.Current.Note.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "Day(GetArticleById.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticleById.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticleById.List.Current.Article.PublishedFrom)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticlesByArticleTypeId.List.Current.Article.PublishedFrom)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "\"<span class=\"\"data\"\">\"+Day(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Month(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Year(ListRecords1.List.Current.Article.PublishedFrom)+\"</span></li>\"", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ListRecords1.List.Current.NewsLetter.Publishdate)+\"/\"+Month(ListRecords1.List.Current.NewsLetter.Publishdate)+\"/\"+Year(ListRecords1.List.Current.NewsLetter.Publishdate)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(GetArticles.List.Current.Article.PublishedFrom)+\"/\"+Month(GetArticles.List.Current.Article.PublishedFrom)+\"/\"+Year(GetArticles.List.Current.Article.PublishedFrom)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "Day(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Month(ListRecords1.List.Current.Article.PublishedFrom)+\"/\"+Year(ListRecords1.List.Current.Article.PublishedFrom)", "type": "Text", "functions": ["Day", "Month", "Year"]}
{"text": "DateTimeToDate(trDocuments.List.Current.DocumentsList.CreatedAt) + \" \" + FormatText(Hour(trDocuments.List.Current.DocumentsList.CreatedAt),2,2,True,\"0\") + \":\" + FormatText(Minute(trDocuments.List.Current.DocumentsList.CreatedAt),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "Substr(TRControlsList.List.Current.Control_List.Object,Index(TRControlsList.List.Current.Control_List.Object,\" \") + 1,Length(TRControlsList.List.Current.Control_List.Object))", "type": "Text", "functions": ["Substr", "Index", "Length"]}
{"text": "Abs(DiffDays(CurrDate(),ProjectList.Current.ProjectControlList.TimeToMarket)) + \" dias\"", "type": "Text", "functions": ["Abs", "DiffDays", "CurrDate"]}
{"text": "\"<script language=\"\"JavaScript\"\">\n\nvar currentTime = new Date()\nvar year=\"+Year(GetReport.List.Current.REPORT.CreationDate)+\";\nvar month=\"+Month(GetReport.List.Current.REPORT.CreationDate)+\";\nvar day=\"+Day(GetReport.List.Current.REPORT.CreationDate)+\";\nvar hours=\"+Hour(GetReport.List.Current.REPORT.CreationDate)+\";\nvar minutes=\"+Minute(GetReport.List.Current.REPORT.CreationDate)+\";\nvar currentDateTime = new Date(year, month-1,day, hours, minutes);\nvar startTime = new Date(currentDateTime);\nvar start = new Date(currentDateTime);\nvar end = 0\nvar diff = 0\nvar timerID = 0\nvar msg_close =''\nvar msg_pre_close =''\nvar max_minutes=0;\nmsg_inicial='\"+msgIni+\"';\nmsg_close='\"+Site.msg_close+\"';\nmsg_pre_close='\"+Site.msg_pre_close+\"';\nmax_minutes=\"+Site.MaxMinutes2CompleatReport+\";\n\nfunction chrono(){\n\tend = new Date()\n\tdiff = end - start\n\tdiff = new Date(diff)\n\tvar msec = diff.getMilliseconds()\n\tvar sec = diff.getSeconds()\n\tvar min = diff.getMinutes()\n\tvar hr = diff.getHours()\n\tvar minutes2close = 0;\n\n\tminutes2close=max_minutes-diff.getMinutes();\n\tif (min < 10){\n\t\tmin = \"\"0\"\" + min\n\t}\n\n\n\tif ( diff.getMinutes()<1 ){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_inicial ;\n\t}else if ( minutes2close >= 2 && minutes2close <=5){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_pre_close+\"\"  \"\"+(minutes2close) + \"\" minutos! \"\";\n\t}else if( minutes2close == 1  ){\n\t\t\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML =msg_pre_close+\"\"  \"\"+(minutes2close) + \"\" minuto! \"\";\n\t\t\t\tdocument.getElementById(\"\"\"+Site.bt_gravar+\"\"\").click();\t\t\t\t\n\n\t}else if(  minutes2close < 1   ){\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML = msg_close;\n\t\tdocument.getElementById(\"\"\"+Site.bt_gravar+\"\"\").click();\n\t}else {\n\t\tdocument.getElementById(\"\"chronotime\"\").innerHTML = msg_inicial+\"\" DispÃµe de \"\"+(minutes2close) + \"\" minutos! \"\"\n\t}\n\t\n\ttimerID = setTimeout(\"\"chrono()\"\", 60000)\n}\nfunction chronoStart(){\n\n\tstart = new Date(start)\n\tchrono()\n\t\n}\n\n</script>\n\n\n<span id=\"\"chronotime\"\">00</span>\n<script language=\"\"JavaScript\"\">\nchronoStart();\n</script>\"\n", "type": "Text", "functions": ["Year", "Month", "Day", "Hour", "Minute"]}
{"text": "Substr(Table.List.Current.ROLE.Name, Length(GetEntryEspaceName()) + 1, 50)", "type": "Text", "functions": ["Substr", "Length", "GetEntryEspaceName"]}
{"text": "DateTimeToDate(TableRecords1.List.Current.NOTE.Date) + \" \" + FormatText(Hour(TableRecords1.List.Current.NOTE.Date),2,2,True,\"0\") + \":\" + FormatText(Minute(TableRecords1.List.Current.NOTE.Date),2,2,True,\"0\")", "type": "Text", "functions": ["DateTimeToDate", "FormatText", "Hour", "Minute"]}
{"text": "\"Diff \" + Substr(Session.Filter_IncrementComparisonCompany.Filter_IncrementComparisonCompany.Year,2,2) + \"/\" + Substr(IntegerToText(TextToInteger(Session.Filter_IncrementComparisonCompany.Filter_IncrementComparisonCompany.Year) - 1),2,2)", "type": "Text", "functions": ["Substr", "IntegerToText", "TextToInteger"]}
{"text": "FormatText(Hour(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.StartHour), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.StartHour), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "FormatText(Hour(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.EndHour), 2, 2, True, \"0\") + \":\" + FormatText(Minute(ServiceAvailabilityTable.List.Current.SERVICE_AVAILABILITY.EndHour), 2, 2, True, \"0\")", "type": "Text", "functions": ["FormatText", "Hour", "Minute"]}
{"text": "NewLine()+\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded' style='display: block' \"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\"\n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'block');\"+NewLine()+\" \n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'none');\"+NewLine()+\"\n\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'none');\"\" >\"+NewLine()+\n\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_closed\",\"_expanded\")+NewLine()\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+\"  \"+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Gera um gera o grÃ¡fico desta Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/G_Pie.gif\"\"></a>\"+\n\n\"</div>\"+\n\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_closed' style='display: none'\"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'block');\"+NewLine()+\"  \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'none');\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'block');\"\" >\"+NewLine()+\n\t\t\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_expanded\",\"_closed\")\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Gera um gera o grÃ¡fico desta Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/G_Pie.gif\"\"></a>\"+\n\"</div>\"+NewLine()\n+ListAreas.List.Current.TreeRow.HTML_DIV\n", "type": "Text", "functions": ["NewLine", "Replace", "ToLower"]}
{"text": "NewLine()+\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded' style='display: block' \"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\"\n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'block');\"+NewLine()+\" \n\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'none');\"+NewLine()+\"\n\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'none');\"\" >\"+NewLine()+\n\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_closed\",\"_expanded\")+NewLine()\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+\"  \"+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Edita Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/arrow.png\"\"></a>\"+\n\n\"</div>\"+\n\"<div id='Show_\"+ListAreas.List.CurrentRowNumber+\"_closed' style='display: none'\"+NewLine()+\n\t  \" onclick=\"\"\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_expanded', 'block');\"+NewLine()+\"  \n\t\t\t\t\t\tshowDiv('Show_\"+ListAreas.List.CurrentRowNumber+\"_closed', 'none');\"+NewLine()+\" \n\t\t\t\t\t\tshowDiv('bloco\"+ListAreas.List.CurrentRowNumber+\"', 'block');\"\" >\"+NewLine()+\n\t\t\t\t\t\tReplace(ToLower(ListAreas.List.Current.TreeRow.LevelTxt),\"_expanded\",\"_closed\")\n\n+NewLine()+\n\"<img src=\"\"img/\"+ListAreas.List.Current.TreeRow.Image+\".png\"\"/>\"+NewLine()+\nListAreas.List.Current.TreeRow.Label+NewLine()+\n\"<a style=\"\"border:0px solid white;text-decoration:none;\"+NewLine()+\"\n\"\" href=\"\"\"+ListAreas.List.Current.TreeRow.URL+\"\"\">\"+NewLine()+\"\n<img title=\"\"Edita Ã�rea/TestScript \"\" border=0  width=\"\"10\"\" height=\"\"10\"\" src=\"\"img/arrow.png\"\"></a>\"+\n\"</div>\"+NewLine()\n+ListAreas.List.Current.TreeRow.HTML_DIV\n", "type": "Text", "functions": ["NewLine", "Replace", "ToLower"]}
{"text": "TrimEnd(TrimStart(Substr(VendasDivisaoTable.List.Current.VendasDivisao.Divisao,0,7)))", "type": "Text", "functions": ["TrimEnd", "TrimStart", "Substr"]}
{"text": "Hour(DateTimeToTime(TableRecordsPlannedMaintenances2.List.Current.PLANNED_MAINTENANCE.DateTimePLanned))+\":\"+\nMinute(DateTimeToTime(TableRecordsPlannedMaintenances2.List.Current.PLANNED_MAINTENANCE.DateTimePLanned))", "type": "Text", "functions": ["Hour", "DateTimeToTime", "Minute"]}
